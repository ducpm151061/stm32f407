ARM GAS  /tmp/ccWgdbjA.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"gui.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text._swap,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	_swap:
  26              	.LVL0:
  27              	.LFB139:
  28              		.file 1 "Core/Src/gui.c"
   1:Core/Src/gui.c **** //////////////////////////////////////////////////////////////////////////////////	 
   2:Core/Src/gui.c **** //±æ≥Ã–Ú÷ªπ©—ßœ∞ π”√£¨Œ¥æ≠◊˜’ﬂ–Ìø…£¨≤ªµ√”√”⁄∆‰À¸…Ã“µ”√Õæ
   3:Core/Src/gui.c **** //≤‚ ‘”≤º˛£∫µ•∆¨ª˙STM32F407VGT6,STM32F407VxT6◊Ó–°œµÕ≥ø™∑¢∞Â,÷˜∆µ168MHZ£¨æß’Ò8MHZ
   4:Core/Src/gui.c **** //QDtech-TFT“∫æß«˝∂Ø for STM32 FSMC
   5:Core/Src/gui.c **** //Chan@ShenZhen QDtech co.,LTD
   6:Core/Src/gui.c **** //π´ÀæÕ¯’æ:www.qdtft.com
   7:Core/Src/gui.c **** //wikiºº ı◊ ¡œÕ¯’æ£∫http://www.lcdwiki.com
   8:Core/Src/gui.c **** //Œ“ÀæÃ·π©ºº ı÷ß≥÷£¨»Œ∫Œºº ıŒ Ã‚ª∂”≠ÀÊ ±Ωª¡˜—ßœ∞
   9:Core/Src/gui.c **** //πÃª∞(¥´’Ê) :+86 0755-21077707 
  10:Core/Src/gui.c **** // ÷ª˙: (œ˙ €)18823372746 £®ºº ı)15989313508
  11:Core/Src/gui.c **** //” œ‰:(œ˙ €/∂©µ•) sales@qdtft.com  ( €∫Û/ºº ı∑˛ŒÒ)service@qdtft.com
  12:Core/Src/gui.c **** //QQ:( €«∞◊…—Ø)3002706772 (ºº ı÷ß≥÷)3002778157
  13:Core/Src/gui.c **** //ºº ıΩª¡˜QQ»∫:778679828
  14:Core/Src/gui.c **** //¥¥Ω®»’∆⁄:2020/06/29
  15:Core/Src/gui.c **** //∞Ê±æ£∫V1.0
  16:Core/Src/gui.c **** //∞Ê»®À˘”–£¨µ¡∞Ê±ÿæø°£
  17:Core/Src/gui.c **** //Copyright(C) …Ó€⁄ –»´∂ØµÁ◊”ºº ı”–œﬁπ´Àæ 2018-2028
  18:Core/Src/gui.c **** //All rights reserved
  19:Core/Src/gui.c **** /************************************************************************************
  20:Core/Src/gui.c **** //STM32F407VxT6◊Ó–°œµÕ≥ø™∑¢∞Â¥•√˛∆¡ æ¿˝
  21:Core/Src/gui.c **** //     LED0                 --->            PA1
  22:Core/Src/gui.c **** //     KEY0                 --->            PE4
  23:Core/Src/gui.c **** //     24C02_IIC_SCL        --->            PB8
  24:Core/Src/gui.c **** //     24C02_IIC_SDA        --->            PB9
  25:Core/Src/gui.c **** //÷ß≥÷ILI9341/ILI9486/ILI9488/ST7793/ST7796S/R61509/NT35310/NT35510/SSD1963
  26:Core/Src/gui.c **** //TFT LCDø…“‘÷±Ω”≤Â»ÎSTM32F407VxT6◊Ó–°œµÕ≥ø™∑¢∞ÂTFTLCD≤Â≤€ªÚ’ﬂÕ®π˝≈≈œﬂΩ”»ÎTFTLCD≤Â◊˘
  27:Core/Src/gui.c **** //STM32¡¨Ω”“˝Ω≈ «÷∏TFTLCD≤Â≤€ªÚ’ﬂ≤Â◊˘“˝Ω≈ƒ⁄≤ø¡¨Ω”µƒSTM32“˝Ω≈
  28:Core/Src/gui.c **** //=================================µÁ‘¥Ω”œﬂ=======================================//
  29:Core/Src/gui.c **** //     LCDƒ£øÈ                    STM32¡¨Ω”“˝Ω≈
  30:Core/Src/gui.c **** //      VDD           --->           DC5V/3.3V          //µÁ‘¥
ARM GAS  /tmp/ccWgdbjA.s 			page 2


  31:Core/Src/gui.c **** //      GND           --->             GND              //µÁ‘¥µÿ
  32:Core/Src/gui.c **** //=============================“∫æß∆¡ ˝æ›œﬂΩ”œﬂ===================================//
  33:Core/Src/gui.c **** //     LCDƒ£øÈ                    STM32¡¨Ω”“˝Ω≈
  34:Core/Src/gui.c **** //      DB0           --->            PD14        -|   
  35:Core/Src/gui.c **** //      DB1           --->            PD15         |  
  36:Core/Src/gui.c **** //      DB2           --->            PD0          | 
  37:Core/Src/gui.c **** //      DB3           --->            PD1          | 
  38:Core/Src/gui.c **** //      DB4           --->            PE7          |
  39:Core/Src/gui.c **** //      DB5           --->            PE8          |
  40:Core/Src/gui.c **** //      DB6           --->            PE9          |
  41:Core/Src/gui.c **** //      DB7           --->            PE10         |===>“∫æß∆¡16Œª≤¢ø⁄ ˝æ›–≈∫≈
  42:Core/Src/gui.c **** //      DB8           --->            PE11         |
  43:Core/Src/gui.c **** //      DB9           --->            PE12         |
  44:Core/Src/gui.c **** //      DB10          --->            PE13         |
  45:Core/Src/gui.c **** //      DB11          --->            PE14         |
  46:Core/Src/gui.c **** //      DB12          --->            PE15         |
  47:Core/Src/gui.c **** //      DB13          --->            PD8          |
  48:Core/Src/gui.c **** //      DB14          --->            PD9          |
  49:Core/Src/gui.c **** //      DB15          --->            PD10        -|
  50:Core/Src/gui.c **** //=============================“∫æß∆¡øÿ÷∆œﬂΩ”œﬂ===================================//
  51:Core/Src/gui.c **** //     LCDƒ£øÈ 				            STM32¡¨Ω”“˝Ω≈ 
  52:Core/Src/gui.c **** //      WR            --->            PD5             //“∫æß∆¡–¥ ˝æ›øÿ÷∆–≈∫≈
  53:Core/Src/gui.c **** //      RD            --->            PD4             //“∫æß∆¡∂¡ ˝æ›øÿ÷∆–≈∫≈
  54:Core/Src/gui.c **** //      RS            --->            PD11            //“∫æß∆¡ ˝æ›/√¸¡Óøÿ÷∆–≈∫≈
  55:Core/Src/gui.c **** //      RST           --->          ∏¥Œª“˝Ω≈£®ƒ¨»œ£©  //“∫æß∆¡∏¥Œªøÿ÷∆–≈∫≈£®“≤ø…—°‘ÒPD13£©
  56:Core/Src/gui.c **** //      CS            --->            PD7             //“∫æß∆¡∆¨—°øÿ÷∆–≈∫≈
  57:Core/Src/gui.c **** //      BL            --->            PB15            //“∫æß∆¡±≥π‚øÿ÷∆–≈∫≈
  58:Core/Src/gui.c **** //===============================¥•√˛∆¡¥•Ω”œﬂ=====================================//
  59:Core/Src/gui.c **** //	   LCDƒ£øÈ                    STM32¡¨Ω”“˝Ω≈ 
  60:Core/Src/gui.c **** //      PEN           --->            PB1             //µÁ»›ªÚµÁ◊Ë¥•√˛∆¡¥•√˛÷–∂œ–≈∫≈
  61:Core/Src/gui.c **** //      MI            --->            PB2             //µÁ◊Ë¥•√˛∆¡SPI◊‹œﬂ∂¡–≈∫≈
  62:Core/Src/gui.c **** //      MO            --->            PC4             //µÁ◊Ë¥•√˛∆¡SPI◊‹œﬂ–¥–≈∫≈ªÚµÁ»›¥•√˛∆¡IIC◊‹œﬂ 
  63:Core/Src/gui.c **** //      TCS           --->            PC13            //µÁ◊Ë¥•√˛∆¡∆¨—°øÿ÷∆–≈∫≈ªÚµÁ»›¥•√˛∆¡∏¥Œª–≈∫≈
  64:Core/Src/gui.c **** //      TCK           --->            PB0             //µÁ◊Ë¥•√˛∆¡SPI◊‹œﬂªÚµÁ»›¥•√˛∆¡IIC◊‹œﬂ ±÷”–≈∫
  65:Core/Src/gui.c **** *************************************************************************************/	
  66:Core/Src/gui.c ****  /* @attention
  67:Core/Src/gui.c ****   *
  68:Core/Src/gui.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  69:Core/Src/gui.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  70:Core/Src/gui.c ****   * TIME. AS A RESULT, QD electronic SHALL NOT BE HELD LIABLE FOR ANY
  71:Core/Src/gui.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  72:Core/Src/gui.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  73:Core/Src/gui.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  74:Core/Src/gui.c **** *************************************************************************************/			
  75:Core/Src/gui.c **** #include "lcd.h"
  76:Core/Src/gui.c **** #include "string.h"
  77:Core/Src/gui.c **** #include "font.h" 
  78:Core/Src/gui.c **** #include "delay.h"
  79:Core/Src/gui.c **** #include "gui.h"
  80:Core/Src/gui.c **** 
  81:Core/Src/gui.c **** /*******************************************************************
  82:Core/Src/gui.c ****  * @name       :void GUI_DrawPoint(u16 x,u16 y,u16 color)
  83:Core/Src/gui.c ****  * @date       :2018-08-09 
  84:Core/Src/gui.c ****  * @function   :draw a point in LCD screen
  85:Core/Src/gui.c ****  * @parameters :x:the x coordinate of the point
  86:Core/Src/gui.c ****                 y:the y coordinate of the point
  87:Core/Src/gui.c **** 								color:the color value of the point
ARM GAS  /tmp/ccWgdbjA.s 			page 3


  88:Core/Src/gui.c ****  * @retvalue   :None
  89:Core/Src/gui.c **** ********************************************************************/
  90:Core/Src/gui.c **** void GUI_DrawPoint(u16 x,u16 y,u16 color)
  91:Core/Src/gui.c **** {
  92:Core/Src/gui.c **** 	LCD_SetCursor(x,y);//…Ë÷√π‚±ÍŒª÷√ 
  93:Core/Src/gui.c **** 	Lcd_WriteData_16Bit(color); 
  94:Core/Src/gui.c **** }
  95:Core/Src/gui.c **** 
  96:Core/Src/gui.c **** /*******************************************************************
  97:Core/Src/gui.c ****  * @name       :void LCD_Fill(u16 sx,u16 sy,u16 ex,u16 ey,u16 color)
  98:Core/Src/gui.c ****  * @date       :2018-08-09 
  99:Core/Src/gui.c ****  * @function   :fill the specified area
 100:Core/Src/gui.c ****  * @parameters :sx:the bebinning x coordinate of the specified area
 101:Core/Src/gui.c ****                 sy:the bebinning y coordinate of the specified area
 102:Core/Src/gui.c **** 								ex:the ending x coordinate of the specified area
 103:Core/Src/gui.c **** 								ey:the ending y coordinate of the specified area
 104:Core/Src/gui.c **** 								color:the filled color value
 105:Core/Src/gui.c ****  * @retvalue   :None
 106:Core/Src/gui.c **** ********************************************************************/
 107:Core/Src/gui.c **** void LCD_Fill(u16 sx,u16 sy,u16 ex,u16 ey,u16 color)
 108:Core/Src/gui.c **** {  	
 109:Core/Src/gui.c **** 	u16 i,j;			
 110:Core/Src/gui.c **** 	u16 width=ex-sx+1; 		//µ√µΩÃÓ≥‰µƒøÌ∂»
 111:Core/Src/gui.c **** 	u16 height=ey-sy+1;		//∏ﬂ∂»
 112:Core/Src/gui.c **** 	LCD_SetWindows(sx,sy,ex,ey);//…Ë÷√œ‘ æ¥∞ø⁄
 113:Core/Src/gui.c **** 	for(i=0;i<height;i++)
 114:Core/Src/gui.c **** 	{
 115:Core/Src/gui.c **** 		for(j=0;j<width;j++)
 116:Core/Src/gui.c **** 		Lcd_WriteData_16Bit(color);	//–¥»Î ˝æ› 	 
 117:Core/Src/gui.c **** 	}
 118:Core/Src/gui.c **** 	LCD_SetWindows(0,0,lcddev.width-1,lcddev.height-1);//ª÷∏¥¥∞ø⁄…Ë÷√Œ™»´∆¡
 119:Core/Src/gui.c **** }
 120:Core/Src/gui.c **** 
 121:Core/Src/gui.c **** /*******************************************************************
 122:Core/Src/gui.c ****  * @name       :void LCD_DrawLine(u16 x1, u16 y1, u16 x2, u16 y2)
 123:Core/Src/gui.c ****  * @date       :2018-08-09 
 124:Core/Src/gui.c ****  * @function   :Draw a line between two points
 125:Core/Src/gui.c ****  * @parameters :x1:the bebinning x coordinate of the line
 126:Core/Src/gui.c ****                 y1:the bebinning y coordinate of the line
 127:Core/Src/gui.c **** 								x2:the ending x coordinate of the line
 128:Core/Src/gui.c **** 								y2:the ending y coordinate of the line
 129:Core/Src/gui.c ****  * @retvalue   :None
 130:Core/Src/gui.c **** ********************************************************************/
 131:Core/Src/gui.c **** void LCD_DrawLine(u16 x1, u16 y1, u16 x2, u16 y2)
 132:Core/Src/gui.c **** {
 133:Core/Src/gui.c **** 	u16 t; 
 134:Core/Src/gui.c **** 	int xerr=0,yerr=0,delta_x,delta_y,distance; 
 135:Core/Src/gui.c **** 	int incx,incy,uRow,uCol; 
 136:Core/Src/gui.c **** 
 137:Core/Src/gui.c **** 	delta_x=x2-x1; //º∆À„◊¯±Í‘ˆ¡ø 
 138:Core/Src/gui.c **** 	delta_y=y2-y1; 
 139:Core/Src/gui.c **** 	uRow=x1; 
 140:Core/Src/gui.c **** 	uCol=y1; 
 141:Core/Src/gui.c **** 	if(delta_x>0)incx=1; //…Ë÷√µ•≤Ω∑ΩœÚ 
 142:Core/Src/gui.c **** 	else if(delta_x==0)incx=0;//¥π÷±œﬂ 
 143:Core/Src/gui.c **** 	else {incx=-1;delta_x=-delta_x;} 
 144:Core/Src/gui.c **** 	if(delta_y>0)incy=1; 
ARM GAS  /tmp/ccWgdbjA.s 			page 4


 145:Core/Src/gui.c **** 	else if(delta_y==0)incy=0;//ÀÆ∆Ωœﬂ 
 146:Core/Src/gui.c **** 	else{incy=-1;delta_y=-delta_y;} 
 147:Core/Src/gui.c **** 	if( delta_x>delta_y)distance=delta_x; //—°»°ª˘±æ‘ˆ¡ø◊¯±Í÷· 
 148:Core/Src/gui.c **** 	else distance=delta_y; 
 149:Core/Src/gui.c **** 	for(t=0;t<=distance+1;t++ )//ª≠œﬂ ‰≥ˆ 
 150:Core/Src/gui.c **** 	{  
 151:Core/Src/gui.c **** 		LCD_DrawPoint(uRow,uCol);//ª≠µ„ 
 152:Core/Src/gui.c **** 		xerr+=delta_x ; 
 153:Core/Src/gui.c **** 		yerr+=delta_y ; 
 154:Core/Src/gui.c **** 		if(xerr>distance) 
 155:Core/Src/gui.c **** 		{ 
 156:Core/Src/gui.c **** 			xerr-=distance; 
 157:Core/Src/gui.c **** 			uRow+=incx; 
 158:Core/Src/gui.c **** 		} 
 159:Core/Src/gui.c **** 		if(yerr>distance) 
 160:Core/Src/gui.c **** 		{ 
 161:Core/Src/gui.c **** 			yerr-=distance; 
 162:Core/Src/gui.c **** 			uCol+=incy; 
 163:Core/Src/gui.c **** 		} 
 164:Core/Src/gui.c **** 	}  
 165:Core/Src/gui.c **** } 
 166:Core/Src/gui.c **** 
 167:Core/Src/gui.c **** /*******************************************************************
 168:Core/Src/gui.c ****  * @name       :void LCD_DrawLine2(u16 x1, u16 y1, u16 x2, u16 y2, u16 size, u16 color)
 169:Core/Src/gui.c ****  * @date       :2018-08-09 
 170:Core/Src/gui.c ****  * @function   :Draw a line between two points
 171:Core/Src/gui.c ****  * @parameters :x1:the bebinning x coordinate of the line
 172:Core/Src/gui.c ****                 y1:the bebinning y coordinate of the line
 173:Core/Src/gui.c **** 								x2:the ending x coordinate of the line
 174:Core/Src/gui.c **** 								y2:the ending y coordinate of the line
 175:Core/Src/gui.c **** 								size: the size of the line
 176:Core/Src/gui.c **** 								color: the color of the line
 177:Core/Src/gui.c ****  * @retvalue   :None
 178:Core/Src/gui.c **** ********************************************************************/
 179:Core/Src/gui.c **** void LCD_DrawLine2(u16 x1, u16 y1, u16 x2, u16 y2, u16 size, u16 color)
 180:Core/Src/gui.c **** {
 181:Core/Src/gui.c **** 	u16 t; 
 182:Core/Src/gui.c **** 	int xerr=0,yerr=0,delta_x,delta_y,distance; 
 183:Core/Src/gui.c **** 	int incx,incy,uRow,uCol; 
 184:Core/Src/gui.c **** 	if(x1<size||x2<size||y1<size||y2<size)
 185:Core/Src/gui.c **** 	{
 186:Core/Src/gui.c **** 		return;
 187:Core/Src/gui.c **** 	}
 188:Core/Src/gui.c **** 	delta_x=x2-x1; //º∆À„◊¯±Í‘ˆ¡ø 
 189:Core/Src/gui.c **** 	delta_y=y2-y1; 
 190:Core/Src/gui.c **** 	uRow=x1; 
 191:Core/Src/gui.c **** 	uCol=y1; 
 192:Core/Src/gui.c **** 	if(delta_x>0)incx=1; //…Ë÷√µ•≤Ω∑ΩœÚ 
 193:Core/Src/gui.c **** 	else if(delta_x==0)incx=0;//¥π÷±œﬂ 
 194:Core/Src/gui.c **** 	else {incx=-1;delta_x=-delta_x;} 
 195:Core/Src/gui.c **** 	if(delta_y>0)incy=1; 
 196:Core/Src/gui.c **** 	else if(delta_y==0)incy=0;//ÀÆ∆Ωœﬂ 
 197:Core/Src/gui.c **** 	else{incy=-1;delta_y=-delta_y;} 
 198:Core/Src/gui.c **** 	if( delta_x>delta_y)distance=delta_x; //—°»°ª˘±æ‘ˆ¡ø◊¯±Í÷· 
 199:Core/Src/gui.c **** 	else distance=delta_y; 
 200:Core/Src/gui.c **** 	for(t=0;t<=distance+1;t++ )//ª≠œﬂ ‰≥ˆ 
 201:Core/Src/gui.c **** 	{  
ARM GAS  /tmp/ccWgdbjA.s 			page 5


 202:Core/Src/gui.c **** 		gui_circle(uRow, uCol,color, size, 1);
 203:Core/Src/gui.c **** 		//LCD_DrawPoint(uRow,uCol);//ª≠µ„ 
 204:Core/Src/gui.c **** 		xerr+=delta_x ; 
 205:Core/Src/gui.c **** 		yerr+=delta_y ; 
 206:Core/Src/gui.c **** 		if(xerr>distance) 
 207:Core/Src/gui.c **** 		{ 
 208:Core/Src/gui.c **** 			xerr-=distance; 
 209:Core/Src/gui.c **** 			uRow+=incx; 
 210:Core/Src/gui.c **** 		} 
 211:Core/Src/gui.c **** 		if(yerr>distance) 
 212:Core/Src/gui.c **** 		{ 
 213:Core/Src/gui.c **** 			yerr-=distance; 
 214:Core/Src/gui.c **** 			uCol+=incy; 
 215:Core/Src/gui.c **** 		} 
 216:Core/Src/gui.c **** 	}  
 217:Core/Src/gui.c **** } 
 218:Core/Src/gui.c **** 
 219:Core/Src/gui.c **** /*****************************************************************************
 220:Core/Src/gui.c ****  * @name       :void LCD_DrawRectangle(u16 x1, u16 y1, u16 x2, u16 y2)
 221:Core/Src/gui.c ****  * @date       :2018-08-09 
 222:Core/Src/gui.c ****  * @function   :Draw a rectangle
 223:Core/Src/gui.c ****  * @parameters :x1:the bebinning x coordinate of the rectangle
 224:Core/Src/gui.c ****                 y1:the bebinning y coordinate of the rectangle
 225:Core/Src/gui.c **** 								x2:the ending x coordinate of the rectangle
 226:Core/Src/gui.c **** 								y2:the ending y coordinate of the rectangle
 227:Core/Src/gui.c ****  * @retvalue   :None
 228:Core/Src/gui.c **** ******************************************************************************/
 229:Core/Src/gui.c **** void LCD_DrawRectangle(u16 x1, u16 y1, u16 x2, u16 y2)
 230:Core/Src/gui.c **** {
 231:Core/Src/gui.c **** 	LCD_DrawLine(x1,y1,x2,y1);
 232:Core/Src/gui.c **** 	LCD_DrawLine(x1,y1,x1,y2);
 233:Core/Src/gui.c **** 	LCD_DrawLine(x1,y2,x2,y2);
 234:Core/Src/gui.c **** 	LCD_DrawLine(x2,y1,x2,y2);
 235:Core/Src/gui.c **** }  
 236:Core/Src/gui.c **** 
 237:Core/Src/gui.c **** /*****************************************************************************
 238:Core/Src/gui.c ****  * @name       :void LCD_DrawFillRectangle(u16 x1, u16 y1, u16 x2, u16 y2)
 239:Core/Src/gui.c ****  * @date       :2018-08-09 
 240:Core/Src/gui.c ****  * @function   :Filled a rectangle
 241:Core/Src/gui.c ****  * @parameters :x1:the bebinning x coordinate of the filled rectangle
 242:Core/Src/gui.c ****                 y1:the bebinning y coordinate of the filled rectangle
 243:Core/Src/gui.c **** 								x2:the ending x coordinate of the filled rectangle
 244:Core/Src/gui.c **** 								y2:the ending y coordinate of the filled rectangle
 245:Core/Src/gui.c ****  * @retvalue   :None
 246:Core/Src/gui.c **** ******************************************************************************/  
 247:Core/Src/gui.c **** void LCD_DrawFillRectangle(u16 x1, u16 y1, u16 x2, u16 y2)
 248:Core/Src/gui.c **** {
 249:Core/Src/gui.c **** 	LCD_Fill(x1,y1,x2,y2,POINT_COLOR);
 250:Core/Src/gui.c **** }
 251:Core/Src/gui.c ****  
 252:Core/Src/gui.c **** /*****************************************************************************
 253:Core/Src/gui.c ****  * @name       :void _draw_circle_8(int xc, int yc, int x, int y, u16 c)
 254:Core/Src/gui.c ****  * @date       :2018-08-09 
 255:Core/Src/gui.c ****  * @function   :8 symmetry circle drawing algorithm (internal call)
 256:Core/Src/gui.c ****  * @parameters :xc:the x coordinate of the Circular center 
 257:Core/Src/gui.c ****                 yc:the y coordinate of the Circular center 
 258:Core/Src/gui.c **** 								x:the x coordinate relative to the Circular center 
ARM GAS  /tmp/ccWgdbjA.s 			page 6


 259:Core/Src/gui.c **** 								y:the y coordinate relative to the Circular center 
 260:Core/Src/gui.c **** 								c:the color value of the circle
 261:Core/Src/gui.c ****  * @retvalue   :None
 262:Core/Src/gui.c **** ******************************************************************************/  
 263:Core/Src/gui.c **** void _draw_circle_8(int xc, int yc, int x, int y, u16 c)
 264:Core/Src/gui.c **** {
 265:Core/Src/gui.c **** 	GUI_DrawPoint(xc + x, yc + y, c);
 266:Core/Src/gui.c **** 
 267:Core/Src/gui.c **** 	GUI_DrawPoint(xc - x, yc + y, c);
 268:Core/Src/gui.c **** 
 269:Core/Src/gui.c **** 	GUI_DrawPoint(xc + x, yc - y, c);
 270:Core/Src/gui.c **** 
 271:Core/Src/gui.c **** 	GUI_DrawPoint(xc - x, yc - y, c);
 272:Core/Src/gui.c **** 
 273:Core/Src/gui.c **** 	GUI_DrawPoint(xc + y, yc + x, c);
 274:Core/Src/gui.c **** 
 275:Core/Src/gui.c **** 	GUI_DrawPoint(xc - y, yc + x, c);
 276:Core/Src/gui.c **** 
 277:Core/Src/gui.c **** 	GUI_DrawPoint(xc + y, yc - x, c);
 278:Core/Src/gui.c **** 
 279:Core/Src/gui.c **** 	GUI_DrawPoint(xc - y, yc - x, c);
 280:Core/Src/gui.c **** }
 281:Core/Src/gui.c **** 
 282:Core/Src/gui.c **** /*****************************************************************************
 283:Core/Src/gui.c ****  * @name       :void gui_circle(int xc, int yc,u16 c,int r, int fill)
 284:Core/Src/gui.c ****  * @date       :2018-08-09 
 285:Core/Src/gui.c ****  * @function   :Draw a circle of specified size at a specified location
 286:Core/Src/gui.c ****  * @parameters :xc:the x coordinate of the Circular center 
 287:Core/Src/gui.c ****                 yc:the y coordinate of the Circular center 
 288:Core/Src/gui.c **** 								r:Circular radius
 289:Core/Src/gui.c **** 								fill:1-filling,0-no filling
 290:Core/Src/gui.c ****  * @retvalue   :None
 291:Core/Src/gui.c **** ******************************************************************************/  
 292:Core/Src/gui.c **** void gui_circle(int xc, int yc,u16 c,int r, int fill)
 293:Core/Src/gui.c **** {
 294:Core/Src/gui.c **** 	int x = 0, y = r, yi, d;
 295:Core/Src/gui.c **** 
 296:Core/Src/gui.c **** 	d = 3 - 2 * r;
 297:Core/Src/gui.c **** 
 298:Core/Src/gui.c **** 
 299:Core/Src/gui.c **** 	if (fill) 
 300:Core/Src/gui.c **** 	{
 301:Core/Src/gui.c **** 		// »Áπ˚ÃÓ≥‰£®ª≠ µ–ƒ‘≤£©
 302:Core/Src/gui.c **** 		while (x <= y) {
 303:Core/Src/gui.c **** 			for (yi = x; yi <= y; yi++)
 304:Core/Src/gui.c **** 				_draw_circle_8(xc, yc, x, yi, c);
 305:Core/Src/gui.c **** 
 306:Core/Src/gui.c **** 			if (d < 0) {
 307:Core/Src/gui.c **** 				d = d + 4 * x + 6;
 308:Core/Src/gui.c **** 			} else {
 309:Core/Src/gui.c **** 				d = d + 4 * (x - y) + 10;
 310:Core/Src/gui.c **** 				y--;
 311:Core/Src/gui.c **** 			}
 312:Core/Src/gui.c **** 			x++;
 313:Core/Src/gui.c **** 		}
 314:Core/Src/gui.c **** 	} else 
 315:Core/Src/gui.c **** 	{
ARM GAS  /tmp/ccWgdbjA.s 			page 7


 316:Core/Src/gui.c **** 		// »Áπ˚≤ªÃÓ≥‰£®ª≠ø’–ƒ‘≤£©
 317:Core/Src/gui.c **** 		while (x <= y) {
 318:Core/Src/gui.c **** 			_draw_circle_8(xc, yc, x, y, c);
 319:Core/Src/gui.c **** 			if (d < 0) {
 320:Core/Src/gui.c **** 				d = d + 4 * x + 6;
 321:Core/Src/gui.c **** 			} else {
 322:Core/Src/gui.c **** 				d = d + 4 * (x - y) + 10;
 323:Core/Src/gui.c **** 				y--;
 324:Core/Src/gui.c **** 			}
 325:Core/Src/gui.c **** 			x++;
 326:Core/Src/gui.c **** 		}
 327:Core/Src/gui.c **** 	}
 328:Core/Src/gui.c **** }
 329:Core/Src/gui.c **** 
 330:Core/Src/gui.c **** /*****************************************************************************
 331:Core/Src/gui.c ****  * @name       :void Draw_Triangel(u16 x0,u16 y0,u16 x1,u16 y1,u16 x2,u16 y2)
 332:Core/Src/gui.c ****  * @date       :2018-08-09 
 333:Core/Src/gui.c ****  * @function   :Draw a triangle at a specified position
 334:Core/Src/gui.c ****  * @parameters :x0:the bebinning x coordinate of the triangular edge 
 335:Core/Src/gui.c ****                 y0:the bebinning y coordinate of the triangular edge 
 336:Core/Src/gui.c **** 								x1:the vertex x coordinate of the triangular
 337:Core/Src/gui.c **** 								y1:the vertex y coordinate of the triangular
 338:Core/Src/gui.c **** 								x2:the ending x coordinate of the triangular edge 
 339:Core/Src/gui.c **** 								y2:the ending y coordinate of the triangular edge 
 340:Core/Src/gui.c ****  * @retvalue   :None
 341:Core/Src/gui.c **** ******************************************************************************/ 
 342:Core/Src/gui.c **** void Draw_Triangel(u16 x0,u16 y0,u16 x1,u16 y1,u16 x2,u16 y2)
 343:Core/Src/gui.c **** {
 344:Core/Src/gui.c **** 	LCD_DrawLine(x0,y0,x1,y1);
 345:Core/Src/gui.c **** 	LCD_DrawLine(x1,y1,x2,y2);
 346:Core/Src/gui.c **** 	LCD_DrawLine(x2,y2,x0,y0);
 347:Core/Src/gui.c **** }
 348:Core/Src/gui.c **** 
 349:Core/Src/gui.c **** static void _swap(u16 *a, u16 *b)
 350:Core/Src/gui.c **** {
  29              		.loc 1 350 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
 351:Core/Src/gui.c **** 	u16 tmp;
  34              		.loc 1 351 2 view .LVU1
 352:Core/Src/gui.c ****   tmp = *a;
  35              		.loc 1 352 3 view .LVU2
  36              		.loc 1 352 7 is_stmt 0 view .LVU3
  37 0000 0388     		ldrh	r3, [r0]
  38              	.LVL1:
 353:Core/Src/gui.c **** 	*a = *b;
  39              		.loc 1 353 2 is_stmt 1 view .LVU4
  40              		.loc 1 353 7 is_stmt 0 view .LVU5
  41 0002 0A88     		ldrh	r2, [r1]
  42              		.loc 1 353 5 view .LVU6
  43 0004 0280     		strh	r2, [r0]	@ movhi
 354:Core/Src/gui.c **** 	*b = tmp;
  44              		.loc 1 354 2 is_stmt 1 view .LVU7
  45              		.loc 1 354 5 is_stmt 0 view .LVU8
  46 0006 0B80     		strh	r3, [r1]	@ movhi
ARM GAS  /tmp/ccWgdbjA.s 			page 8


 355:Core/Src/gui.c **** }
  47              		.loc 1 355 1 view .LVU9
  48 0008 7047     		bx	lr
  49              		.cfi_endproc
  50              	.LFE139:
  52              		.section	.text.GUI_DrawPoint,"ax",%progbits
  53              		.align	1
  54              		.global	GUI_DrawPoint
  55              		.syntax unified
  56              		.thumb
  57              		.thumb_func
  58              		.fpu fpv4-sp-d16
  60              	GUI_DrawPoint:
  61              	.LVL2:
  62              	.LFB130:
  91:Core/Src/gui.c **** 	LCD_SetCursor(x,y);//…Ë÷√π‚±ÍŒª÷√ 
  63              		.loc 1 91 1 is_stmt 1 view -0
  64              		.cfi_startproc
  65              		@ args = 0, pretend = 0, frame = 0
  66              		@ frame_needed = 0, uses_anonymous_args = 0
  91:Core/Src/gui.c **** 	LCD_SetCursor(x,y);//…Ë÷√π‚±ÍŒª÷√ 
  67              		.loc 1 91 1 is_stmt 0 view .LVU11
  68 0000 10B5     		push	{r4, lr}
  69              	.LCFI0:
  70              		.cfi_def_cfa_offset 8
  71              		.cfi_offset 4, -8
  72              		.cfi_offset 14, -4
  73 0002 1446     		mov	r4, r2
  92:Core/Src/gui.c **** 	Lcd_WriteData_16Bit(color); 
  74              		.loc 1 92 2 is_stmt 1 view .LVU12
  75 0004 FFF7FEFF 		bl	LCD_SetCursor
  76              	.LVL3:
  93:Core/Src/gui.c **** }
  77              		.loc 1 93 2 view .LVU13
  78 0008 2046     		mov	r0, r4
  79 000a FFF7FEFF 		bl	Lcd_WriteData_16Bit
  80              	.LVL4:
  94:Core/Src/gui.c **** 
  81              		.loc 1 94 1 is_stmt 0 view .LVU14
  82 000e 10BD     		pop	{r4, pc}
  83              		.cfi_endproc
  84              	.LFE130:
  86              		.section	.text.LCD_Fill,"ax",%progbits
  87              		.align	1
  88              		.global	LCD_Fill
  89              		.syntax unified
  90              		.thumb
  91              		.thumb_func
  92              		.fpu fpv4-sp-d16
  94              	LCD_Fill:
  95              	.LVL5:
  96              	.LFB131:
 108:Core/Src/gui.c **** 	u16 i,j;			
  97              		.loc 1 108 1 is_stmt 1 view -0
  98              		.cfi_startproc
  99              		@ args = 4, pretend = 0, frame = 0
 100              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccWgdbjA.s 			page 9


 108:Core/Src/gui.c **** 	u16 i,j;			
 101              		.loc 1 108 1 is_stmt 0 view .LVU16
 102 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 103              	.LCFI1:
 104              		.cfi_def_cfa_offset 24
 105              		.cfi_offset 4, -24
 106              		.cfi_offset 5, -20
 107              		.cfi_offset 6, -16
 108              		.cfi_offset 7, -12
 109              		.cfi_offset 8, -8
 110              		.cfi_offset 14, -4
 111 0004 BDF81860 		ldrh	r6, [sp, #24]
 109:Core/Src/gui.c **** 	u16 width=ex-sx+1; 		//µ√µΩÃÓ≥‰µƒøÌ∂»
 112              		.loc 1 109 2 is_stmt 1 view .LVU17
 110:Core/Src/gui.c **** 	u16 height=ey-sy+1;		//∏ﬂ∂»
 113              		.loc 1 110 2 view .LVU18
 110:Core/Src/gui.c **** 	u16 height=ey-sy+1;		//∏ﬂ∂»
 114              		.loc 1 110 14 is_stmt 0 view .LVU19
 115 0008 151A     		subs	r5, r2, r0
 116 000a ADB2     		uxth	r5, r5
 110:Core/Src/gui.c **** 	u16 height=ey-sy+1;		//∏ﬂ∂»
 117              		.loc 1 110 6 view .LVU20
 118 000c 0135     		adds	r5, r5, #1
 119 000e ADB2     		uxth	r5, r5
 120              	.LVL6:
 111:Core/Src/gui.c **** 	LCD_SetWindows(sx,sy,ex,ey);//…Ë÷√œ‘ æ¥∞ø⁄
 121              		.loc 1 111 2 is_stmt 1 view .LVU21
 111:Core/Src/gui.c **** 	LCD_SetWindows(sx,sy,ex,ey);//…Ë÷√œ‘ æ¥∞ø⁄
 122              		.loc 1 111 15 is_stmt 0 view .LVU22
 123 0010 A3EB0108 		sub	r8, r3, r1
 124 0014 1FFA88F8 		uxth	r8, r8
 111:Core/Src/gui.c **** 	LCD_SetWindows(sx,sy,ex,ey);//…Ë÷√œ‘ æ¥∞ø⁄
 125              		.loc 1 111 6 view .LVU23
 126 0018 08F10108 		add	r8, r8, #1
 127 001c 1FFA88F8 		uxth	r8, r8
 128              	.LVL7:
 112:Core/Src/gui.c **** 	for(i=0;i<height;i++)
 129              		.loc 1 112 2 is_stmt 1 view .LVU24
 130 0020 FFF7FEFF 		bl	LCD_SetWindows
 131              	.LVL8:
 113:Core/Src/gui.c **** 	{
 132              		.loc 1 113 2 view .LVU25
 113:Core/Src/gui.c **** 	{
 133              		.loc 1 113 7 is_stmt 0 view .LVU26
 134 0024 0027     		movs	r7, #0
 113:Core/Src/gui.c **** 	{
 135              		.loc 1 113 2 view .LVU27
 136 0026 08E0     		b	.L5
 137              	.LVL9:
 138              	.L6:
 116:Core/Src/gui.c **** 	}
 139              		.loc 1 116 3 is_stmt 1 discriminator 3 view .LVU28
 140 0028 3046     		mov	r0, r6
 141 002a FFF7FEFF 		bl	Lcd_WriteData_16Bit
 142              	.LVL10:
 115:Core/Src/gui.c **** 		Lcd_WriteData_16Bit(color);	//–¥»Î ˝æ› 	 
 143              		.loc 1 115 19 discriminator 3 view .LVU29
ARM GAS  /tmp/ccWgdbjA.s 			page 10


 115:Core/Src/gui.c **** 		Lcd_WriteData_16Bit(color);	//–¥»Î ˝æ› 	 
 144              		.loc 1 115 20 is_stmt 0 discriminator 3 view .LVU30
 145 002e 0134     		adds	r4, r4, #1
 146              	.LVL11:
 115:Core/Src/gui.c **** 		Lcd_WriteData_16Bit(color);	//–¥»Î ˝æ› 	 
 147              		.loc 1 115 20 discriminator 3 view .LVU31
 148 0030 A4B2     		uxth	r4, r4
 149              	.LVL12:
 150              	.L7:
 115:Core/Src/gui.c **** 		Lcd_WriteData_16Bit(color);	//–¥»Î ˝æ› 	 
 151              		.loc 1 115 11 is_stmt 1 discriminator 1 view .LVU32
 115:Core/Src/gui.c **** 		Lcd_WriteData_16Bit(color);	//–¥»Î ˝æ› 	 
 152              		.loc 1 115 3 is_stmt 0 discriminator 1 view .LVU33
 153 0032 AC42     		cmp	r4, r5
 154 0034 F8D3     		bcc	.L6
 113:Core/Src/gui.c **** 	{
 155              		.loc 1 113 19 is_stmt 1 discriminator 2 view .LVU34
 113:Core/Src/gui.c **** 	{
 156              		.loc 1 113 20 is_stmt 0 discriminator 2 view .LVU35
 157 0036 0137     		adds	r7, r7, #1
 158              	.LVL13:
 113:Core/Src/gui.c **** 	{
 159              		.loc 1 113 20 discriminator 2 view .LVU36
 160 0038 BFB2     		uxth	r7, r7
 161              	.LVL14:
 162              	.L5:
 113:Core/Src/gui.c **** 	{
 163              		.loc 1 113 10 is_stmt 1 discriminator 1 view .LVU37
 113:Core/Src/gui.c **** 	{
 164              		.loc 1 113 2 is_stmt 0 discriminator 1 view .LVU38
 165 003a 4745     		cmp	r7, r8
 166 003c 01D2     		bcs	.L10
 115:Core/Src/gui.c **** 		Lcd_WriteData_16Bit(color);	//–¥»Î ˝æ› 	 
 167              		.loc 1 115 8 view .LVU39
 168 003e 0024     		movs	r4, #0
 169 0040 F7E7     		b	.L7
 170              	.L10:
 118:Core/Src/gui.c **** }
 171              		.loc 1 118 2 is_stmt 1 view .LVU40
 118:Core/Src/gui.c **** }
 172              		.loc 1 118 27 is_stmt 0 view .LVU41
 173 0042 064B     		ldr	r3, .L11
 174 0044 9A88     		ldrh	r2, [r3, #4]
 118:Core/Src/gui.c **** }
 175              		.loc 1 118 42 view .LVU42
 176 0046 DB88     		ldrh	r3, [r3, #6]
 118:Core/Src/gui.c **** }
 177              		.loc 1 118 2 view .LVU43
 178 0048 013B     		subs	r3, r3, #1
 179 004a 013A     		subs	r2, r2, #1
 180 004c 9BB2     		uxth	r3, r3
 181 004e 92B2     		uxth	r2, r2
 182 0050 0021     		movs	r1, #0
 183 0052 0846     		mov	r0, r1
 184 0054 FFF7FEFF 		bl	LCD_SetWindows
 185              	.LVL15:
 119:Core/Src/gui.c **** 
ARM GAS  /tmp/ccWgdbjA.s 			page 11


 186              		.loc 1 119 1 view .LVU44
 187 0058 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 188              	.LVL16:
 189              	.L12:
 119:Core/Src/gui.c **** 
 190              		.loc 1 119 1 view .LVU45
 191              		.align	2
 192              	.L11:
 193 005c 00000000 		.word	lcddev
 194              		.cfi_endproc
 195              	.LFE131:
 197              		.section	.text.LCD_DrawLine,"ax",%progbits
 198              		.align	1
 199              		.global	LCD_DrawLine
 200              		.syntax unified
 201              		.thumb
 202              		.thumb_func
 203              		.fpu fpv4-sp-d16
 205              	LCD_DrawLine:
 206              	.LVL17:
 207              	.LFB132:
 132:Core/Src/gui.c **** 	u16 t; 
 208              		.loc 1 132 1 is_stmt 1 view -0
 209              		.cfi_startproc
 210              		@ args = 0, pretend = 0, frame = 8
 211              		@ frame_needed = 0, uses_anonymous_args = 0
 132:Core/Src/gui.c **** 	u16 t; 
 212              		.loc 1 132 1 is_stmt 0 view .LVU47
 213 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 214              	.LCFI2:
 215              		.cfi_def_cfa_offset 36
 216              		.cfi_offset 4, -36
 217              		.cfi_offset 5, -32
 218              		.cfi_offset 6, -28
 219              		.cfi_offset 7, -24
 220              		.cfi_offset 8, -20
 221              		.cfi_offset 9, -16
 222              		.cfi_offset 10, -12
 223              		.cfi_offset 11, -8
 224              		.cfi_offset 14, -4
 225 0004 83B0     		sub	sp, sp, #12
 226              	.LCFI3:
 227              		.cfi_def_cfa_offset 48
 133:Core/Src/gui.c **** 	int xerr=0,yerr=0,delta_x,delta_y,distance; 
 228              		.loc 1 133 2 is_stmt 1 view .LVU48
 134:Core/Src/gui.c **** 	int incx,incy,uRow,uCol; 
 229              		.loc 1 134 2 view .LVU49
 230              	.LVL18:
 135:Core/Src/gui.c **** 
 231              		.loc 1 135 2 view .LVU50
 137:Core/Src/gui.c **** 	delta_y=y2-y1; 
 232              		.loc 1 137 2 view .LVU51
 137:Core/Src/gui.c **** 	delta_y=y2-y1; 
 233              		.loc 1 137 12 is_stmt 0 view .LVU52
 234 0006 8046     		mov	r8, r0
 137:Core/Src/gui.c **** 	delta_y=y2-y1; 
 235              		.loc 1 137 9 view .LVU53
ARM GAS  /tmp/ccWgdbjA.s 			page 12


 236 0008 A2EB000A 		sub	r10, r2, r0
 237              	.LVL19:
 138:Core/Src/gui.c **** 	uRow=x1; 
 238              		.loc 1 138 2 is_stmt 1 view .LVU54
 138:Core/Src/gui.c **** 	uRow=x1; 
 239              		.loc 1 138 12 is_stmt 0 view .LVU55
 240 000c 8946     		mov	r9, r1
 138:Core/Src/gui.c **** 	uRow=x1; 
 241              		.loc 1 138 9 view .LVU56
 242 000e A3EB010B 		sub	fp, r3, r1
 243              	.LVL20:
 139:Core/Src/gui.c **** 	uCol=y1; 
 244              		.loc 1 139 2 is_stmt 1 view .LVU57
 140:Core/Src/gui.c **** 	if(delta_x>0)incx=1; //…Ë÷√µ•≤Ω∑ΩœÚ 
 245              		.loc 1 140 2 view .LVU58
 141:Core/Src/gui.c **** 	else if(delta_x==0)incx=0;//¥π÷±œﬂ 
 246              		.loc 1 141 2 view .LVU59
 141:Core/Src/gui.c **** 	else if(delta_x==0)incx=0;//¥π÷±œﬂ 
 247              		.loc 1 141 4 is_stmt 0 view .LVU60
 248 0012 BAF1000F 		cmp	r10, #0
 249 0016 0DDD     		ble	.L27
 141:Core/Src/gui.c **** 	else if(delta_x==0)incx=0;//¥π÷±œﬂ 
 250              		.loc 1 141 19 view .LVU61
 251 0018 0122     		movs	r2, #1
 252              	.LVL21:
 141:Core/Src/gui.c **** 	else if(delta_x==0)incx=0;//¥π÷±œﬂ 
 253              		.loc 1 141 19 view .LVU62
 254 001a 0092     		str	r2, [sp]
 255              	.L14:
 256              	.LVL22:
 144:Core/Src/gui.c **** 	else if(delta_y==0)incy=0;//ÀÆ∆Ωœﬂ 
 257              		.loc 1 144 2 is_stmt 1 view .LVU63
 144:Core/Src/gui.c **** 	else if(delta_y==0)incy=0;//ÀÆ∆Ωœﬂ 
 258              		.loc 1 144 4 is_stmt 0 view .LVU64
 259 001c BBF1000F 		cmp	fp, #0
 260 0020 14DD     		ble	.L28
 144:Core/Src/gui.c **** 	else if(delta_y==0)incy=0;//ÀÆ∆Ωœﬂ 
 261              		.loc 1 144 19 view .LVU65
 262 0022 0123     		movs	r3, #1
 263              	.LVL23:
 144:Core/Src/gui.c **** 	else if(delta_y==0)incy=0;//ÀÆ∆Ωœﬂ 
 264              		.loc 1 144 19 view .LVU66
 265 0024 0193     		str	r3, [sp, #4]
 266              	.L15:
 267              	.LVL24:
 147:Core/Src/gui.c **** 	else distance=delta_y; 
 268              		.loc 1 147 2 is_stmt 1 view .LVU67
 147:Core/Src/gui.c **** 	else distance=delta_y; 
 269              		.loc 1 147 4 is_stmt 0 view .LVU68
 270 0026 DA45     		cmp	r10, fp
 271 0028 1CDD     		ble	.L25
 147:Core/Src/gui.c **** 	else distance=delta_y; 
 272              		.loc 1 147 30 view .LVU69
 273 002a 5646     		mov	r6, r10
 274              	.L16:
 275              	.LVL25:
 149:Core/Src/gui.c **** 	{  
ARM GAS  /tmp/ccWgdbjA.s 			page 13


 276              		.loc 1 149 2 is_stmt 1 view .LVU70
 134:Core/Src/gui.c **** 	int incx,incy,uRow,uCol; 
 277              		.loc 1 134 13 is_stmt 0 view .LVU71
 278 002c 0025     		movs	r5, #0
 134:Core/Src/gui.c **** 	int incx,incy,uRow,uCol; 
 279              		.loc 1 134 6 view .LVU72
 280 002e 2F46     		mov	r7, r5
 149:Core/Src/gui.c **** 	{  
 281              		.loc 1 149 7 view .LVU73
 282 0030 2C46     		mov	r4, r5
 149:Core/Src/gui.c **** 	{  
 283              		.loc 1 149 2 view .LVU74
 284 0032 1BE0     		b	.L17
 285              	.LVL26:
 286              	.L27:
 142:Core/Src/gui.c **** 	else {incx=-1;delta_x=-delta_x;} 
 287              		.loc 1 142 7 is_stmt 1 view .LVU75
 142:Core/Src/gui.c **** 	else {incx=-1;delta_x=-delta_x;} 
 288              		.loc 1 142 9 is_stmt 0 view .LVU76
 289 0034 BAF1000F 		cmp	r10, #0
 290 0038 05D0     		beq	.L22
 143:Core/Src/gui.c **** 	if(delta_y>0)incy=1; 
 291              		.loc 1 143 8 is_stmt 1 view .LVU77
 292              	.LVL27:
 143:Core/Src/gui.c **** 	if(delta_y>0)incy=1; 
 293              		.loc 1 143 16 view .LVU78
 143:Core/Src/gui.c **** 	if(delta_y>0)incy=1; 
 294              		.loc 1 143 23 is_stmt 0 view .LVU79
 295 003a A0EB020A 		sub	r10, r0, r2
 296              	.LVL28:
 143:Core/Src/gui.c **** 	if(delta_y>0)incy=1; 
 297              		.loc 1 143 12 view .LVU80
 298 003e 4FF0FF32 		mov	r2, #-1
 299              	.LVL29:
 143:Core/Src/gui.c **** 	if(delta_y>0)incy=1; 
 300              		.loc 1 143 12 view .LVU81
 301 0042 0092     		str	r2, [sp]
 302 0044 EAE7     		b	.L14
 303              	.LVL30:
 304              	.L22:
 142:Core/Src/gui.c **** 	else {incx=-1;delta_x=-delta_x;} 
 305              		.loc 1 142 25 view .LVU82
 306 0046 CDF800A0 		str	r10, [sp]
 307 004a E7E7     		b	.L14
 308              	.LVL31:
 309              	.L28:
 145:Core/Src/gui.c **** 	else{incy=-1;delta_y=-delta_y;} 
 310              		.loc 1 145 7 is_stmt 1 view .LVU83
 145:Core/Src/gui.c **** 	else{incy=-1;delta_y=-delta_y;} 
 311              		.loc 1 145 9 is_stmt 0 view .LVU84
 312 004c BBF1000F 		cmp	fp, #0
 313 0050 05D0     		beq	.L24
 146:Core/Src/gui.c **** 	if( delta_x>delta_y)distance=delta_x; //—°»°ª˘±æ‘ˆ¡ø◊¯±Í÷· 
 314              		.loc 1 146 7 is_stmt 1 view .LVU85
 315              	.LVL32:
 146:Core/Src/gui.c **** 	if( delta_x>delta_y)distance=delta_x; //—°»°ª˘±æ‘ˆ¡ø◊¯±Í÷· 
 316              		.loc 1 146 15 view .LVU86
ARM GAS  /tmp/ccWgdbjA.s 			page 14


 146:Core/Src/gui.c **** 	if( delta_x>delta_y)distance=delta_x; //—°»°ª˘±æ‘ˆ¡ø◊¯±Í÷· 
 317              		.loc 1 146 22 is_stmt 0 view .LVU87
 318 0052 A1EB030B 		sub	fp, r1, r3
 319              	.LVL33:
 146:Core/Src/gui.c **** 	if( delta_x>delta_y)distance=delta_x; //—°»°ª˘±æ‘ˆ¡ø◊¯±Í÷· 
 320              		.loc 1 146 11 view .LVU88
 321 0056 4FF0FF33 		mov	r3, #-1
 322              	.LVL34:
 146:Core/Src/gui.c **** 	if( delta_x>delta_y)distance=delta_x; //—°»°ª˘±æ‘ˆ¡ø◊¯±Í÷· 
 323              		.loc 1 146 11 view .LVU89
 324 005a 0193     		str	r3, [sp, #4]
 325 005c E3E7     		b	.L15
 326              	.LVL35:
 327              	.L24:
 145:Core/Src/gui.c **** 	else{incy=-1;delta_y=-delta_y;} 
 328              		.loc 1 145 25 view .LVU90
 329 005e CDF804B0 		str	fp, [sp, #4]
 330 0062 E0E7     		b	.L15
 331              	.LVL36:
 332              	.L25:
 148:Core/Src/gui.c **** 	for(t=0;t<=distance+1;t++ )//ª≠œﬂ ‰≥ˆ 
 333              		.loc 1 148 15 view .LVU91
 334 0064 5E46     		mov	r6, fp
 335 0066 E1E7     		b	.L16
 336              	.LVL37:
 337              	.L19:
 149:Core/Src/gui.c **** 	{  
 338              		.loc 1 149 24 is_stmt 1 discriminator 2 view .LVU92
 149:Core/Src/gui.c **** 	{  
 339              		.loc 1 149 25 is_stmt 0 discriminator 2 view .LVU93
 340 0068 0134     		adds	r4, r4, #1
 341              	.LVL38:
 149:Core/Src/gui.c **** 	{  
 342              		.loc 1 149 25 discriminator 2 view .LVU94
 343 006a A4B2     		uxth	r4, r4
 344              	.LVL39:
 345              	.L17:
 149:Core/Src/gui.c **** 	{  
 346              		.loc 1 149 10 is_stmt 1 discriminator 1 view .LVU95
 149:Core/Src/gui.c **** 	{  
 347              		.loc 1 149 21 is_stmt 0 discriminator 1 view .LVU96
 348 006c 731C     		adds	r3, r6, #1
 149:Core/Src/gui.c **** 	{  
 349              		.loc 1 149 2 discriminator 1 view .LVU97
 350 006e 9C42     		cmp	r4, r3
 351 0070 12DC     		bgt	.L29
 151:Core/Src/gui.c **** 		xerr+=delta_x ; 
 352              		.loc 1 151 3 is_stmt 1 view .LVU98
 353 0072 1FFA89F1 		uxth	r1, r9
 354 0076 1FFA88F0 		uxth	r0, r8
 355 007a FFF7FEFF 		bl	LCD_DrawPoint
 356              	.LVL40:
 152:Core/Src/gui.c **** 		yerr+=delta_y ; 
 357              		.loc 1 152 3 view .LVU99
 152:Core/Src/gui.c **** 		yerr+=delta_y ; 
 358              		.loc 1 152 7 is_stmt 0 view .LVU100
 359 007e 5744     		add	r7, r7, r10
ARM GAS  /tmp/ccWgdbjA.s 			page 15


 360              	.LVL41:
 153:Core/Src/gui.c **** 		if(xerr>distance) 
 361              		.loc 1 153 3 is_stmt 1 view .LVU101
 153:Core/Src/gui.c **** 		if(xerr>distance) 
 362              		.loc 1 153 7 is_stmt 0 view .LVU102
 363 0080 5D44     		add	r5, r5, fp
 364              	.LVL42:
 154:Core/Src/gui.c **** 		{ 
 365              		.loc 1 154 3 is_stmt 1 view .LVU103
 154:Core/Src/gui.c **** 		{ 
 366              		.loc 1 154 5 is_stmt 0 view .LVU104
 367 0082 BE42     		cmp	r6, r7
 368 0084 02DA     		bge	.L18
 156:Core/Src/gui.c **** 			uRow+=incx; 
 369              		.loc 1 156 4 is_stmt 1 view .LVU105
 156:Core/Src/gui.c **** 			uRow+=incx; 
 370              		.loc 1 156 8 is_stmt 0 view .LVU106
 371 0086 BF1B     		subs	r7, r7, r6
 372              	.LVL43:
 157:Core/Src/gui.c **** 		} 
 373              		.loc 1 157 4 is_stmt 1 view .LVU107
 157:Core/Src/gui.c **** 		} 
 374              		.loc 1 157 8 is_stmt 0 view .LVU108
 375 0088 009B     		ldr	r3, [sp]
 376 008a 9844     		add	r8, r8, r3
 377              	.LVL44:
 378              	.L18:
 159:Core/Src/gui.c **** 		{ 
 379              		.loc 1 159 3 is_stmt 1 view .LVU109
 159:Core/Src/gui.c **** 		{ 
 380              		.loc 1 159 5 is_stmt 0 view .LVU110
 381 008c AE42     		cmp	r6, r5
 382 008e EBDA     		bge	.L19
 161:Core/Src/gui.c **** 			uCol+=incy; 
 383              		.loc 1 161 4 is_stmt 1 view .LVU111
 161:Core/Src/gui.c **** 			uCol+=incy; 
 384              		.loc 1 161 8 is_stmt 0 view .LVU112
 385 0090 AD1B     		subs	r5, r5, r6
 386              	.LVL45:
 162:Core/Src/gui.c **** 		} 
 387              		.loc 1 162 4 is_stmt 1 view .LVU113
 162:Core/Src/gui.c **** 		} 
 388              		.loc 1 162 8 is_stmt 0 view .LVU114
 389 0092 019B     		ldr	r3, [sp, #4]
 390 0094 9944     		add	r9, r9, r3
 391              	.LVL46:
 162:Core/Src/gui.c **** 		} 
 392              		.loc 1 162 8 view .LVU115
 393 0096 E7E7     		b	.L19
 394              	.L29:
 165:Core/Src/gui.c **** 
 395              		.loc 1 165 1 view .LVU116
 396 0098 03B0     		add	sp, sp, #12
 397              	.LCFI4:
 398              		.cfi_def_cfa_offset 36
 399              	.LVL47:
 165:Core/Src/gui.c **** 
ARM GAS  /tmp/ccWgdbjA.s 			page 16


 400              		.loc 1 165 1 view .LVU117
 401              		@ sp needed
 402 009a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 165:Core/Src/gui.c **** 
 403              		.loc 1 165 1 view .LVU118
 404              		.cfi_endproc
 405              	.LFE132:
 407              		.section	.text.LCD_DrawRectangle,"ax",%progbits
 408              		.align	1
 409              		.global	LCD_DrawRectangle
 410              		.syntax unified
 411              		.thumb
 412              		.thumb_func
 413              		.fpu fpv4-sp-d16
 415              	LCD_DrawRectangle:
 416              	.LVL48:
 417              	.LFB134:
 230:Core/Src/gui.c **** 	LCD_DrawLine(x1,y1,x2,y1);
 418              		.loc 1 230 1 is_stmt 1 view -0
 419              		.cfi_startproc
 420              		@ args = 0, pretend = 0, frame = 0
 421              		@ frame_needed = 0, uses_anonymous_args = 0
 230:Core/Src/gui.c **** 	LCD_DrawLine(x1,y1,x2,y1);
 422              		.loc 1 230 1 is_stmt 0 view .LVU120
 423 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 424              	.LCFI5:
 425              		.cfi_def_cfa_offset 24
 426              		.cfi_offset 3, -24
 427              		.cfi_offset 4, -20
 428              		.cfi_offset 5, -16
 429              		.cfi_offset 6, -12
 430              		.cfi_offset 7, -8
 431              		.cfi_offset 14, -4
 432 0002 0746     		mov	r7, r0
 433 0004 0E46     		mov	r6, r1
 434 0006 1546     		mov	r5, r2
 435 0008 1C46     		mov	r4, r3
 231:Core/Src/gui.c **** 	LCD_DrawLine(x1,y1,x1,y2);
 436              		.loc 1 231 2 is_stmt 1 view .LVU121
 437 000a 0B46     		mov	r3, r1
 438              	.LVL49:
 231:Core/Src/gui.c **** 	LCD_DrawLine(x1,y1,x1,y2);
 439              		.loc 1 231 2 is_stmt 0 view .LVU122
 440 000c FFF7FEFF 		bl	LCD_DrawLine
 441              	.LVL50:
 232:Core/Src/gui.c **** 	LCD_DrawLine(x1,y2,x2,y2);
 442              		.loc 1 232 2 is_stmt 1 view .LVU123
 443 0010 2346     		mov	r3, r4
 444 0012 3A46     		mov	r2, r7
 445 0014 3146     		mov	r1, r6
 446 0016 3846     		mov	r0, r7
 447 0018 FFF7FEFF 		bl	LCD_DrawLine
 448              	.LVL51:
 233:Core/Src/gui.c **** 	LCD_DrawLine(x2,y1,x2,y2);
 449              		.loc 1 233 2 view .LVU124
 450 001c 2346     		mov	r3, r4
 451 001e 2A46     		mov	r2, r5
ARM GAS  /tmp/ccWgdbjA.s 			page 17


 452 0020 2146     		mov	r1, r4
 453 0022 3846     		mov	r0, r7
 454 0024 FFF7FEFF 		bl	LCD_DrawLine
 455              	.LVL52:
 234:Core/Src/gui.c **** }  
 456              		.loc 1 234 2 view .LVU125
 457 0028 2346     		mov	r3, r4
 458 002a 2A46     		mov	r2, r5
 459 002c 3146     		mov	r1, r6
 460 002e 2846     		mov	r0, r5
 461 0030 FFF7FEFF 		bl	LCD_DrawLine
 462              	.LVL53:
 235:Core/Src/gui.c **** 
 463              		.loc 1 235 1 is_stmt 0 view .LVU126
 464 0034 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 465              		.cfi_endproc
 466              	.LFE134:
 468              		.section	.text.LCD_DrawFillRectangle,"ax",%progbits
 469              		.align	1
 470              		.global	LCD_DrawFillRectangle
 471              		.syntax unified
 472              		.thumb
 473              		.thumb_func
 474              		.fpu fpv4-sp-d16
 476              	LCD_DrawFillRectangle:
 477              	.LVL54:
 478              	.LFB135:
 248:Core/Src/gui.c **** 	LCD_Fill(x1,y1,x2,y2,POINT_COLOR);
 479              		.loc 1 248 1 is_stmt 1 view -0
 480              		.cfi_startproc
 481              		@ args = 0, pretend = 0, frame = 0
 482              		@ frame_needed = 0, uses_anonymous_args = 0
 248:Core/Src/gui.c **** 	LCD_Fill(x1,y1,x2,y2,POINT_COLOR);
 483              		.loc 1 248 1 is_stmt 0 view .LVU128
 484 0000 10B5     		push	{r4, lr}
 485              	.LCFI6:
 486              		.cfi_def_cfa_offset 8
 487              		.cfi_offset 4, -8
 488              		.cfi_offset 14, -4
 489 0002 82B0     		sub	sp, sp, #8
 490              	.LCFI7:
 491              		.cfi_def_cfa_offset 16
 249:Core/Src/gui.c **** }
 492              		.loc 1 249 2 is_stmt 1 view .LVU129
 493 0004 034C     		ldr	r4, .L34
 494 0006 2488     		ldrh	r4, [r4]
 495 0008 0094     		str	r4, [sp]
 496 000a FFF7FEFF 		bl	LCD_Fill
 497              	.LVL55:
 250:Core/Src/gui.c ****  
 498              		.loc 1 250 1 is_stmt 0 view .LVU130
 499 000e 02B0     		add	sp, sp, #8
 500              	.LCFI8:
 501              		.cfi_def_cfa_offset 8
 502              		@ sp needed
 503 0010 10BD     		pop	{r4, pc}
 504              	.L35:
ARM GAS  /tmp/ccWgdbjA.s 			page 18


 505 0012 00BF     		.align	2
 506              	.L34:
 507 0014 00000000 		.word	POINT_COLOR
 508              		.cfi_endproc
 509              	.LFE135:
 511              		.section	.text._draw_circle_8,"ax",%progbits
 512              		.align	1
 513              		.global	_draw_circle_8
 514              		.syntax unified
 515              		.thumb
 516              		.thumb_func
 517              		.fpu fpv4-sp-d16
 519              	_draw_circle_8:
 520              	.LVL56:
 521              	.LFB136:
 264:Core/Src/gui.c **** 	GUI_DrawPoint(xc + x, yc + y, c);
 522              		.loc 1 264 1 is_stmt 1 view -0
 523              		.cfi_startproc
 524              		@ args = 4, pretend = 0, frame = 0
 525              		@ frame_needed = 0, uses_anonymous_args = 0
 264:Core/Src/gui.c **** 	GUI_DrawPoint(xc + x, yc + y, c);
 526              		.loc 1 264 1 is_stmt 0 view .LVU132
 527 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 528              	.LCFI9:
 529              		.cfi_def_cfa_offset 40
 530              		.cfi_offset 3, -40
 531              		.cfi_offset 4, -36
 532              		.cfi_offset 5, -32
 533              		.cfi_offset 6, -28
 534              		.cfi_offset 7, -24
 535              		.cfi_offset 8, -20
 536              		.cfi_offset 9, -16
 537              		.cfi_offset 10, -12
 538              		.cfi_offset 11, -8
 539              		.cfi_offset 14, -4
 540 0004 BDF82860 		ldrh	r6, [sp, #40]
 265:Core/Src/gui.c **** 
 541              		.loc 1 265 2 is_stmt 1 view .LVU133
 542 0008 84B2     		uxth	r4, r0
 543 000a 1FFA82F8 		uxth	r8, r2
 544 000e 04EB080B 		add	fp, r4, r8
 545 0012 1FFA8BFB 		uxth	fp, fp
 546 0016 8DB2     		uxth	r5, r1
 547 0018 1FFA83FA 		uxth	r10, r3
 548 001c 05EB0A09 		add	r9, r5, r10
 549 0020 1FFA89F9 		uxth	r9, r9
 550 0024 3246     		mov	r2, r6
 551              	.LVL57:
 265:Core/Src/gui.c **** 
 552              		.loc 1 265 2 is_stmt 0 view .LVU134
 553 0026 4946     		mov	r1, r9
 554              	.LVL58:
 265:Core/Src/gui.c **** 
 555              		.loc 1 265 2 view .LVU135
 556 0028 5846     		mov	r0, fp
 557              	.LVL59:
 265:Core/Src/gui.c **** 
ARM GAS  /tmp/ccWgdbjA.s 			page 19


 558              		.loc 1 265 2 view .LVU136
 559 002a FFF7FEFF 		bl	GUI_DrawPoint
 560              	.LVL60:
 267:Core/Src/gui.c **** 
 561              		.loc 1 267 2 is_stmt 1 view .LVU137
 562 002e A4EB0807 		sub	r7, r4, r8
 563 0032 BFB2     		uxth	r7, r7
 564 0034 3246     		mov	r2, r6
 565 0036 4946     		mov	r1, r9
 566 0038 3846     		mov	r0, r7
 567 003a FFF7FEFF 		bl	GUI_DrawPoint
 568              	.LVL61:
 269:Core/Src/gui.c **** 
 569              		.loc 1 269 2 view .LVU138
 570 003e A5EB0A09 		sub	r9, r5, r10
 571 0042 1FFA89F9 		uxth	r9, r9
 572 0046 3246     		mov	r2, r6
 573 0048 4946     		mov	r1, r9
 574 004a 5846     		mov	r0, fp
 575 004c FFF7FEFF 		bl	GUI_DrawPoint
 576              	.LVL62:
 271:Core/Src/gui.c **** 
 577              		.loc 1 271 2 view .LVU139
 578 0050 3246     		mov	r2, r6
 579 0052 4946     		mov	r1, r9
 580 0054 3846     		mov	r0, r7
 581 0056 FFF7FEFF 		bl	GUI_DrawPoint
 582              	.LVL63:
 273:Core/Src/gui.c **** 
 583              		.loc 1 273 2 view .LVU140
 584 005a 04EB0A07 		add	r7, r4, r10
 585 005e BFB2     		uxth	r7, r7
 586 0060 08EB0509 		add	r9, r8, r5
 587 0064 1FFA89F9 		uxth	r9, r9
 588 0068 3246     		mov	r2, r6
 589 006a 4946     		mov	r1, r9
 590 006c 3846     		mov	r0, r7
 591 006e FFF7FEFF 		bl	GUI_DrawPoint
 592              	.LVL64:
 275:Core/Src/gui.c **** 
 593              		.loc 1 275 2 view .LVU141
 594 0072 A4EB0A04 		sub	r4, r4, r10
 595 0076 A4B2     		uxth	r4, r4
 596 0078 3246     		mov	r2, r6
 597 007a 4946     		mov	r1, r9
 598 007c 2046     		mov	r0, r4
 599 007e FFF7FEFF 		bl	GUI_DrawPoint
 600              	.LVL65:
 277:Core/Src/gui.c **** 
 601              		.loc 1 277 2 view .LVU142
 602 0082 A5EB0805 		sub	r5, r5, r8
 603 0086 ADB2     		uxth	r5, r5
 604 0088 3246     		mov	r2, r6
 605 008a 2946     		mov	r1, r5
 606 008c 3846     		mov	r0, r7
 607 008e FFF7FEFF 		bl	GUI_DrawPoint
 608              	.LVL66:
ARM GAS  /tmp/ccWgdbjA.s 			page 20


 279:Core/Src/gui.c **** }
 609              		.loc 1 279 2 view .LVU143
 610 0092 3246     		mov	r2, r6
 611 0094 2946     		mov	r1, r5
 612 0096 2046     		mov	r0, r4
 613 0098 FFF7FEFF 		bl	GUI_DrawPoint
 614              	.LVL67:
 280:Core/Src/gui.c **** 
 615              		.loc 1 280 1 is_stmt 0 view .LVU144
 616 009c BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 280:Core/Src/gui.c **** 
 617              		.loc 1 280 1 view .LVU145
 618              		.cfi_endproc
 619              	.LFE136:
 621              		.section	.text.gui_circle,"ax",%progbits
 622              		.align	1
 623              		.global	gui_circle
 624              		.syntax unified
 625              		.thumb
 626              		.thumb_func
 627              		.fpu fpv4-sp-d16
 629              	gui_circle:
 630              	.LVL68:
 631              	.LFB137:
 293:Core/Src/gui.c **** 	int x = 0, y = r, yi, d;
 632              		.loc 1 293 1 is_stmt 1 view -0
 633              		.cfi_startproc
 634              		@ args = 4, pretend = 0, frame = 0
 635              		@ frame_needed = 0, uses_anonymous_args = 0
 293:Core/Src/gui.c **** 	int x = 0, y = r, yi, d;
 636              		.loc 1 293 1 is_stmt 0 view .LVU147
 637 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 638              	.LCFI10:
 639              		.cfi_def_cfa_offset 32
 640              		.cfi_offset 4, -32
 641              		.cfi_offset 5, -28
 642              		.cfi_offset 6, -24
 643              		.cfi_offset 7, -20
 644              		.cfi_offset 8, -16
 645              		.cfi_offset 9, -12
 646              		.cfi_offset 10, -8
 647              		.cfi_offset 14, -4
 648 0004 82B0     		sub	sp, sp, #8
 649              	.LCFI11:
 650              		.cfi_def_cfa_offset 40
 651 0006 0746     		mov	r7, r0
 652 0008 8846     		mov	r8, r1
 653 000a 9146     		mov	r9, r2
 654 000c 1D46     		mov	r5, r3
 655 000e 0A9C     		ldr	r4, [sp, #40]
 294:Core/Src/gui.c **** 
 656              		.loc 1 294 2 is_stmt 1 view .LVU148
 657              	.LVL69:
 296:Core/Src/gui.c **** 
 658              		.loc 1 296 2 view .LVU149
 296:Core/Src/gui.c **** 
 659              		.loc 1 296 12 is_stmt 0 view .LVU150
ARM GAS  /tmp/ccWgdbjA.s 			page 21


 660 0010 4FEA430A 		lsl	r10, r3, #1
 296:Core/Src/gui.c **** 
 661              		.loc 1 296 4 view .LVU151
 662 0014 CAF1030A 		rsb	r10, r10, #3
 663              	.LVL70:
 299:Core/Src/gui.c **** 	{
 664              		.loc 1 299 2 is_stmt 1 view .LVU152
 299:Core/Src/gui.c **** 	{
 665              		.loc 1 299 5 is_stmt 0 view .LVU153
 666 0018 24B3     		cbz	r4, .L40
 294:Core/Src/gui.c **** 
 667              		.loc 1 294 6 view .LVU154
 668 001a 0026     		movs	r6, #0
 669 001c 14E0     		b	.L39
 670              	.LVL71:
 671              	.L41:
 304:Core/Src/gui.c **** 
 672              		.loc 1 304 5 is_stmt 1 discriminator 3 view .LVU155
 673 001e CDF80090 		str	r9, [sp]
 674 0022 2346     		mov	r3, r4
 675 0024 3246     		mov	r2, r6
 676 0026 4146     		mov	r1, r8
 677 0028 3846     		mov	r0, r7
 678 002a FFF7FEFF 		bl	_draw_circle_8
 679              	.LVL72:
 303:Core/Src/gui.c **** 				_draw_circle_8(xc, yc, x, yi, c);
 680              		.loc 1 303 26 discriminator 3 view .LVU156
 303:Core/Src/gui.c **** 				_draw_circle_8(xc, yc, x, yi, c);
 681              		.loc 1 303 28 is_stmt 0 discriminator 3 view .LVU157
 682 002e 0134     		adds	r4, r4, #1
 683              	.LVL73:
 684              	.L44:
 303:Core/Src/gui.c **** 				_draw_circle_8(xc, yc, x, yi, c);
 685              		.loc 1 303 17 is_stmt 1 discriminator 1 view .LVU158
 303:Core/Src/gui.c **** 				_draw_circle_8(xc, yc, x, yi, c);
 686              		.loc 1 303 4 is_stmt 0 discriminator 1 view .LVU159
 687 0030 A542     		cmp	r5, r4
 688 0032 F4DA     		bge	.L41
 306:Core/Src/gui.c **** 				d = d + 4 * x + 6;
 689              		.loc 1 306 4 is_stmt 1 view .LVU160
 306:Core/Src/gui.c **** 				d = d + 4 * x + 6;
 690              		.loc 1 306 7 is_stmt 0 view .LVU161
 691 0034 BAF1000F 		cmp	r10, #0
 692 0038 0ADB     		blt	.L52
 309:Core/Src/gui.c **** 				y--;
 693              		.loc 1 309 5 is_stmt 1 view .LVU162
 309:Core/Src/gui.c **** 				y--;
 694              		.loc 1 309 20 is_stmt 0 view .LVU163
 695 003a 731B     		subs	r3, r6, r5
 309:Core/Src/gui.c **** 				y--;
 696              		.loc 1 309 11 view .LVU164
 697 003c 0AEB830A 		add	r10, r10, r3, lsl #2
 698              	.LVL74:
 309:Core/Src/gui.c **** 				y--;
 699              		.loc 1 309 7 view .LVU165
 700 0040 0AF10A0A 		add	r10, r10, #10
 701              	.LVL75:
ARM GAS  /tmp/ccWgdbjA.s 			page 22


 310:Core/Src/gui.c **** 			}
 702              		.loc 1 310 5 is_stmt 1 view .LVU166
 310:Core/Src/gui.c **** 			}
 703              		.loc 1 310 6 is_stmt 0 view .LVU167
 704 0044 013D     		subs	r5, r5, #1
 705              	.LVL76:
 706              	.L43:
 312:Core/Src/gui.c **** 		}
 707              		.loc 1 312 4 is_stmt 1 view .LVU168
 312:Core/Src/gui.c **** 		}
 708              		.loc 1 312 5 is_stmt 0 view .LVU169
 709 0046 0136     		adds	r6, r6, #1
 710              	.LVL77:
 711              	.L39:
 302:Core/Src/gui.c **** 			for (yi = x; yi <= y; yi++)
 712              		.loc 1 302 9 is_stmt 1 view .LVU170
 713 0048 AE42     		cmp	r6, r5
 714 004a 1FDC     		bgt	.L38
 303:Core/Src/gui.c **** 				_draw_circle_8(xc, yc, x, yi, c);
 715              		.loc 1 303 12 is_stmt 0 view .LVU171
 716 004c 3446     		mov	r4, r6
 717 004e EFE7     		b	.L44
 718              	.LVL78:
 719              	.L52:
 307:Core/Src/gui.c **** 			} else {
 720              		.loc 1 307 5 is_stmt 1 view .LVU172
 307:Core/Src/gui.c **** 			} else {
 721              		.loc 1 307 11 is_stmt 0 view .LVU173
 722 0050 0AEB860A 		add	r10, r10, r6, lsl #2
 723              	.LVL79:
 307:Core/Src/gui.c **** 			} else {
 724              		.loc 1 307 7 view .LVU174
 725 0054 0AF1060A 		add	r10, r10, #6
 726              	.LVL80:
 307:Core/Src/gui.c **** 			} else {
 727              		.loc 1 307 7 view .LVU175
 728 0058 F5E7     		b	.L43
 729              	.LVL81:
 730              	.L53:
 320:Core/Src/gui.c **** 			} else {
 731              		.loc 1 320 5 is_stmt 1 view .LVU176
 320:Core/Src/gui.c **** 			} else {
 732              		.loc 1 320 11 is_stmt 0 view .LVU177
 733 005a 0AEB840A 		add	r10, r10, r4, lsl #2
 734              	.LVL82:
 320:Core/Src/gui.c **** 			} else {
 735              		.loc 1 320 7 view .LVU178
 736 005e 0AF1060A 		add	r10, r10, #6
 737              	.LVL83:
 738              	.L47:
 325:Core/Src/gui.c **** 		}
 739              		.loc 1 325 4 is_stmt 1 view .LVU179
 325:Core/Src/gui.c **** 		}
 740              		.loc 1 325 5 is_stmt 0 view .LVU180
 741 0062 0134     		adds	r4, r4, #1
 742              	.LVL84:
 743              	.L40:
ARM GAS  /tmp/ccWgdbjA.s 			page 23


 317:Core/Src/gui.c **** 			_draw_circle_8(xc, yc, x, y, c);
 744              		.loc 1 317 9 is_stmt 1 view .LVU181
 745 0064 AC42     		cmp	r4, r5
 746 0066 11DC     		bgt	.L38
 318:Core/Src/gui.c **** 			if (d < 0) {
 747              		.loc 1 318 4 view .LVU182
 748 0068 CDF80090 		str	r9, [sp]
 749 006c 2B46     		mov	r3, r5
 750 006e 2246     		mov	r2, r4
 751 0070 4146     		mov	r1, r8
 752 0072 3846     		mov	r0, r7
 753 0074 FFF7FEFF 		bl	_draw_circle_8
 754              	.LVL85:
 319:Core/Src/gui.c **** 				d = d + 4 * x + 6;
 755              		.loc 1 319 4 view .LVU183
 319:Core/Src/gui.c **** 				d = d + 4 * x + 6;
 756              		.loc 1 319 7 is_stmt 0 view .LVU184
 757 0078 BAF1000F 		cmp	r10, #0
 758 007c EDDB     		blt	.L53
 322:Core/Src/gui.c **** 				y--;
 759              		.loc 1 322 5 is_stmt 1 view .LVU185
 322:Core/Src/gui.c **** 				y--;
 760              		.loc 1 322 20 is_stmt 0 view .LVU186
 761 007e 631B     		subs	r3, r4, r5
 322:Core/Src/gui.c **** 				y--;
 762              		.loc 1 322 11 view .LVU187
 763 0080 0AEB830A 		add	r10, r10, r3, lsl #2
 764              	.LVL86:
 322:Core/Src/gui.c **** 				y--;
 765              		.loc 1 322 7 view .LVU188
 766 0084 0AF10A0A 		add	r10, r10, #10
 767              	.LVL87:
 323:Core/Src/gui.c **** 			}
 768              		.loc 1 323 5 is_stmt 1 view .LVU189
 323:Core/Src/gui.c **** 			}
 769              		.loc 1 323 6 is_stmt 0 view .LVU190
 770 0088 013D     		subs	r5, r5, #1
 771              	.LVL88:
 323:Core/Src/gui.c **** 			}
 772              		.loc 1 323 6 view .LVU191
 773 008a EAE7     		b	.L47
 774              	.LVL89:
 775              	.L38:
 328:Core/Src/gui.c **** 
 776              		.loc 1 328 1 view .LVU192
 777 008c 02B0     		add	sp, sp, #8
 778              	.LCFI12:
 779              		.cfi_def_cfa_offset 32
 780              		@ sp needed
 781 008e BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 328:Core/Src/gui.c **** 
 782              		.loc 1 328 1 view .LVU193
 783              		.cfi_endproc
 784              	.LFE137:
 786              		.section	.text.LCD_DrawLine2,"ax",%progbits
 787              		.align	1
 788              		.global	LCD_DrawLine2
ARM GAS  /tmp/ccWgdbjA.s 			page 24


 789              		.syntax unified
 790              		.thumb
 791              		.thumb_func
 792              		.fpu fpv4-sp-d16
 794              	LCD_DrawLine2:
 795              	.LVL90:
 796              	.LFB133:
 180:Core/Src/gui.c **** 	u16 t; 
 797              		.loc 1 180 1 is_stmt 1 view -0
 798              		.cfi_startproc
 799              		@ args = 8, pretend = 0, frame = 16
 800              		@ frame_needed = 0, uses_anonymous_args = 0
 180:Core/Src/gui.c **** 	u16 t; 
 801              		.loc 1 180 1 is_stmt 0 view .LVU195
 802 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 803              	.LCFI13:
 804              		.cfi_def_cfa_offset 36
 805              		.cfi_offset 4, -36
 806              		.cfi_offset 5, -32
 807              		.cfi_offset 6, -28
 808              		.cfi_offset 7, -24
 809              		.cfi_offset 8, -20
 810              		.cfi_offset 9, -16
 811              		.cfi_offset 10, -12
 812              		.cfi_offset 11, -8
 813              		.cfi_offset 14, -4
 814 0004 87B0     		sub	sp, sp, #28
 815              	.LCFI14:
 816              		.cfi_def_cfa_offset 64
 817 0006 BDF84080 		ldrh	r8, [sp, #64]
 818 000a BDF844B0 		ldrh	fp, [sp, #68]
 181:Core/Src/gui.c **** 	int xerr=0,yerr=0,delta_x,delta_y,distance; 
 819              		.loc 1 181 2 is_stmt 1 view .LVU196
 182:Core/Src/gui.c **** 	int incx,incy,uRow,uCol; 
 820              		.loc 1 182 2 view .LVU197
 821              	.LVL91:
 183:Core/Src/gui.c **** 	if(x1<size||x2<size||y1<size||y2<size)
 822              		.loc 1 183 2 view .LVU198
 184:Core/Src/gui.c **** 	{
 823              		.loc 1 184 2 view .LVU199
 184:Core/Src/gui.c **** 	{
 824              		.loc 1 184 4 is_stmt 0 view .LVU200
 825 000e 4045     		cmp	r0, r8
 826 0010 4DD3     		bcc	.L54
 184:Core/Src/gui.c **** 	{
 827              		.loc 1 184 12 discriminator 1 view .LVU201
 828 0012 9045     		cmp	r8, r2
 829 0014 4BD8     		bhi	.L54
 184:Core/Src/gui.c **** 	{
 830              		.loc 1 184 21 discriminator 2 view .LVU202
 831 0016 8845     		cmp	r8, r1
 832 0018 49D8     		bhi	.L54
 184:Core/Src/gui.c **** 	{
 833              		.loc 1 184 30 discriminator 3 view .LVU203
 834 001a 9845     		cmp	r8, r3
 835 001c 47D8     		bhi	.L54
 188:Core/Src/gui.c **** 	delta_y=y2-y1; 
ARM GAS  /tmp/ccWgdbjA.s 			page 25


 836              		.loc 1 188 2 is_stmt 1 view .LVU204
 188:Core/Src/gui.c **** 	delta_y=y2-y1; 
 837              		.loc 1 188 12 is_stmt 0 view .LVU205
 838 001e 8146     		mov	r9, r0
 188:Core/Src/gui.c **** 	delta_y=y2-y1; 
 839              		.loc 1 188 9 view .LVU206
 840 0020 141A     		subs	r4, r2, r0
 841 0022 0394     		str	r4, [sp, #12]
 842              	.LVL92:
 189:Core/Src/gui.c **** 	uRow=x1; 
 843              		.loc 1 189 2 is_stmt 1 view .LVU207
 189:Core/Src/gui.c **** 	uRow=x1; 
 844              		.loc 1 189 12 is_stmt 0 view .LVU208
 845 0024 8A46     		mov	r10, r1
 189:Core/Src/gui.c **** 	uRow=x1; 
 846              		.loc 1 189 9 view .LVU209
 847 0026 5D1A     		subs	r5, r3, r1
 848 0028 0295     		str	r5, [sp, #8]
 849              	.LVL93:
 190:Core/Src/gui.c **** 	uCol=y1; 
 850              		.loc 1 190 2 is_stmt 1 view .LVU210
 191:Core/Src/gui.c **** 	if(delta_x>0)incx=1; //…Ë÷√µ•≤Ω∑ΩœÚ 
 851              		.loc 1 191 2 view .LVU211
 192:Core/Src/gui.c **** 	else if(delta_x==0)incx=0;//¥π÷±œﬂ 
 852              		.loc 1 192 2 view .LVU212
 192:Core/Src/gui.c **** 	else if(delta_x==0)incx=0;//¥π÷±œﬂ 
 853              		.loc 1 192 4 is_stmt 0 view .LVU213
 854 002a 002C     		cmp	r4, #0
 855 002c 0FDD     		ble	.L69
 192:Core/Src/gui.c **** 	else if(delta_x==0)incx=0;//¥π÷±œﬂ 
 856              		.loc 1 192 19 view .LVU214
 857 002e 0122     		movs	r2, #1
 858              	.LVL94:
 192:Core/Src/gui.c **** 	else if(delta_x==0)incx=0;//¥π÷±œﬂ 
 859              		.loc 1 192 19 view .LVU215
 860 0030 0492     		str	r2, [sp, #16]
 861              	.LVL95:
 862              	.L56:
 195:Core/Src/gui.c **** 	else if(delta_y==0)incy=0;//ÀÆ∆Ωœﬂ 
 863              		.loc 1 195 2 is_stmt 1 view .LVU216
 195:Core/Src/gui.c **** 	else if(delta_y==0)incy=0;//ÀÆ∆Ωœﬂ 
 864              		.loc 1 195 4 is_stmt 0 view .LVU217
 865 0032 029A     		ldr	r2, [sp, #8]
 866 0034 002A     		cmp	r2, #0
 867 0036 14DD     		ble	.L70
 195:Core/Src/gui.c **** 	else if(delta_y==0)incy=0;//ÀÆ∆Ωœﬂ 
 868              		.loc 1 195 19 view .LVU218
 869 0038 0123     		movs	r3, #1
 870              	.LVL96:
 195:Core/Src/gui.c **** 	else if(delta_y==0)incy=0;//ÀÆ∆Ωœﬂ 
 871              		.loc 1 195 19 view .LVU219
 872 003a 0593     		str	r3, [sp, #20]
 873              	.LVL97:
 874              	.L57:
 198:Core/Src/gui.c **** 	else distance=delta_y; 
 875              		.loc 1 198 2 is_stmt 1 view .LVU220
 198:Core/Src/gui.c **** 	else distance=delta_y; 
ARM GAS  /tmp/ccWgdbjA.s 			page 26


 876              		.loc 1 198 4 is_stmt 0 view .LVU221
 877 003c 039E     		ldr	r6, [sp, #12]
 878 003e 029A     		ldr	r2, [sp, #8]
 879 0040 9642     		cmp	r6, r2
 880 0042 00DC     		bgt	.L58
 199:Core/Src/gui.c **** 	for(t=0;t<=distance+1;t++ )//ª≠œﬂ ‰≥ˆ 
 881              		.loc 1 199 15 view .LVU222
 882 0044 1646     		mov	r6, r2
 883              	.LVL98:
 884              	.L58:
 200:Core/Src/gui.c **** 	{  
 885              		.loc 1 200 2 is_stmt 1 view .LVU223
 182:Core/Src/gui.c **** 	int incx,incy,uRow,uCol; 
 886              		.loc 1 182 13 is_stmt 0 view .LVU224
 887 0046 0025     		movs	r5, #0
 182:Core/Src/gui.c **** 	int incx,incy,uRow,uCol; 
 888              		.loc 1 182 6 view .LVU225
 889 0048 2F46     		mov	r7, r5
 200:Core/Src/gui.c **** 	{  
 890              		.loc 1 200 7 view .LVU226
 891 004a 2C46     		mov	r4, r5
 200:Core/Src/gui.c **** 	{  
 892              		.loc 1 200 2 view .LVU227
 893 004c 15E0     		b	.L59
 894              	.LVL99:
 895              	.L69:
 193:Core/Src/gui.c **** 	else {incx=-1;delta_x=-delta_x;} 
 896              		.loc 1 193 7 is_stmt 1 view .LVU228
 193:Core/Src/gui.c **** 	else {incx=-1;delta_x=-delta_x;} 
 897              		.loc 1 193 9 is_stmt 0 view .LVU229
 898 004e 2CB1     		cbz	r4, .L64
 194:Core/Src/gui.c **** 	if(delta_y>0)incy=1; 
 899              		.loc 1 194 8 is_stmt 1 view .LVU230
 900              	.LVL100:
 194:Core/Src/gui.c **** 	if(delta_y>0)incy=1; 
 901              		.loc 1 194 16 view .LVU231
 194:Core/Src/gui.c **** 	if(delta_y>0)incy=1; 
 902              		.loc 1 194 23 is_stmt 0 view .LVU232
 903 0050 821A     		subs	r2, r0, r2
 904              	.LVL101:
 194:Core/Src/gui.c **** 	if(delta_y>0)incy=1; 
 905              		.loc 1 194 23 view .LVU233
 906 0052 0392     		str	r2, [sp, #12]
 907              	.LVL102:
 194:Core/Src/gui.c **** 	if(delta_y>0)incy=1; 
 908              		.loc 1 194 12 view .LVU234
 909 0054 4FF0FF32 		mov	r2, #-1
 910              	.LVL103:
 194:Core/Src/gui.c **** 	if(delta_y>0)incy=1; 
 911              		.loc 1 194 12 view .LVU235
 912 0058 0492     		str	r2, [sp, #16]
 913 005a EAE7     		b	.L56
 914              	.LVL104:
 915              	.L64:
 193:Core/Src/gui.c **** 	else {incx=-1;delta_x=-delta_x;} 
 916              		.loc 1 193 25 view .LVU236
 917 005c 039A     		ldr	r2, [sp, #12]
ARM GAS  /tmp/ccWgdbjA.s 			page 27


 918              	.LVL105:
 193:Core/Src/gui.c **** 	else {incx=-1;delta_x=-delta_x;} 
 919              		.loc 1 193 25 view .LVU237
 920 005e 0492     		str	r2, [sp, #16]
 921 0060 E7E7     		b	.L56
 922              	.LVL106:
 923              	.L70:
 196:Core/Src/gui.c **** 	else{incy=-1;delta_y=-delta_y;} 
 924              		.loc 1 196 7 is_stmt 1 view .LVU238
 196:Core/Src/gui.c **** 	else{incy=-1;delta_y=-delta_y;} 
 925              		.loc 1 196 9 is_stmt 0 view .LVU239
 926 0062 2AB1     		cbz	r2, .L66
 197:Core/Src/gui.c **** 	if( delta_x>delta_y)distance=delta_x; //—°»°ª˘±æ‘ˆ¡ø◊¯±Í÷· 
 927              		.loc 1 197 7 is_stmt 1 view .LVU240
 928              	.LVL107:
 197:Core/Src/gui.c **** 	if( delta_x>delta_y)distance=delta_x; //—°»°ª˘±æ‘ˆ¡ø◊¯±Í÷· 
 929              		.loc 1 197 15 view .LVU241
 197:Core/Src/gui.c **** 	if( delta_x>delta_y)distance=delta_x; //—°»°ª˘±æ‘ˆ¡ø◊¯±Í÷· 
 930              		.loc 1 197 22 is_stmt 0 view .LVU242
 931 0064 CB1A     		subs	r3, r1, r3
 932              	.LVL108:
 197:Core/Src/gui.c **** 	if( delta_x>delta_y)distance=delta_x; //—°»°ª˘±æ‘ˆ¡ø◊¯±Í÷· 
 933              		.loc 1 197 22 view .LVU243
 934 0066 0293     		str	r3, [sp, #8]
 935              	.LVL109:
 197:Core/Src/gui.c **** 	if( delta_x>delta_y)distance=delta_x; //—°»°ª˘±æ‘ˆ¡ø◊¯±Í÷· 
 936              		.loc 1 197 11 view .LVU244
 937 0068 4FF0FF33 		mov	r3, #-1
 938              	.LVL110:
 197:Core/Src/gui.c **** 	if( delta_x>delta_y)distance=delta_x; //—°»°ª˘±æ‘ˆ¡ø◊¯±Í÷· 
 939              		.loc 1 197 11 view .LVU245
 940 006c 0593     		str	r3, [sp, #20]
 941 006e E5E7     		b	.L57
 942              	.LVL111:
 943              	.L66:
 196:Core/Src/gui.c **** 	else{incy=-1;delta_y=-delta_y;} 
 944              		.loc 1 196 25 view .LVU246
 945 0070 029B     		ldr	r3, [sp, #8]
 946              	.LVL112:
 196:Core/Src/gui.c **** 	else{incy=-1;delta_y=-delta_y;} 
 947              		.loc 1 196 25 view .LVU247
 948 0072 0593     		str	r3, [sp, #20]
 949 0074 E2E7     		b	.L57
 950              	.LVL113:
 951              	.L61:
 200:Core/Src/gui.c **** 	{  
 952              		.loc 1 200 24 is_stmt 1 discriminator 2 view .LVU248
 200:Core/Src/gui.c **** 	{  
 953              		.loc 1 200 25 is_stmt 0 discriminator 2 view .LVU249
 954 0076 0134     		adds	r4, r4, #1
 955              	.LVL114:
 200:Core/Src/gui.c **** 	{  
 956              		.loc 1 200 25 discriminator 2 view .LVU250
 957 0078 A4B2     		uxth	r4, r4
 958              	.LVL115:
 959              	.L59:
 200:Core/Src/gui.c **** 	{  
ARM GAS  /tmp/ccWgdbjA.s 			page 28


 960              		.loc 1 200 10 is_stmt 1 discriminator 1 view .LVU251
 200:Core/Src/gui.c **** 	{  
 961              		.loc 1 200 21 is_stmt 0 discriminator 1 view .LVU252
 962 007a 731C     		adds	r3, r6, #1
 200:Core/Src/gui.c **** 	{  
 963              		.loc 1 200 2 discriminator 1 view .LVU253
 964 007c 9C42     		cmp	r4, r3
 965 007e 16DC     		bgt	.L54
 202:Core/Src/gui.c **** 		//LCD_DrawPoint(uRow,uCol);//ª≠µ„ 
 966              		.loc 1 202 3 is_stmt 1 view .LVU254
 967 0080 0123     		movs	r3, #1
 968 0082 0093     		str	r3, [sp]
 969 0084 4346     		mov	r3, r8
 970 0086 5A46     		mov	r2, fp
 971 0088 5146     		mov	r1, r10
 972 008a 4846     		mov	r0, r9
 973 008c FFF7FEFF 		bl	gui_circle
 974              	.LVL116:
 204:Core/Src/gui.c **** 		yerr+=delta_y ; 
 975              		.loc 1 204 3 view .LVU255
 204:Core/Src/gui.c **** 		yerr+=delta_y ; 
 976              		.loc 1 204 7 is_stmt 0 view .LVU256
 977 0090 039B     		ldr	r3, [sp, #12]
 978 0092 1F44     		add	r7, r7, r3
 979              	.LVL117:
 205:Core/Src/gui.c **** 		if(xerr>distance) 
 980              		.loc 1 205 3 is_stmt 1 view .LVU257
 205:Core/Src/gui.c **** 		if(xerr>distance) 
 981              		.loc 1 205 7 is_stmt 0 view .LVU258
 982 0094 029B     		ldr	r3, [sp, #8]
 983 0096 1D44     		add	r5, r5, r3
 984              	.LVL118:
 206:Core/Src/gui.c **** 		{ 
 985              		.loc 1 206 3 is_stmt 1 view .LVU259
 206:Core/Src/gui.c **** 		{ 
 986              		.loc 1 206 5 is_stmt 0 view .LVU260
 987 0098 BE42     		cmp	r6, r7
 988 009a 02DA     		bge	.L60
 208:Core/Src/gui.c **** 			uRow+=incx; 
 989              		.loc 1 208 4 is_stmt 1 view .LVU261
 208:Core/Src/gui.c **** 			uRow+=incx; 
 990              		.loc 1 208 8 is_stmt 0 view .LVU262
 991 009c BF1B     		subs	r7, r7, r6
 992              	.LVL119:
 209:Core/Src/gui.c **** 		} 
 993              		.loc 1 209 4 is_stmt 1 view .LVU263
 209:Core/Src/gui.c **** 		} 
 994              		.loc 1 209 8 is_stmt 0 view .LVU264
 995 009e 049B     		ldr	r3, [sp, #16]
 996 00a0 9944     		add	r9, r9, r3
 997              	.LVL120:
 998              	.L60:
 211:Core/Src/gui.c **** 		{ 
 999              		.loc 1 211 3 is_stmt 1 view .LVU265
 211:Core/Src/gui.c **** 		{ 
 1000              		.loc 1 211 5 is_stmt 0 view .LVU266
 1001 00a2 AE42     		cmp	r6, r5
ARM GAS  /tmp/ccWgdbjA.s 			page 29


 1002 00a4 E7DA     		bge	.L61
 213:Core/Src/gui.c **** 			uCol+=incy; 
 1003              		.loc 1 213 4 is_stmt 1 view .LVU267
 213:Core/Src/gui.c **** 			uCol+=incy; 
 1004              		.loc 1 213 8 is_stmt 0 view .LVU268
 1005 00a6 AD1B     		subs	r5, r5, r6
 1006              	.LVL121:
 214:Core/Src/gui.c **** 		} 
 1007              		.loc 1 214 4 is_stmt 1 view .LVU269
 214:Core/Src/gui.c **** 		} 
 1008              		.loc 1 214 8 is_stmt 0 view .LVU270
 1009 00a8 059B     		ldr	r3, [sp, #20]
 1010 00aa 9A44     		add	r10, r10, r3
 1011              	.LVL122:
 214:Core/Src/gui.c **** 		} 
 1012              		.loc 1 214 8 view .LVU271
 1013 00ac E3E7     		b	.L61
 1014              	.LVL123:
 1015              	.L54:
 217:Core/Src/gui.c **** 
 1016              		.loc 1 217 1 view .LVU272
 1017 00ae 07B0     		add	sp, sp, #28
 1018              	.LCFI15:
 1019              		.cfi_def_cfa_offset 36
 1020              		@ sp needed
 1021 00b0 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 217:Core/Src/gui.c **** 
 1022              		.loc 1 217 1 view .LVU273
 1023              		.cfi_endproc
 1024              	.LFE133:
 1026              		.section	.text.Draw_Triangel,"ax",%progbits
 1027              		.align	1
 1028              		.global	Draw_Triangel
 1029              		.syntax unified
 1030              		.thumb
 1031              		.thumb_func
 1032              		.fpu fpv4-sp-d16
 1034              	Draw_Triangel:
 1035              	.LVL124:
 1036              	.LFB138:
 343:Core/Src/gui.c **** 	LCD_DrawLine(x0,y0,x1,y1);
 1037              		.loc 1 343 1 is_stmt 1 view -0
 1038              		.cfi_startproc
 1039              		@ args = 8, pretend = 0, frame = 0
 1040              		@ frame_needed = 0, uses_anonymous_args = 0
 343:Core/Src/gui.c **** 	LCD_DrawLine(x0,y0,x1,y1);
 1041              		.loc 1 343 1 is_stmt 0 view .LVU275
 1042 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 1043              	.LCFI16:
 1044              		.cfi_def_cfa_offset 32
 1045              		.cfi_offset 3, -32
 1046              		.cfi_offset 4, -28
 1047              		.cfi_offset 5, -24
 1048              		.cfi_offset 6, -20
 1049              		.cfi_offset 7, -16
 1050              		.cfi_offset 8, -12
 1051              		.cfi_offset 9, -8
ARM GAS  /tmp/ccWgdbjA.s 			page 30


 1052              		.cfi_offset 14, -4
 1053 0004 0446     		mov	r4, r0
 1054 0006 0D46     		mov	r5, r1
 1055 0008 1646     		mov	r6, r2
 1056 000a 1F46     		mov	r7, r3
 1057 000c BDF82080 		ldrh	r8, [sp, #32]
 1058 0010 BDF82490 		ldrh	r9, [sp, #36]
 344:Core/Src/gui.c **** 	LCD_DrawLine(x1,y1,x2,y2);
 1059              		.loc 1 344 2 is_stmt 1 view .LVU276
 1060 0014 FFF7FEFF 		bl	LCD_DrawLine
 1061              	.LVL125:
 345:Core/Src/gui.c **** 	LCD_DrawLine(x2,y2,x0,y0);
 1062              		.loc 1 345 2 view .LVU277
 1063 0018 4B46     		mov	r3, r9
 1064 001a 4246     		mov	r2, r8
 1065 001c 3946     		mov	r1, r7
 1066 001e 3046     		mov	r0, r6
 1067 0020 FFF7FEFF 		bl	LCD_DrawLine
 1068              	.LVL126:
 346:Core/Src/gui.c **** }
 1069              		.loc 1 346 2 view .LVU278
 1070 0024 2B46     		mov	r3, r5
 1071 0026 2246     		mov	r2, r4
 1072 0028 4946     		mov	r1, r9
 1073 002a 4046     		mov	r0, r8
 1074 002c FFF7FEFF 		bl	LCD_DrawLine
 1075              	.LVL127:
 347:Core/Src/gui.c **** 
 1076              		.loc 1 347 1 is_stmt 0 view .LVU279
 1077 0030 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 347:Core/Src/gui.c **** 
 1078              		.loc 1 347 1 view .LVU280
 1079              		.cfi_endproc
 1080              	.LFE138:
 1082              		.section	.text.Fill_Triangel,"ax",%progbits
 1083              		.align	1
 1084              		.global	Fill_Triangel
 1085              		.syntax unified
 1086              		.thumb
 1087              		.thumb_func
 1088              		.fpu fpv4-sp-d16
 1090              	Fill_Triangel:
 1091              	.LVL128:
 1092              	.LFB140:
 356:Core/Src/gui.c **** 
 357:Core/Src/gui.c **** /*****************************************************************************
 358:Core/Src/gui.c ****  * @name       :void Fill_Triangel(u16 x0,u16 y0,u16 x1,u16 y1,u16 x2,u16 y2)
 359:Core/Src/gui.c ****  * @date       :2018-08-09 
 360:Core/Src/gui.c ****  * @function   :filling a triangle at a specified position
 361:Core/Src/gui.c ****  * @parameters :x0:the bebinning x coordinate of the triangular edge 
 362:Core/Src/gui.c ****                 y0:the bebinning y coordinate of the triangular edge 
 363:Core/Src/gui.c **** 								x1:the vertex x coordinate of the triangular
 364:Core/Src/gui.c **** 								y1:the vertex y coordinate of the triangular
 365:Core/Src/gui.c **** 								x2:the ending x coordinate of the triangular edge 
 366:Core/Src/gui.c **** 								y2:the ending y coordinate of the triangular edge 
 367:Core/Src/gui.c ****  * @retvalue   :None
 368:Core/Src/gui.c **** ******************************************************************************/ 
ARM GAS  /tmp/ccWgdbjA.s 			page 31


 369:Core/Src/gui.c **** void Fill_Triangel(u16 x0,u16 y0,u16 x1,u16 y1,u16 x2,u16 y2)
 370:Core/Src/gui.c **** {
 1093              		.loc 1 370 1 is_stmt 1 view -0
 1094              		.cfi_startproc
 1095              		@ args = 8, pretend = 0, frame = 24
 1096              		@ frame_needed = 0, uses_anonymous_args = 0
 1097              		.loc 1 370 1 is_stmt 0 view .LVU282
 1098 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1099              	.LCFI17:
 1100              		.cfi_def_cfa_offset 36
 1101              		.cfi_offset 4, -36
 1102              		.cfi_offset 5, -32
 1103              		.cfi_offset 6, -28
 1104              		.cfi_offset 7, -24
 1105              		.cfi_offset 8, -20
 1106              		.cfi_offset 9, -16
 1107              		.cfi_offset 10, -12
 1108              		.cfi_offset 11, -8
 1109              		.cfi_offset 14, -4
 1110 0004 89B0     		sub	sp, sp, #36
 1111              	.LCFI18:
 1112              		.cfi_def_cfa_offset 72
 1113 0006 ADF81600 		strh	r0, [sp, #22]	@ movhi
 1114 000a ADF81410 		strh	r1, [sp, #20]	@ movhi
 1115 000e ADF81220 		strh	r2, [sp, #18]	@ movhi
 1116 0012 ADF81030 		strh	r3, [sp, #16]	@ movhi
 371:Core/Src/gui.c **** 	u16 a, b, y, last;
 1117              		.loc 1 371 2 is_stmt 1 view .LVU283
 372:Core/Src/gui.c **** 	int dx01, dy01, dx02, dy02, dx12, dy12;
 1118              		.loc 1 372 2 view .LVU284
 373:Core/Src/gui.c **** 	long sa = 0;
 1119              		.loc 1 373 2 view .LVU285
 1120              	.LVL129:
 374:Core/Src/gui.c **** 	long sb = 0;
 1121              		.loc 1 374 2 view .LVU286
 375:Core/Src/gui.c ****  	if (y0 > y1) 
 1122              		.loc 1 375 3 view .LVU287
 1123              		.loc 1 375 6 is_stmt 0 view .LVU288
 1124 0016 9942     		cmp	r1, r3
 1125 0018 31D8     		bhi	.L91
 1126              	.LVL130:
 1127              	.L74:
 376:Core/Src/gui.c **** 	{
 377:Core/Src/gui.c ****     _swap(&y0,&y1); 
 378:Core/Src/gui.c **** 		_swap(&x0,&x1);
 379:Core/Src/gui.c ****  	}
 380:Core/Src/gui.c ****  	if (y1 > y2) 
 1128              		.loc 1 380 3 is_stmt 1 view .LVU289
 1129              		.loc 1 380 10 is_stmt 0 view .LVU290
 1130 001a BDF81020 		ldrh	r2, [sp, #16]
 1131 001e BDF84C30 		ldrh	r3, [sp, #76]
 1132              		.loc 1 380 6 view .LVU291
 1133 0022 9A42     		cmp	r2, r3
 1134 0024 36D8     		bhi	.L92
 1135              	.L75:
 381:Core/Src/gui.c **** 	{
 382:Core/Src/gui.c ****     _swap(&y2,&y1); 
ARM GAS  /tmp/ccWgdbjA.s 			page 32


 383:Core/Src/gui.c **** 		_swap(&x2,&x1);
 384:Core/Src/gui.c ****  	}
 385:Core/Src/gui.c ****   if (y0 > y1) 
 1136              		.loc 1 385 3 is_stmt 1 view .LVU292
 1137              		.loc 1 385 10 is_stmt 0 view .LVU293
 1138 0026 BDF81420 		ldrh	r2, [sp, #20]
 1139 002a BDF81030 		ldrh	r3, [sp, #16]
 1140              		.loc 1 385 6 view .LVU294
 1141 002e 9A42     		cmp	r2, r3
 1142 0030 3AD8     		bhi	.L93
 1143              	.L76:
 386:Core/Src/gui.c **** 	{
 387:Core/Src/gui.c ****     _swap(&y0,&y1); 
 388:Core/Src/gui.c **** 		_swap(&x0,&x1);
 389:Core/Src/gui.c ****   }
 390:Core/Src/gui.c **** 	if(y0 == y2) 
 1144              		.loc 1 390 2 is_stmt 1 view .LVU295
 1145              		.loc 1 390 8 is_stmt 0 view .LVU296
 1146 0032 BDF81440 		ldrh	r4, [sp, #20]
 1147 0036 BDF84C30 		ldrh	r3, [sp, #76]
 1148              		.loc 1 390 4 view .LVU297
 1149 003a 9C42     		cmp	r4, r3
 1150 003c 3FD0     		beq	.L94
 391:Core/Src/gui.c **** 	{ 
 392:Core/Src/gui.c **** 		a = b = x0;
 393:Core/Src/gui.c **** 		if(x1 < a)
 394:Core/Src/gui.c ****     {
 395:Core/Src/gui.c **** 			a = x1;
 396:Core/Src/gui.c ****     }
 397:Core/Src/gui.c ****     else if(x1 > b)
 398:Core/Src/gui.c ****     {
 399:Core/Src/gui.c **** 			b = x1;
 400:Core/Src/gui.c ****     }
 401:Core/Src/gui.c ****     if(x2 < a)
 402:Core/Src/gui.c ****     {
 403:Core/Src/gui.c **** 			a = x2;
 404:Core/Src/gui.c ****     }
 405:Core/Src/gui.c **** 		else if(x2 > b)
 406:Core/Src/gui.c ****     {
 407:Core/Src/gui.c **** 			b = x2;
 408:Core/Src/gui.c ****     }
 409:Core/Src/gui.c **** 		LCD_Fill(a,y0,b,y0,POINT_COLOR);
 410:Core/Src/gui.c ****     return;
 411:Core/Src/gui.c **** 	}
 412:Core/Src/gui.c **** 	dx01 = x1 - x0;
 1151              		.loc 1 412 2 is_stmt 1 view .LVU298
 1152              		.loc 1 412 12 is_stmt 0 view .LVU299
 1153 003e BDF81220 		ldrh	r2, [sp, #18]
 1154 0042 BDF81670 		ldrh	r7, [sp, #22]
 1155              		.loc 1 412 7 view .LVU300
 1156 0046 D11B     		subs	r1, r2, r7
 1157              	.LVL131:
 413:Core/Src/gui.c **** 	dy01 = y1 - y0;
 1158              		.loc 1 413 2 is_stmt 1 view .LVU301
 1159              		.loc 1 413 12 is_stmt 0 view .LVU302
 1160 0048 BDF81090 		ldrh	r9, [sp, #16]
 1161              		.loc 1 413 7 view .LVU303
ARM GAS  /tmp/ccWgdbjA.s 			page 33


 1162 004c A9EB040B 		sub	fp, r9, r4
 1163              	.LVL132:
 414:Core/Src/gui.c **** 	dx02 = x2 - x0;
 1164              		.loc 1 414 2 is_stmt 1 view .LVU304
 1165              		.loc 1 414 12 is_stmt 0 view .LVU305
 1166 0050 BDF848A0 		ldrh	r10, [sp, #72]
 1167              		.loc 1 414 7 view .LVU306
 1168 0054 AAEB0707 		sub	r7, r10, r7
 1169              	.LVL133:
 415:Core/Src/gui.c **** 	dy02 = y2 - y0;
 1170              		.loc 1 415 2 is_stmt 1 view .LVU307
 1171              		.loc 1 415 7 is_stmt 0 view .LVU308
 1172 0058 A3EB0408 		sub	r8, r3, r4
 1173              	.LVL134:
 416:Core/Src/gui.c **** 	dx12 = x2 - x1;
 1174              		.loc 1 416 2 is_stmt 1 view .LVU309
 1175              		.loc 1 416 7 is_stmt 0 view .LVU310
 1176 005c AAEB020A 		sub	r10, r10, r2
 1177              	.LVL135:
 417:Core/Src/gui.c **** 	dy12 = y2 - y1;
 1178              		.loc 1 417 2 is_stmt 1 view .LVU311
 1179              		.loc 1 417 7 is_stmt 0 view .LVU312
 1180 0060 A3EB0902 		sub	r2, r3, r9
 1181 0064 0292     		str	r2, [sp, #8]
 1182              	.LVL136:
 418:Core/Src/gui.c **** 	
 419:Core/Src/gui.c **** 	if(y1 == y2)
 1183              		.loc 1 419 2 is_stmt 1 view .LVU313
 1184              		.loc 1 419 4 is_stmt 0 view .LVU314
 1185 0066 4B45     		cmp	r3, r9
 1186 0068 03D0     		beq	.L83
 420:Core/Src/gui.c **** 	{
 421:Core/Src/gui.c **** 		last = y1; 
 422:Core/Src/gui.c **** 	}
 423:Core/Src/gui.c ****   else
 424:Core/Src/gui.c **** 	{
 425:Core/Src/gui.c **** 		last = y1-1; 
 1187              		.loc 1 425 3 is_stmt 1 view .LVU315
 1188              		.loc 1 425 8 is_stmt 0 view .LVU316
 1189 006a 09F1FF39 		add	r9, r9, #-1
 1190 006e 1FFA89F9 		uxth	r9, r9
 1191              	.LVL137:
 1192              	.L83:
 426:Core/Src/gui.c **** 	}
 427:Core/Src/gui.c **** 	for(y=y0; y<=last; y++) 
 1193              		.loc 1 427 2 is_stmt 1 view .LVU317
 374:Core/Src/gui.c ****  	if (y0 > y1) 
 1194              		.loc 1 374 7 is_stmt 0 view .LVU318
 1195 0072 0025     		movs	r5, #0
 373:Core/Src/gui.c **** 	long sb = 0;
 1196              		.loc 1 373 7 view .LVU319
 1197 0074 2E46     		mov	r6, r5
 1198 0076 CDF80CA0 		str	r10, [sp, #12]
 1199 007a 8A46     		mov	r10, r1
 1200              	.LVL138:
 1201              		.loc 1 427 2 view .LVU320
 1202 007c 5FE0     		b	.L84
ARM GAS  /tmp/ccWgdbjA.s 			page 34


 1203              	.LVL139:
 1204              	.L91:
 377:Core/Src/gui.c **** 		_swap(&x0,&x1);
 1205              		.loc 1 377 5 is_stmt 1 view .LVU321
 1206 007e 04A9     		add	r1, sp, #16
 1207              	.LVL140:
 377:Core/Src/gui.c **** 		_swap(&x0,&x1);
 1208              		.loc 1 377 5 is_stmt 0 view .LVU322
 1209 0080 05A8     		add	r0, sp, #20
 1210              	.LVL141:
 377:Core/Src/gui.c **** 		_swap(&x0,&x1);
 1211              		.loc 1 377 5 view .LVU323
 1212 0082 FFF7FEFF 		bl	_swap
 1213              	.LVL142:
 378:Core/Src/gui.c ****  	}
 1214              		.loc 1 378 3 is_stmt 1 view .LVU324
 1215 0086 0DF11201 		add	r1, sp, #18
 1216 008a 0DF11600 		add	r0, sp, #22
 1217 008e FFF7FEFF 		bl	_swap
 1218              	.LVL143:
 1219 0092 C2E7     		b	.L74
 1220              	.L92:
 382:Core/Src/gui.c **** 		_swap(&x2,&x1);
 1221              		.loc 1 382 5 view .LVU325
 1222 0094 04A9     		add	r1, sp, #16
 1223 0096 13A8     		add	r0, sp, #76
 1224 0098 FFF7FEFF 		bl	_swap
 1225              	.LVL144:
 383:Core/Src/gui.c ****  	}
 1226              		.loc 1 383 3 view .LVU326
 1227 009c 0DF11201 		add	r1, sp, #18
 1228 00a0 12A8     		add	r0, sp, #72
 1229 00a2 FFF7FEFF 		bl	_swap
 1230              	.LVL145:
 1231 00a6 BEE7     		b	.L75
 1232              	.L93:
 387:Core/Src/gui.c **** 		_swap(&x0,&x1);
 1233              		.loc 1 387 5 view .LVU327
 1234 00a8 04A9     		add	r1, sp, #16
 1235 00aa 05A8     		add	r0, sp, #20
 1236 00ac FFF7FEFF 		bl	_swap
 1237              	.LVL146:
 388:Core/Src/gui.c ****   }
 1238              		.loc 1 388 3 view .LVU328
 1239 00b0 0DF11201 		add	r1, sp, #18
 1240 00b4 0DF11600 		add	r0, sp, #22
 1241 00b8 FFF7FEFF 		bl	_swap
 1242              	.LVL147:
 1243 00bc B9E7     		b	.L76
 1244              	.L94:
 392:Core/Src/gui.c **** 		if(x1 < a)
 1245              		.loc 1 392 3 view .LVU329
 392:Core/Src/gui.c **** 		if(x1 < a)
 1246              		.loc 1 392 9 is_stmt 0 view .LVU330
 1247 00be BDF81630 		ldrh	r3, [sp, #22]
 1248 00c2 ADF81C30 		strh	r3, [sp, #28]	@ movhi
 392:Core/Src/gui.c **** 		if(x1 < a)
ARM GAS  /tmp/ccWgdbjA.s 			page 35


 1249              		.loc 1 392 5 view .LVU331
 1250 00c6 ADF81E30 		strh	r3, [sp, #30]	@ movhi
 393:Core/Src/gui.c ****     {
 1251              		.loc 1 393 3 is_stmt 1 view .LVU332
 393:Core/Src/gui.c ****     {
 1252              		.loc 1 393 9 is_stmt 0 view .LVU333
 1253 00ca BDF81220 		ldrh	r2, [sp, #18]
 393:Core/Src/gui.c ****     {
 1254              		.loc 1 393 5 view .LVU334
 1255 00ce 9342     		cmp	r3, r2
 1256 00d0 17D9     		bls	.L78
 395:Core/Src/gui.c ****     }
 1257              		.loc 1 395 4 is_stmt 1 view .LVU335
 395:Core/Src/gui.c ****     }
 1258              		.loc 1 395 6 is_stmt 0 view .LVU336
 1259 00d2 ADF81E20 		strh	r2, [sp, #30]	@ movhi
 1260              	.L79:
 401:Core/Src/gui.c ****     {
 1261              		.loc 1 401 5 is_stmt 1 view .LVU337
 401:Core/Src/gui.c ****     {
 1262              		.loc 1 401 11 is_stmt 0 view .LVU338
 1263 00d6 BDF84830 		ldrh	r3, [sp, #72]
 1264 00da BDF81E20 		ldrh	r2, [sp, #30]
 401:Core/Src/gui.c ****     {
 1265              		.loc 1 401 7 view .LVU339
 1266 00de 9342     		cmp	r3, r2
 1267 00e0 14D2     		bcs	.L80
 403:Core/Src/gui.c ****     }
 1268              		.loc 1 403 4 is_stmt 1 view .LVU340
 403:Core/Src/gui.c ****     }
 1269              		.loc 1 403 6 is_stmt 0 view .LVU341
 1270 00e2 ADF81E30 		strh	r3, [sp, #30]	@ movhi
 1271              	.L81:
 409:Core/Src/gui.c ****     return;
 1272              		.loc 1 409 3 is_stmt 1 view .LVU342
 1273 00e6 3D4B     		ldr	r3, .L98
 1274 00e8 1B88     		ldrh	r3, [r3]
 1275 00ea 0093     		str	r3, [sp]
 1276 00ec 2346     		mov	r3, r4
 1277 00ee BDF81C20 		ldrh	r2, [sp, #28]
 1278 00f2 2146     		mov	r1, r4
 1279 00f4 BDF81E00 		ldrh	r0, [sp, #30]
 1280 00f8 FFF7FEFF 		bl	LCD_Fill
 1281              	.LVL148:
 410:Core/Src/gui.c **** 	}
 1282              		.loc 1 410 5 view .LVU343
 1283              	.L73:
 428:Core/Src/gui.c **** 	{
 429:Core/Src/gui.c **** 		a = x0 + sa / dy01;
 430:Core/Src/gui.c **** 		b = x0 + sb / dy02;
 431:Core/Src/gui.c **** 		sa += dx01;
 432:Core/Src/gui.c ****     sb += dx02;
 433:Core/Src/gui.c ****     if(a > b)
 434:Core/Src/gui.c ****     {
 435:Core/Src/gui.c **** 			_swap(&a,&b);
 436:Core/Src/gui.c **** 		}
 437:Core/Src/gui.c **** 		LCD_Fill(a,y,b,y,POINT_COLOR);
ARM GAS  /tmp/ccWgdbjA.s 			page 36


 438:Core/Src/gui.c **** 	}
 439:Core/Src/gui.c **** 	sa = dx12 * (y - y1);
 440:Core/Src/gui.c **** 	sb = dx02 * (y - y0);
 441:Core/Src/gui.c **** 	for(; y<=y2; y++) 
 442:Core/Src/gui.c **** 	{
 443:Core/Src/gui.c **** 		a = x1 + sa / dy12;
 444:Core/Src/gui.c **** 		b = x0 + sb / dy02;
 445:Core/Src/gui.c **** 		sa += dx12;
 446:Core/Src/gui.c **** 		sb += dx02;
 447:Core/Src/gui.c **** 		if(a > b)
 448:Core/Src/gui.c **** 		{
 449:Core/Src/gui.c **** 			_swap(&a,&b);
 450:Core/Src/gui.c **** 		}
 451:Core/Src/gui.c **** 		LCD_Fill(a,y,b,y,POINT_COLOR);
 452:Core/Src/gui.c **** 	}
 453:Core/Src/gui.c **** }
 1284              		.loc 1 453 1 is_stmt 0 view .LVU344
 1285 00fc 09B0     		add	sp, sp, #36
 1286              	.LCFI19:
 1287              		.cfi_remember_state
 1288              		.cfi_def_cfa_offset 36
 1289              		@ sp needed
 1290 00fe BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1291              	.LVL149:
 1292              	.L78:
 1293              	.LCFI20:
 1294              		.cfi_restore_state
 397:Core/Src/gui.c ****     {
 1295              		.loc 1 397 10 is_stmt 1 view .LVU345
 397:Core/Src/gui.c ****     {
 1296              		.loc 1 397 12 is_stmt 0 view .LVU346
 1297 0102 9342     		cmp	r3, r2
 1298 0104 E7D2     		bcs	.L79
 399:Core/Src/gui.c ****     }
 1299              		.loc 1 399 4 is_stmt 1 view .LVU347
 399:Core/Src/gui.c ****     }
 1300              		.loc 1 399 6 is_stmt 0 view .LVU348
 1301 0106 ADF81C20 		strh	r2, [sp, #28]	@ movhi
 1302 010a E4E7     		b	.L79
 1303              	.L80:
 405:Core/Src/gui.c ****     {
 1304              		.loc 1 405 8 is_stmt 1 view .LVU349
 405:Core/Src/gui.c ****     {
 1305              		.loc 1 405 14 is_stmt 0 view .LVU350
 1306 010c BDF81C20 		ldrh	r2, [sp, #28]
 405:Core/Src/gui.c ****     {
 1307              		.loc 1 405 10 view .LVU351
 1308 0110 9342     		cmp	r3, r2
 1309 0112 E8D9     		bls	.L81
 407:Core/Src/gui.c ****     }
 1310              		.loc 1 407 4 is_stmt 1 view .LVU352
 407:Core/Src/gui.c ****     }
 1311              		.loc 1 407 6 is_stmt 0 view .LVU353
 1312 0114 ADF81C30 		strh	r3, [sp, #28]	@ movhi
 1313 0118 E5E7     		b	.L81
 1314              	.LVL150:
 1315              	.L96:
ARM GAS  /tmp/ccWgdbjA.s 			page 37


 435:Core/Src/gui.c **** 		}
 1316              		.loc 1 435 4 is_stmt 1 view .LVU354
 1317 011a 07A9     		add	r1, sp, #28
 1318 011c 0DF11E00 		add	r0, sp, #30
 1319 0120 FFF7FEFF 		bl	_swap
 1320              	.LVL151:
 1321              	.L85:
 437:Core/Src/gui.c **** 	}
 1322              		.loc 1 437 3 discriminator 2 view .LVU355
 1323 0124 2D4B     		ldr	r3, .L98
 1324 0126 1B88     		ldrh	r3, [r3]
 1325 0128 0093     		str	r3, [sp]
 1326 012a 2346     		mov	r3, r4
 1327 012c BDF81C20 		ldrh	r2, [sp, #28]
 1328 0130 2146     		mov	r1, r4
 1329 0132 BDF81E00 		ldrh	r0, [sp, #30]
 1330 0136 FFF7FEFF 		bl	LCD_Fill
 1331              	.LVL152:
 427:Core/Src/gui.c **** 	{
 1332              		.loc 1 427 21 discriminator 2 view .LVU356
 427:Core/Src/gui.c **** 	{
 1333              		.loc 1 427 22 is_stmt 0 discriminator 2 view .LVU357
 1334 013a 0134     		adds	r4, r4, #1
 1335              	.LVL153:
 427:Core/Src/gui.c **** 	{
 1336              		.loc 1 427 22 discriminator 2 view .LVU358
 1337 013c A4B2     		uxth	r4, r4
 1338              	.LVL154:
 1339              	.L84:
 427:Core/Src/gui.c **** 	{
 1340              		.loc 1 427 12 is_stmt 1 discriminator 1 view .LVU359
 427:Core/Src/gui.c **** 	{
 1341              		.loc 1 427 2 is_stmt 0 discriminator 1 view .LVU360
 1342 013e 4C45     		cmp	r4, r9
 1343 0140 12D8     		bhi	.L95
 429:Core/Src/gui.c **** 		b = x0 + sb / dy02;
 1344              		.loc 1 429 3 is_stmt 1 view .LVU361
 429:Core/Src/gui.c **** 		b = x0 + sb / dy02;
 1345              		.loc 1 429 15 is_stmt 0 view .LVU362
 1346 0142 96FBFBF2 		sdiv	r2, r6, fp
 429:Core/Src/gui.c **** 		b = x0 + sb / dy02;
 1347              		.loc 1 429 10 view .LVU363
 1348 0146 BDF81630 		ldrh	r3, [sp, #22]
 1349 014a 1A44     		add	r2, r2, r3
 1350 014c 92B2     		uxth	r2, r2
 429:Core/Src/gui.c **** 		b = x0 + sb / dy02;
 1351              		.loc 1 429 5 view .LVU364
 1352 014e ADF81E20 		strh	r2, [sp, #30]	@ movhi
 430:Core/Src/gui.c **** 		sa += dx01;
 1353              		.loc 1 430 3 is_stmt 1 view .LVU365
 430:Core/Src/gui.c **** 		sa += dx01;
 1354              		.loc 1 430 15 is_stmt 0 view .LVU366
 1355 0152 95FBF8F1 		sdiv	r1, r5, r8
 430:Core/Src/gui.c **** 		sa += dx01;
 1356              		.loc 1 430 10 view .LVU367
 1357 0156 0B44     		add	r3, r3, r1
 1358 0158 9BB2     		uxth	r3, r3
ARM GAS  /tmp/ccWgdbjA.s 			page 38


 430:Core/Src/gui.c **** 		sa += dx01;
 1359              		.loc 1 430 5 view .LVU368
 1360 015a ADF81C30 		strh	r3, [sp, #28]	@ movhi
 431:Core/Src/gui.c ****     sb += dx02;
 1361              		.loc 1 431 3 is_stmt 1 view .LVU369
 431:Core/Src/gui.c ****     sb += dx02;
 1362              		.loc 1 431 6 is_stmt 0 view .LVU370
 1363 015e 5644     		add	r6, r6, r10
 1364              	.LVL155:
 432:Core/Src/gui.c ****     if(a > b)
 1365              		.loc 1 432 5 is_stmt 1 view .LVU371
 432:Core/Src/gui.c ****     if(a > b)
 1366              		.loc 1 432 8 is_stmt 0 view .LVU372
 1367 0160 3D44     		add	r5, r5, r7
 1368              	.LVL156:
 433:Core/Src/gui.c ****     {
 1369              		.loc 1 433 5 is_stmt 1 view .LVU373
 433:Core/Src/gui.c ****     {
 1370              		.loc 1 433 7 is_stmt 0 view .LVU374
 1371 0162 9A42     		cmp	r2, r3
 1372 0164 DED9     		bls	.L85
 1373 0166 D8E7     		b	.L96
 1374              	.L95:
 433:Core/Src/gui.c ****     {
 1375              		.loc 1 433 7 view .LVU375
 1376 0168 DDF80CA0 		ldr	r10, [sp, #12]
 1377              	.LVL157:
 439:Core/Src/gui.c **** 	sb = dx02 * (y - y0);
 1378              		.loc 1 439 2 is_stmt 1 view .LVU376
 439:Core/Src/gui.c **** 	sb = dx02 * (y - y0);
 1379              		.loc 1 439 17 is_stmt 0 view .LVU377
 1380 016c BDF81060 		ldrh	r6, [sp, #16]
 1381              	.LVL158:
 439:Core/Src/gui.c **** 	sb = dx02 * (y - y0);
 1382              		.loc 1 439 17 view .LVU378
 1383 0170 A61B     		subs	r6, r4, r6
 439:Core/Src/gui.c **** 	sb = dx02 * (y - y0);
 1384              		.loc 1 439 5 view .LVU379
 1385 0172 0AFB06F6 		mul	r6, r10, r6
 1386              	.LVL159:
 440:Core/Src/gui.c **** 	for(; y<=y2; y++) 
 1387              		.loc 1 440 2 is_stmt 1 view .LVU380
 440:Core/Src/gui.c **** 	for(; y<=y2; y++) 
 1388              		.loc 1 440 17 is_stmt 0 view .LVU381
 1389 0176 BDF81450 		ldrh	r5, [sp, #20]
 1390              	.LVL160:
 440:Core/Src/gui.c **** 	for(; y<=y2; y++) 
 1391              		.loc 1 440 17 view .LVU382
 1392 017a 651B     		subs	r5, r4, r5
 440:Core/Src/gui.c **** 	for(; y<=y2; y++) 
 1393              		.loc 1 440 5 view .LVU383
 1394 017c 07FB05F5 		mul	r5, r7, r5
 1395              	.LVL161:
 441:Core/Src/gui.c **** 	{
 1396              		.loc 1 441 2 is_stmt 1 view .LVU384
 1397 0180 DDF80890 		ldr	r9, [sp, #8]
 1398              	.LVL162:
ARM GAS  /tmp/ccWgdbjA.s 			page 39


 441:Core/Src/gui.c **** 	{
 1399              		.loc 1 441 2 is_stmt 0 view .LVU385
 1400 0184 11E0     		b	.L87
 1401              	.L97:
 449:Core/Src/gui.c **** 		}
 1402              		.loc 1 449 4 is_stmt 1 view .LVU386
 1403 0186 07A9     		add	r1, sp, #28
 1404 0188 0DF11E00 		add	r0, sp, #30
 1405 018c FFF7FEFF 		bl	_swap
 1406              	.LVL163:
 1407              	.L88:
 451:Core/Src/gui.c **** 	}
 1408              		.loc 1 451 3 view .LVU387
 1409 0190 124B     		ldr	r3, .L98
 1410 0192 1B88     		ldrh	r3, [r3]
 1411 0194 0093     		str	r3, [sp]
 1412 0196 2346     		mov	r3, r4
 1413 0198 BDF81C20 		ldrh	r2, [sp, #28]
 1414 019c 2146     		mov	r1, r4
 1415 019e BDF81E00 		ldrh	r0, [sp, #30]
 1416 01a2 FFF7FEFF 		bl	LCD_Fill
 1417              	.LVL164:
 441:Core/Src/gui.c **** 	{
 1418              		.loc 1 441 15 view .LVU388
 441:Core/Src/gui.c **** 	{
 1419              		.loc 1 441 16 is_stmt 0 view .LVU389
 1420 01a6 0134     		adds	r4, r4, #1
 1421              	.LVL165:
 441:Core/Src/gui.c **** 	{
 1422              		.loc 1 441 16 view .LVU390
 1423 01a8 A4B2     		uxth	r4, r4
 1424              	.LVL166:
 1425              	.L87:
 441:Core/Src/gui.c **** 	{
 1426              		.loc 1 441 8 is_stmt 1 discriminator 1 view .LVU391
 441:Core/Src/gui.c **** 	{
 1427              		.loc 1 441 9 is_stmt 0 discriminator 1 view .LVU392
 1428 01aa BDF84C30 		ldrh	r3, [sp, #76]
 441:Core/Src/gui.c **** 	{
 1429              		.loc 1 441 2 discriminator 1 view .LVU393
 1430 01ae A342     		cmp	r3, r4
 1431 01b0 A4D3     		bcc	.L73
 443:Core/Src/gui.c **** 		b = x0 + sb / dy02;
 1432              		.loc 1 443 3 is_stmt 1 view .LVU394
 443:Core/Src/gui.c **** 		b = x0 + sb / dy02;
 1433              		.loc 1 443 15 is_stmt 0 view .LVU395
 1434 01b2 96FBF9F2 		sdiv	r2, r6, r9
 443:Core/Src/gui.c **** 		b = x0 + sb / dy02;
 1435              		.loc 1 443 10 view .LVU396
 1436 01b6 BDF81230 		ldrh	r3, [sp, #18]
 1437 01ba 1A44     		add	r2, r2, r3
 1438 01bc 92B2     		uxth	r2, r2
 443:Core/Src/gui.c **** 		b = x0 + sb / dy02;
 1439              		.loc 1 443 5 view .LVU397
 1440 01be ADF81E20 		strh	r2, [sp, #30]	@ movhi
 444:Core/Src/gui.c **** 		sa += dx12;
 1441              		.loc 1 444 3 is_stmt 1 view .LVU398
ARM GAS  /tmp/ccWgdbjA.s 			page 40


 444:Core/Src/gui.c **** 		sa += dx12;
 1442              		.loc 1 444 15 is_stmt 0 view .LVU399
 1443 01c2 95FBF8F3 		sdiv	r3, r5, r8
 444:Core/Src/gui.c **** 		sa += dx12;
 1444              		.loc 1 444 10 view .LVU400
 1445 01c6 BDF81610 		ldrh	r1, [sp, #22]
 1446 01ca 0B44     		add	r3, r3, r1
 1447 01cc 9BB2     		uxth	r3, r3
 444:Core/Src/gui.c **** 		sa += dx12;
 1448              		.loc 1 444 5 view .LVU401
 1449 01ce ADF81C30 		strh	r3, [sp, #28]	@ movhi
 445:Core/Src/gui.c **** 		sb += dx02;
 1450              		.loc 1 445 3 is_stmt 1 view .LVU402
 445:Core/Src/gui.c **** 		sb += dx02;
 1451              		.loc 1 445 6 is_stmt 0 view .LVU403
 1452 01d2 5644     		add	r6, r6, r10
 1453              	.LVL167:
 446:Core/Src/gui.c **** 		if(a > b)
 1454              		.loc 1 446 3 is_stmt 1 view .LVU404
 446:Core/Src/gui.c **** 		if(a > b)
 1455              		.loc 1 446 6 is_stmt 0 view .LVU405
 1456 01d4 3D44     		add	r5, r5, r7
 1457              	.LVL168:
 447:Core/Src/gui.c **** 		{
 1458              		.loc 1 447 3 is_stmt 1 view .LVU406
 447:Core/Src/gui.c **** 		{
 1459              		.loc 1 447 5 is_stmt 0 view .LVU407
 1460 01d6 9A42     		cmp	r2, r3
 1461 01d8 DAD9     		bls	.L88
 1462 01da D4E7     		b	.L97
 1463              	.L99:
 1464              		.align	2
 1465              	.L98:
 1466 01dc 00000000 		.word	POINT_COLOR
 1467              		.cfi_endproc
 1468              	.LFE140:
 1470              		.section	.text.LCD_ShowChar,"ax",%progbits
 1471              		.align	1
 1472              		.global	LCD_ShowChar
 1473              		.syntax unified
 1474              		.thumb
 1475              		.thumb_func
 1476              		.fpu fpv4-sp-d16
 1478              	LCD_ShowChar:
 1479              	.LVL169:
 1480              	.LFB141:
 454:Core/Src/gui.c **** 
 455:Core/Src/gui.c **** /*****************************************************************************
 456:Core/Src/gui.c ****  * @name       :void LCD_ShowChar(u16 x,u16 y,u16 fc, u16 bc, u8 num,u8 size,u8 mode)
 457:Core/Src/gui.c ****  * @date       :2018-08-09 
 458:Core/Src/gui.c ****  * @function   :Display a single English character
 459:Core/Src/gui.c ****  * @parameters :x:the bebinning x coordinate of the Character display position
 460:Core/Src/gui.c ****                 y:the bebinning y coordinate of the Character display position
 461:Core/Src/gui.c **** 								fc:the color value of display character
 462:Core/Src/gui.c **** 								bc:the background color of display character
 463:Core/Src/gui.c **** 								num:the ascii code of display character(0~94)
 464:Core/Src/gui.c **** 								size:the size of display character
ARM GAS  /tmp/ccWgdbjA.s 			page 41


 465:Core/Src/gui.c **** 								mode:0-no overlying,1-overlying
 466:Core/Src/gui.c ****  * @retvalue   :None
 467:Core/Src/gui.c **** ******************************************************************************/ 
 468:Core/Src/gui.c **** void LCD_ShowChar(u16 x,u16 y,u16 fc, u16 bc, u8 num,u8 size,u8 mode)
 469:Core/Src/gui.c **** {  
 1481              		.loc 1 469 1 is_stmt 1 view -0
 1482              		.cfi_startproc
 1483              		@ args = 12, pretend = 0, frame = 16
 1484              		@ frame_needed = 0, uses_anonymous_args = 0
 1485              		.loc 1 469 1 is_stmt 0 view .LVU409
 1486 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1487              	.LCFI21:
 1488              		.cfi_def_cfa_offset 36
 1489              		.cfi_offset 4, -36
 1490              		.cfi_offset 5, -32
 1491              		.cfi_offset 6, -28
 1492              		.cfi_offset 7, -24
 1493              		.cfi_offset 8, -20
 1494              		.cfi_offset 9, -16
 1495              		.cfi_offset 10, -12
 1496              		.cfi_offset 11, -8
 1497              		.cfi_offset 14, -4
 1498 0004 85B0     		sub	sp, sp, #20
 1499              	.LCFI22:
 1500              		.cfi_def_cfa_offset 56
 1501 0006 8B46     		mov	fp, r1
 1502 0008 1746     		mov	r7, r2
 1503 000a 1D46     		mov	r5, r3
 1504 000c 9DF83C90 		ldrb	r9, [sp, #60]	@ zero_extendqisi2
 1505 0010 9DF84040 		ldrb	r4, [sp, #64]	@ zero_extendqisi2
 1506 0014 0194     		str	r4, [sp, #4]
 470:Core/Src/gui.c ****     u8 temp;
 1507              		.loc 1 470 5 is_stmt 1 view .LVU410
 471:Core/Src/gui.c ****     u8 pos,t;
 1508              		.loc 1 471 5 view .LVU411
 472:Core/Src/gui.c **** 	u16 colortemp=POINT_COLOR;      
 1509              		.loc 1 472 2 view .LVU412
 1510              		.loc 1 472 6 is_stmt 0 view .LVU413
 1511 0016 464B     		ldr	r3, .L124
 1512              	.LVL170:
 1513              		.loc 1 472 6 view .LVU414
 1514 0018 1A88     		ldrh	r2, [r3]
 1515              	.LVL171:
 1516              		.loc 1 472 6 view .LVU415
 1517 001a 0292     		str	r2, [sp, #8]
 1518              	.LVL172:
 473:Core/Src/gui.c **** 		   
 474:Core/Src/gui.c **** 	num=num-' ';//µ√µΩ∆´“∆∫Ûµƒ÷µ
 1519              		.loc 1 474 2 is_stmt 1 view .LVU416
 1520              		.loc 1 474 5 is_stmt 0 view .LVU417
 1521 001c 9DF838A0 		ldrb	r10, [sp, #56]	@ zero_extendqisi2
 1522 0020 AAF1200A 		sub	r10, r10, #32
 1523 0024 5FFA8AFA 		uxtb	r10, r10
 1524              	.LVL173:
 475:Core/Src/gui.c **** 	LCD_SetWindows(x,y,x+size/2-1,y+size-1);//…Ë÷√µ•∏ˆŒƒ◊÷œ‘ æ¥∞ø⁄
 1525              		.loc 1 475 2 is_stmt 1 view .LVU418
 1526              		.loc 1 475 22 is_stmt 0 view .LVU419
ARM GAS  /tmp/ccWgdbjA.s 			page 42


 1527 0028 4FEA5906 		lsr	r6, r9, #1
 1528 002c 0390     		str	r0, [sp, #12]
 1529 002e 00EB5902 		add	r2, r0, r9, lsr #1
 1530 0032 92B2     		uxth	r2, r2
 1531              		.loc 1 475 33 view .LVU420
 1532 0034 01EB0903 		add	r3, r1, r9
 1533 0038 9BB2     		uxth	r3, r3
 1534              		.loc 1 475 2 view .LVU421
 1535 003a 013B     		subs	r3, r3, #1
 1536 003c 013A     		subs	r2, r2, #1
 1537 003e 9BB2     		uxth	r3, r3
 1538 0040 92B2     		uxth	r2, r2
 1539 0042 FFF7FEFF 		bl	LCD_SetWindows
 1540              	.LVL174:
 476:Core/Src/gui.c **** 	if(!mode) //∑«µ˛º”∑Ω Ω
 1541              		.loc 1 476 2 is_stmt 1 view .LVU422
 1542              		.loc 1 476 4 is_stmt 0 view .LVU423
 1543 0046 84B3     		cbz	r4, .L117
 477:Core/Src/gui.c **** 	{		
 478:Core/Src/gui.c **** 		for(pos=0;pos<size;pos++)
 479:Core/Src/gui.c **** 		{
 480:Core/Src/gui.c **** 			if(size==12)temp=asc2_1206[num][pos];//µ˜”√1206◊÷ÃÂ
 481:Core/Src/gui.c **** 			else temp=asc2_1608[num][pos];		 //µ˜”√1608◊÷ÃÂ
 482:Core/Src/gui.c **** 			for(t=0;t<size/2;t++)
 483:Core/Src/gui.c **** 		    {                 
 484:Core/Src/gui.c **** 		        if(temp&0x80)Lcd_WriteData_16Bit(fc); 
 485:Core/Src/gui.c **** 				else Lcd_WriteData_16Bit(bc); 
 486:Core/Src/gui.c **** 				temp<<=1; 
 487:Core/Src/gui.c **** 				
 488:Core/Src/gui.c **** 		    }
 489:Core/Src/gui.c **** 			
 490:Core/Src/gui.c **** 		}	
 491:Core/Src/gui.c **** 	}else//µ˛º”∑Ω Ω
 492:Core/Src/gui.c **** 	{
 493:Core/Src/gui.c **** 		for(pos=0;pos<size;pos++)
 1544              		.loc 1 493 10 view .LVU424
 1545 0048 4FF00008 		mov	r8, #0
 1546 004c CDF804A0 		str	r10, [sp, #4]
 1547 0050 DDF80CA0 		ldr	r10, [sp, #12]
 1548              	.LVL175:
 1549              		.loc 1 493 10 view .LVU425
 1550 0054 4DE0     		b	.L102
 1551              	.LVL176:
 1552              	.L121:
 480:Core/Src/gui.c **** 			else temp=asc2_1608[num][pos];		 //µ˜”√1608◊÷ÃÂ
 1553              		.loc 1 480 16 is_stmt 1 discriminator 1 view .LVU426
 480:Core/Src/gui.c **** 			else temp=asc2_1608[num][pos];		 //µ˜”√1608◊÷ÃÂ
 1554              		.loc 1 480 20 is_stmt 0 discriminator 1 view .LVU427
 1555 0056 0AEB4A03 		add	r3, r10, r10, lsl #1
 1556 005a 364A     		ldr	r2, .L124+4
 1557 005c 02EB8303 		add	r3, r2, r3, lsl #2
 1558 0060 13F80B80 		ldrb	r8, [r3, fp]	@ zero_extendqisi2
 1559              	.LVL177:
 480:Core/Src/gui.c **** 			else temp=asc2_1608[num][pos];		 //µ˜”√1608◊÷ÃÂ
 1560              		.loc 1 480 20 discriminator 1 view .LVU428
 1561 0064 1FE0     		b	.L105
 1562              	.LVL178:
ARM GAS  /tmp/ccWgdbjA.s 			page 43


 1563              	.L120:
 484:Core/Src/gui.c **** 				else Lcd_WriteData_16Bit(bc); 
 1564              		.loc 1 484 24 is_stmt 1 discriminator 1 view .LVU429
 1565 0066 3846     		mov	r0, r7
 1566 0068 FFF7FEFF 		bl	Lcd_WriteData_16Bit
 1567              	.LVL179:
 1568              	.L107:
 486:Core/Src/gui.c **** 				
 1569              		.loc 1 486 5 discriminator 2 view .LVU430
 486:Core/Src/gui.c **** 				
 1570              		.loc 1 486 9 is_stmt 0 discriminator 2 view .LVU431
 1571 006c 4FEA4808 		lsl	r8, r8, #1
 1572              	.LVL180:
 486:Core/Src/gui.c **** 				
 1573              		.loc 1 486 9 discriminator 2 view .LVU432
 1574 0070 5FFA88F8 		uxtb	r8, r8
 1575              	.LVL181:
 482:Core/Src/gui.c **** 		    {                 
 1576              		.loc 1 482 21 is_stmt 1 discriminator 2 view .LVU433
 482:Core/Src/gui.c **** 		    {                 
 1577              		.loc 1 482 22 is_stmt 0 discriminator 2 view .LVU434
 1578 0074 0134     		adds	r4, r4, #1
 1579              	.LVL182:
 482:Core/Src/gui.c **** 		    {                 
 1580              		.loc 1 482 22 discriminator 2 view .LVU435
 1581 0076 E4B2     		uxtb	r4, r4
 1582              	.LVL183:
 1583              	.L104:
 482:Core/Src/gui.c **** 		    {                 
 1584              		.loc 1 482 12 is_stmt 1 discriminator 1 view .LVU436
 482:Core/Src/gui.c **** 		    {                 
 1585              		.loc 1 482 4 is_stmt 0 discriminator 1 view .LVU437
 1586 0078 A642     		cmp	r6, r4
 1587 007a 06D9     		bls	.L119
 484:Core/Src/gui.c **** 				else Lcd_WriteData_16Bit(bc); 
 1588              		.loc 1 484 11 is_stmt 1 view .LVU438
 484:Core/Src/gui.c **** 				else Lcd_WriteData_16Bit(bc); 
 1589              		.loc 1 484 13 is_stmt 0 view .LVU439
 1590 007c 18F0800F 		tst	r8, #128
 1591 0080 F1D1     		bne	.L120
 485:Core/Src/gui.c **** 				temp<<=1; 
 1592              		.loc 1 485 10 is_stmt 1 view .LVU440
 1593 0082 2846     		mov	r0, r5
 1594 0084 FFF7FEFF 		bl	Lcd_WriteData_16Bit
 1595              	.LVL184:
 1596 0088 F0E7     		b	.L107
 1597              	.L119:
 478:Core/Src/gui.c **** 		{
 1598              		.loc 1 478 22 discriminator 2 view .LVU441
 478:Core/Src/gui.c **** 		{
 1599              		.loc 1 478 25 is_stmt 0 discriminator 2 view .LVU442
 1600 008a 0BF1010B 		add	fp, fp, #1
 1601              	.LVL185:
 478:Core/Src/gui.c **** 		{
 1602              		.loc 1 478 25 discriminator 2 view .LVU443
 1603 008e 5FFA8BFB 		uxtb	fp, fp
 1604              	.LVL186:
ARM GAS  /tmp/ccWgdbjA.s 			page 44


 1605              	.L101:
 478:Core/Src/gui.c **** 		{
 1606              		.loc 1 478 13 is_stmt 1 discriminator 1 view .LVU444
 478:Core/Src/gui.c **** 		{
 1607              		.loc 1 478 3 is_stmt 0 discriminator 1 view .LVU445
 1608 0092 CB45     		cmp	fp, r9
 1609 0094 3AD2     		bcs	.L110
 480:Core/Src/gui.c **** 			else temp=asc2_1608[num][pos];		 //µ˜”√1608◊÷ÃÂ
 1610              		.loc 1 480 4 is_stmt 1 view .LVU446
 480:Core/Src/gui.c **** 			else temp=asc2_1608[num][pos];		 //µ˜”√1608◊÷ÃÂ
 1611              		.loc 1 480 6 is_stmt 0 view .LVU447
 1612 0096 B9F10C0F 		cmp	r9, #12
 1613 009a DCD0     		beq	.L121
 481:Core/Src/gui.c **** 			for(t=0;t<size/2;t++)
 1614              		.loc 1 481 9 is_stmt 1 view .LVU448
 481:Core/Src/gui.c **** 			for(t=0;t<size/2;t++)
 1615              		.loc 1 481 13 is_stmt 0 view .LVU449
 1616 009c 264B     		ldr	r3, .L124+8
 1617 009e 03EB0A13 		add	r3, r3, r10, lsl #4
 1618 00a2 13F80B80 		ldrb	r8, [r3, fp]	@ zero_extendqisi2
 1619              	.LVL187:
 1620              	.L105:
 469:Core/Src/gui.c ****     u8 temp;
 1621              		.loc 1 469 1 discriminator 1 view .LVU450
 1622 00a6 019C     		ldr	r4, [sp, #4]
 1623 00a8 E6E7     		b	.L104
 1624              	.LVL188:
 1625              	.L117:
 478:Core/Src/gui.c **** 		{
 1626              		.loc 1 478 10 view .LVU451
 1627 00aa DDF804B0 		ldr	fp, [sp, #4]
 1628 00ae F0E7     		b	.L101
 1629              	.LVL189:
 1630              	.L123:
 494:Core/Src/gui.c **** 		{
 495:Core/Src/gui.c **** 			if(size==12)temp=asc2_1206[num][pos];//µ˜”√1206◊÷ÃÂ
 1631              		.loc 1 495 16 is_stmt 1 discriminator 1 view .LVU452
 1632              		.loc 1 495 20 is_stmt 0 discriminator 1 view .LVU453
 1633 00b0 019B     		ldr	r3, [sp, #4]
 1634 00b2 03EB4303 		add	r3, r3, r3, lsl #1
 1635 00b6 1F4A     		ldr	r2, .L124+4
 1636 00b8 02EB8303 		add	r3, r2, r3, lsl #2
 1637 00bc 13F80850 		ldrb	r5, [r3, r8]	@ zero_extendqisi2
 1638              	.LVL190:
 1639              		.loc 1 495 20 discriminator 1 view .LVU454
 1640 00c0 22E0     		b	.L113
 1641              	.LVL191:
 1642              	.L114:
 496:Core/Src/gui.c **** 			else temp=asc2_1608[num][pos];		 //µ˜”√1608◊÷ÃÂ
 497:Core/Src/gui.c **** 			for(t=0;t<size/2;t++)
 498:Core/Src/gui.c **** 		    {   
 499:Core/Src/gui.c **** 				POINT_COLOR=fc;              
 500:Core/Src/gui.c **** 		        if(temp&0x80)LCD_DrawPoint(x+t,y+pos);//ª≠“ª∏ˆµ„    
 501:Core/Src/gui.c **** 		        temp<<=1; 
 1643              		.loc 1 501 11 is_stmt 1 discriminator 2 view .LVU455
 1644              		.loc 1 501 15 is_stmt 0 discriminator 2 view .LVU456
 1645 00c2 6D00     		lsls	r5, r5, #1
ARM GAS  /tmp/ccWgdbjA.s 			page 45


 1646              	.LVL192:
 1647              		.loc 1 501 15 discriminator 2 view .LVU457
 1648 00c4 EDB2     		uxtb	r5, r5
 1649              	.LVL193:
 497:Core/Src/gui.c **** 		    {   
 1650              		.loc 1 497 21 is_stmt 1 discriminator 2 view .LVU458
 497:Core/Src/gui.c **** 		    {   
 1651              		.loc 1 497 22 is_stmt 0 discriminator 2 view .LVU459
 1652 00c6 0134     		adds	r4, r4, #1
 1653              	.LVL194:
 497:Core/Src/gui.c **** 		    {   
 1654              		.loc 1 497 22 discriminator 2 view .LVU460
 1655 00c8 E4B2     		uxtb	r4, r4
 1656              	.LVL195:
 1657              	.L112:
 497:Core/Src/gui.c **** 		    {   
 1658              		.loc 1 497 12 is_stmt 1 discriminator 1 view .LVU461
 497:Core/Src/gui.c **** 		    {   
 1659              		.loc 1 497 4 is_stmt 0 discriminator 1 view .LVU462
 1660 00ca A642     		cmp	r6, r4
 1661 00cc 0DD9     		bls	.L122
 499:Core/Src/gui.c **** 		        if(temp&0x80)LCD_DrawPoint(x+t,y+pos);//ª≠“ª∏ˆµ„    
 1662              		.loc 1 499 5 is_stmt 1 view .LVU463
 499:Core/Src/gui.c **** 		        if(temp&0x80)LCD_DrawPoint(x+t,y+pos);//ª≠“ª∏ˆµ„    
 1663              		.loc 1 499 16 is_stmt 0 view .LVU464
 1664 00ce 184B     		ldr	r3, .L124
 1665 00d0 1F80     		strh	r7, [r3]	@ movhi
 500:Core/Src/gui.c **** 		        temp<<=1; 
 1666              		.loc 1 500 11 is_stmt 1 view .LVU465
 500:Core/Src/gui.c **** 		        temp<<=1; 
 1667              		.loc 1 500 13 is_stmt 0 view .LVU466
 1668 00d2 15F0800F 		tst	r5, #128
 1669 00d6 F4D0     		beq	.L114
 500:Core/Src/gui.c **** 		        temp<<=1; 
 1670              		.loc 1 500 24 is_stmt 1 discriminator 1 view .LVU467
 1671 00d8 0BEB0801 		add	r1, fp, r8
 1672 00dc 0AEB0400 		add	r0, r10, r4
 1673 00e0 89B2     		uxth	r1, r1
 1674 00e2 80B2     		uxth	r0, r0
 1675 00e4 FFF7FEFF 		bl	LCD_DrawPoint
 1676              	.LVL196:
 1677 00e8 EBE7     		b	.L114
 1678              	.L122:
 493:Core/Src/gui.c **** 		{
 1679              		.loc 1 493 22 discriminator 2 view .LVU468
 493:Core/Src/gui.c **** 		{
 1680              		.loc 1 493 25 is_stmt 0 discriminator 2 view .LVU469
 1681 00ea 08F10108 		add	r8, r8, #1
 1682              	.LVL197:
 493:Core/Src/gui.c **** 		{
 1683              		.loc 1 493 25 discriminator 2 view .LVU470
 1684 00ee 5FFA88F8 		uxtb	r8, r8
 1685              	.LVL198:
 1686              	.L102:
 493:Core/Src/gui.c **** 		{
 1687              		.loc 1 493 13 is_stmt 1 discriminator 1 view .LVU471
 493:Core/Src/gui.c **** 		{
ARM GAS  /tmp/ccWgdbjA.s 			page 46


 1688              		.loc 1 493 3 is_stmt 0 discriminator 1 view .LVU472
 1689 00f2 C845     		cmp	r8, r9
 1690 00f4 0AD2     		bcs	.L110
 495:Core/Src/gui.c **** 			else temp=asc2_1608[num][pos];		 //µ˜”√1608◊÷ÃÂ
 1691              		.loc 1 495 4 is_stmt 1 view .LVU473
 495:Core/Src/gui.c **** 			else temp=asc2_1608[num][pos];		 //µ˜”√1608◊÷ÃÂ
 1692              		.loc 1 495 6 is_stmt 0 view .LVU474
 1693 00f6 B9F10C0F 		cmp	r9, #12
 1694 00fa D9D0     		beq	.L123
 496:Core/Src/gui.c **** 			for(t=0;t<size/2;t++)
 1695              		.loc 1 496 9 is_stmt 1 view .LVU475
 496:Core/Src/gui.c **** 			for(t=0;t<size/2;t++)
 1696              		.loc 1 496 13 is_stmt 0 view .LVU476
 1697 00fc 0E4B     		ldr	r3, .L124+8
 1698 00fe 019A     		ldr	r2, [sp, #4]
 1699 0100 03EB0213 		add	r3, r3, r2, lsl #4
 1700 0104 13F80850 		ldrb	r5, [r3, r8]	@ zero_extendqisi2
 1701              	.LVL199:
 1702              	.L113:
 478:Core/Src/gui.c **** 		{
 1703              		.loc 1 478 10 discriminator 1 view .LVU477
 1704 0108 0024     		movs	r4, #0
 1705 010a DEE7     		b	.L112
 1706              	.LVL200:
 1707              	.L110:
 502:Core/Src/gui.c **** 		    }
 503:Core/Src/gui.c **** 		}
 504:Core/Src/gui.c **** 	}
 505:Core/Src/gui.c **** 	POINT_COLOR=colortemp;	
 1708              		.loc 1 505 2 is_stmt 1 view .LVU478
 1709              		.loc 1 505 13 is_stmt 0 view .LVU479
 1710 010c 084B     		ldr	r3, .L124
 1711 010e 029A     		ldr	r2, [sp, #8]
 1712 0110 1A80     		strh	r2, [r3]	@ movhi
 506:Core/Src/gui.c **** 	LCD_SetWindows(0,0,lcddev.width-1,lcddev.height-1);//ª÷∏¥¥∞ø⁄Œ™»´∆¡    	   	 	  
 1713              		.loc 1 506 2 is_stmt 1 view .LVU480
 1714              		.loc 1 506 27 is_stmt 0 view .LVU481
 1715 0112 0A4B     		ldr	r3, .L124+12
 1716 0114 9A88     		ldrh	r2, [r3, #4]
 1717              		.loc 1 506 42 view .LVU482
 1718 0116 DB88     		ldrh	r3, [r3, #6]
 1719              		.loc 1 506 2 view .LVU483
 1720 0118 013B     		subs	r3, r3, #1
 1721 011a 013A     		subs	r2, r2, #1
 1722 011c 9BB2     		uxth	r3, r3
 1723 011e 92B2     		uxth	r2, r2
 1724 0120 0021     		movs	r1, #0
 1725 0122 0846     		mov	r0, r1
 1726 0124 FFF7FEFF 		bl	LCD_SetWindows
 1727              	.LVL201:
 507:Core/Src/gui.c **** }
 1728              		.loc 1 507 1 view .LVU484
 1729 0128 05B0     		add	sp, sp, #20
 1730              	.LCFI23:
 1731              		.cfi_def_cfa_offset 36
 1732              		@ sp needed
 1733 012a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
ARM GAS  /tmp/ccWgdbjA.s 			page 47


 1734              	.LVL202:
 1735              	.L125:
 1736              		.loc 1 507 1 view .LVU485
 1737 012e 00BF     		.align	2
 1738              	.L124:
 1739 0130 00000000 		.word	POINT_COLOR
 1740 0134 00000000 		.word	.LANCHOR0
 1741 0138 00000000 		.word	.LANCHOR1
 1742 013c 00000000 		.word	lcddev
 1743              		.cfi_endproc
 1744              	.LFE141:
 1746              		.section	.text.LCD_ShowString,"ax",%progbits
 1747              		.align	1
 1748              		.global	LCD_ShowString
 1749              		.syntax unified
 1750              		.thumb
 1751              		.thumb_func
 1752              		.fpu fpv4-sp-d16
 1754              	LCD_ShowString:
 1755              	.LVL203:
 1756              	.LFB142:
 508:Core/Src/gui.c **** 
 509:Core/Src/gui.c **** /*****************************************************************************
 510:Core/Src/gui.c ****  * @name       :void LCD_ShowString(u16 x,u16 y,u8 size,u8 *p,u8 mode)
 511:Core/Src/gui.c ****  * @date       :2018-08-09 
 512:Core/Src/gui.c ****  * @function   :Display English string
 513:Core/Src/gui.c ****  * @parameters :x:the bebinning x coordinate of the English string
 514:Core/Src/gui.c ****                 y:the bebinning y coordinate of the English string
 515:Core/Src/gui.c **** 								p:the start address of the English string
 516:Core/Src/gui.c **** 								size:the size of display character
 517:Core/Src/gui.c **** 								mode:0-no overlying,1-overlying
 518:Core/Src/gui.c ****  * @retvalue   :None
 519:Core/Src/gui.c **** ******************************************************************************/   	  
 520:Core/Src/gui.c **** void LCD_ShowString(u16 x,u16 y,u8 size,u8 *p,u8 mode)
 521:Core/Src/gui.c **** {         
 1757              		.loc 1 521 1 is_stmt 1 view -0
 1758              		.cfi_startproc
 1759              		@ args = 4, pretend = 0, frame = 0
 1760              		@ frame_needed = 0, uses_anonymous_args = 0
 1761              		.loc 1 521 1 is_stmt 0 view .LVU487
 1762 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1763              	.LCFI24:
 1764              		.cfi_def_cfa_offset 24
 1765              		.cfi_offset 4, -24
 1766              		.cfi_offset 5, -20
 1767              		.cfi_offset 6, -16
 1768              		.cfi_offset 7, -12
 1769              		.cfi_offset 8, -8
 1770              		.cfi_offset 14, -4
 1771 0004 84B0     		sub	sp, sp, #16
 1772              	.LCFI25:
 1773              		.cfi_def_cfa_offset 40
 1774 0006 0446     		mov	r4, r0
 1775 0008 0E46     		mov	r6, r1
 1776 000a 1746     		mov	r7, r2
 1777 000c 1D46     		mov	r5, r3
 1778 000e 9DF82880 		ldrb	r8, [sp, #40]	@ zero_extendqisi2
ARM GAS  /tmp/ccWgdbjA.s 			page 48


 522:Core/Src/gui.c ****     while((*p<='~')&&(*p>=' '))//≈–∂œ «≤ª «∑«∑®◊÷∑˚!
 1779              		.loc 1 522 5 is_stmt 1 view .LVU488
 1780              		.loc 1 522 10 is_stmt 0 view .LVU489
 1781 0012 0FE0     		b	.L127
 1782              	.LVL204:
 1783              	.L131:
 523:Core/Src/gui.c ****     {   
 524:Core/Src/gui.c **** 		if(x>(lcddev.width-1)||y>(lcddev.height-1)) 
 525:Core/Src/gui.c **** 		return;     
 526:Core/Src/gui.c ****         LCD_ShowChar(x,y,POINT_COLOR,BACK_COLOR,*p,size,mode);
 1784              		.loc 1 526 9 is_stmt 1 view .LVU490
 1785 0014 CDF80880 		str	r8, [sp, #8]
 1786 0018 0197     		str	r7, [sp, #4]
 1787 001a 0093     		str	r3, [sp]
 1788 001c 0E4B     		ldr	r3, .L132
 1789 001e 1B88     		ldrh	r3, [r3]
 1790 0020 0E4A     		ldr	r2, .L132+4
 1791 0022 1288     		ldrh	r2, [r2]
 1792 0024 3146     		mov	r1, r6
 1793 0026 2046     		mov	r0, r4
 1794 0028 FFF7FEFF 		bl	LCD_ShowChar
 1795              	.LVL205:
 527:Core/Src/gui.c ****         x+=size/2;
 1796              		.loc 1 527 9 view .LVU491
 1797              		.loc 1 527 10 is_stmt 0 view .LVU492
 1798 002c 04EB5704 		add	r4, r4, r7, lsr #1
 1799              	.LVL206:
 1800              		.loc 1 527 10 view .LVU493
 1801 0030 A4B2     		uxth	r4, r4
 1802              	.LVL207:
 528:Core/Src/gui.c ****         p++;
 1803              		.loc 1 528 9 is_stmt 1 view .LVU494
 1804              		.loc 1 528 10 is_stmt 0 view .LVU495
 1805 0032 0135     		adds	r5, r5, #1
 1806              	.LVL208:
 1807              	.L127:
 522:Core/Src/gui.c ****     {   
 1808              		.loc 1 522 10 is_stmt 1 view .LVU496
 522:Core/Src/gui.c ****     {   
 1809              		.loc 1 522 12 is_stmt 0 view .LVU497
 1810 0034 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 522:Core/Src/gui.c ****     {   
 1811              		.loc 1 522 20 view .LVU498
 1812 0036 A3F12000 		sub	r0, r3, #32
 1813 003a C0B2     		uxtb	r0, r0
 522:Core/Src/gui.c ****     {   
 1814              		.loc 1 522 10 view .LVU499
 1815 003c 5E28     		cmp	r0, #94
 1816 003e 07D8     		bhi	.L126
 524:Core/Src/gui.c **** 		return;     
 1817              		.loc 1 524 3 is_stmt 1 view .LVU500
 524:Core/Src/gui.c **** 		return;     
 1818              		.loc 1 524 15 is_stmt 0 view .LVU501
 1819 0040 074A     		ldr	r2, .L132+8
 1820 0042 9288     		ldrh	r2, [r2, #4]
 524:Core/Src/gui.c **** 		return;     
 1821              		.loc 1 524 5 view .LVU502
ARM GAS  /tmp/ccWgdbjA.s 			page 49


 1822 0044 A242     		cmp	r2, r4
 1823 0046 03D9     		bls	.L126
 524:Core/Src/gui.c **** 		return;     
 1824              		.loc 1 524 35 discriminator 1 view .LVU503
 1825 0048 054A     		ldr	r2, .L132+8
 1826 004a D288     		ldrh	r2, [r2, #6]
 524:Core/Src/gui.c **** 		return;     
 1827              		.loc 1 524 24 discriminator 1 view .LVU504
 1828 004c B242     		cmp	r2, r6
 1829 004e E1D8     		bhi	.L131
 1830              	.L126:
 529:Core/Src/gui.c ****     }  
 530:Core/Src/gui.c **** } 
 1831              		.loc 1 530 1 view .LVU505
 1832 0050 04B0     		add	sp, sp, #16
 1833              	.LCFI26:
 1834              		.cfi_def_cfa_offset 24
 1835              		@ sp needed
 1836 0052 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1837              	.LVL209:
 1838              	.L133:
 1839              		.loc 1 530 1 view .LVU506
 1840 0056 00BF     		.align	2
 1841              	.L132:
 1842 0058 00000000 		.word	BACK_COLOR
 1843 005c 00000000 		.word	POINT_COLOR
 1844 0060 00000000 		.word	lcddev
 1845              		.cfi_endproc
 1846              	.LFE142:
 1848              		.section	.text.mypow,"ax",%progbits
 1849              		.align	1
 1850              		.global	mypow
 1851              		.syntax unified
 1852              		.thumb
 1853              		.thumb_func
 1854              		.fpu fpv4-sp-d16
 1856              	mypow:
 1857              	.LVL210:
 1858              	.LFB143:
 531:Core/Src/gui.c **** 
 532:Core/Src/gui.c **** /*****************************************************************************
 533:Core/Src/gui.c ****  * @name       :u32 mypow(u8 m,u8 n)
 534:Core/Src/gui.c ****  * @date       :2018-08-09 
 535:Core/Src/gui.c ****  * @function   :get the nth power of m (internal call)
 536:Core/Src/gui.c ****  * @parameters :m:the multiplier
 537:Core/Src/gui.c ****                 n:the power
 538:Core/Src/gui.c ****  * @retvalue   :the nth power of m
 539:Core/Src/gui.c **** ******************************************************************************/ 
 540:Core/Src/gui.c **** u32 mypow(u8 m,u8 n)
 541:Core/Src/gui.c **** {
 1859              		.loc 1 541 1 is_stmt 1 view -0
 1860              		.cfi_startproc
 1861              		@ args = 0, pretend = 0, frame = 0
 1862              		@ frame_needed = 0, uses_anonymous_args = 0
 1863              		@ link register save eliminated.
 1864              		.loc 1 541 1 is_stmt 0 view .LVU508
 1865 0000 0246     		mov	r2, r0
ARM GAS  /tmp/ccWgdbjA.s 			page 50


 542:Core/Src/gui.c **** 	u32 result=1;	 
 1866              		.loc 1 542 2 is_stmt 1 view .LVU509
 1867              	.LVL211:
 543:Core/Src/gui.c **** 	while(n--)result*=m;    
 1868              		.loc 1 543 2 view .LVU510
 542:Core/Src/gui.c **** 	u32 result=1;	 
 1869              		.loc 1 542 6 is_stmt 0 view .LVU511
 1870 0002 0120     		movs	r0, #1
 1871              	.LVL212:
 1872              	.L135:
 1873              		.loc 1 543 7 is_stmt 1 discriminator 1 view .LVU512
 1874              		.loc 1 543 9 is_stmt 0 discriminator 1 view .LVU513
 1875 0004 4B1E     		subs	r3, r1, #1
 1876 0006 DBB2     		uxtb	r3, r3
 1877              	.LVL213:
 1878              		.loc 1 543 7 discriminator 1 view .LVU514
 1879 0008 19B1     		cbz	r1, .L137
 1880              		.loc 1 543 12 is_stmt 1 discriminator 2 view .LVU515
 1881              		.loc 1 543 18 is_stmt 0 discriminator 2 view .LVU516
 1882 000a 02FB00F0 		mul	r0, r2, r0
 1883              	.LVL214:
 1884              		.loc 1 543 9 discriminator 2 view .LVU517
 1885 000e 1946     		mov	r1, r3
 1886 0010 F8E7     		b	.L135
 1887              	.L137:
 544:Core/Src/gui.c **** 	return result;
 545:Core/Src/gui.c **** }
 1888              		.loc 1 545 1 view .LVU518
 1889 0012 7047     		bx	lr
 1890              		.cfi_endproc
 1891              	.LFE143:
 1893              		.section	.text.LCD_ShowNum,"ax",%progbits
 1894              		.align	1
 1895              		.global	LCD_ShowNum
 1896              		.syntax unified
 1897              		.thumb
 1898              		.thumb_func
 1899              		.fpu fpv4-sp-d16
 1901              	LCD_ShowNum:
 1902              	.LVL215:
 1903              	.LFB144:
 546:Core/Src/gui.c **** 
 547:Core/Src/gui.c **** /*****************************************************************************
 548:Core/Src/gui.c ****  * @name       :void LCD_ShowNum(u16 x,u16 y,u32 num,u8 len,u8 size,u8 flag)
 549:Core/Src/gui.c ****  * @date       :2018-08-09 
 550:Core/Src/gui.c ****  * @function   :Display number
 551:Core/Src/gui.c ****  * @parameters :x:the bebinning x coordinate of the number
 552:Core/Src/gui.c ****                 y:the bebinning y coordinate of the number
 553:Core/Src/gui.c **** 								num:the number(0~4294967295)
 554:Core/Src/gui.c **** 								len:the length of the display number
 555:Core/Src/gui.c **** 								size:the size of display number
 556:Core/Src/gui.c **** 								flag:0-don't reserve 0,1-reserve 0
 557:Core/Src/gui.c ****  * @retvalue   :None
 558:Core/Src/gui.c **** ******************************************************************************/  			 
 559:Core/Src/gui.c **** void LCD_ShowNum(u16 x,u16 y,u32 num,u8 len,u8 size,u8 flag)
 560:Core/Src/gui.c **** {         	
 1904              		.loc 1 560 1 is_stmt 1 view -0
ARM GAS  /tmp/ccWgdbjA.s 			page 51


 1905              		.cfi_startproc
 1906              		@ args = 8, pretend = 0, frame = 0
 1907              		@ frame_needed = 0, uses_anonymous_args = 0
 1908              		.loc 1 560 1 is_stmt 0 view .LVU520
 1909 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1910              	.LCFI27:
 1911              		.cfi_def_cfa_offset 36
 1912              		.cfi_offset 4, -36
 1913              		.cfi_offset 5, -32
 1914              		.cfi_offset 6, -28
 1915              		.cfi_offset 7, -24
 1916              		.cfi_offset 8, -20
 1917              		.cfi_offset 9, -16
 1918              		.cfi_offset 10, -12
 1919              		.cfi_offset 11, -8
 1920              		.cfi_offset 14, -4
 1921 0004 85B0     		sub	sp, sp, #20
 1922              	.LCFI28:
 1923              		.cfi_def_cfa_offset 56
 1924 0006 8246     		mov	r10, r0
 1925 0008 8946     		mov	r9, r1
 1926 000a 9046     		mov	r8, r2
 1927 000c 1D46     		mov	r5, r3
 1928 000e 9DF83860 		ldrb	r6, [sp, #56]	@ zero_extendqisi2
 1929 0012 9DF83CB0 		ldrb	fp, [sp, #60]	@ zero_extendqisi2
 561:Core/Src/gui.c **** 	u8 t,temp;
 1930              		.loc 1 561 2 is_stmt 1 view .LVU521
 562:Core/Src/gui.c **** 	u8 enshow=0;						   
 1931              		.loc 1 562 2 view .LVU522
 1932              	.LVL216:
 563:Core/Src/gui.c **** 	for(t=0;t<len;t++)
 1933              		.loc 1 563 2 view .LVU523
 562:Core/Src/gui.c **** 	u8 enshow=0;						   
 1934              		.loc 1 562 5 is_stmt 0 view .LVU524
 1935 0016 0027     		movs	r7, #0
 1936              		.loc 1 563 7 view .LVU525
 1937 0018 3C46     		mov	r4, r7
 1938              		.loc 1 563 2 view .LVU526
 1939 001a 36E0     		b	.L139
 1940              	.LVL217:
 1941              	.L148:
 564:Core/Src/gui.c **** 	{
 565:Core/Src/gui.c **** 		temp=(num/mypow(10,len-t-1))%10;
 566:Core/Src/gui.c **** 		if(enshow==0&&t<(len-1))
 567:Core/Src/gui.c **** 		{
 568:Core/Src/gui.c **** 			if(temp==0)
 569:Core/Src/gui.c **** 			{
 570:Core/Src/gui.c **** 				if(flag)
 1942              		.loc 1 570 5 is_stmt 1 view .LVU527
 1943              		.loc 1 570 7 is_stmt 0 view .LVU528
 1944 001c BBF1000F 		cmp	fp, #0
 1945 0020 0FD0     		beq	.L141
 571:Core/Src/gui.c **** 				{
 572:Core/Src/gui.c **** 					LCD_ShowChar(x+(size/2)*t,y,POINT_COLOR,BACK_COLOR,'0',size,0);
 1946              		.loc 1 572 6 is_stmt 1 view .LVU529
 1947              		.loc 1 572 29 is_stmt 0 view .LVU530
 1948 0022 7008     		lsrs	r0, r6, #1
ARM GAS  /tmp/ccWgdbjA.s 			page 52


 1949              		.loc 1 572 6 view .LVU531
 1950 0024 00FB04A0 		mla	r0, r0, r4, r10
 1951 0028 0293     		str	r3, [sp, #8]
 1952 002a 0196     		str	r6, [sp, #4]
 1953 002c 3023     		movs	r3, #48
 1954              	.LVL218:
 1955              		.loc 1 572 6 view .LVU532
 1956 002e 0093     		str	r3, [sp]
 1957 0030 264B     		ldr	r3, .L149
 1958 0032 1B88     		ldrh	r3, [r3]
 1959 0034 264A     		ldr	r2, .L149+4
 1960 0036 1288     		ldrh	r2, [r2]
 1961 0038 4946     		mov	r1, r9
 1962 003a 80B2     		uxth	r0, r0
 1963 003c FFF7FEFF 		bl	LCD_ShowChar
 1964              	.LVL219:
 1965              		.loc 1 572 6 view .LVU533
 1966 0040 21E0     		b	.L143
 1967              	.LVL220:
 1968              	.L141:
 573:Core/Src/gui.c **** 				}
 574:Core/Src/gui.c **** 				else
 575:Core/Src/gui.c **** 				{
 576:Core/Src/gui.c **** 					LCD_ShowChar(x+(size/2)*t,y,POINT_COLOR,BACK_COLOR,' ',size,0);
 1969              		.loc 1 576 6 is_stmt 1 view .LVU534
 1970              		.loc 1 576 29 is_stmt 0 view .LVU535
 1971 0042 7008     		lsrs	r0, r6, #1
 1972              		.loc 1 576 6 view .LVU536
 1973 0044 00FB04A0 		mla	r0, r0, r4, r10
 1974 0048 0023     		movs	r3, #0
 1975              	.LVL221:
 1976              		.loc 1 576 6 view .LVU537
 1977 004a 0293     		str	r3, [sp, #8]
 1978 004c 0196     		str	r6, [sp, #4]
 1979 004e 2023     		movs	r3, #32
 1980 0050 0093     		str	r3, [sp]
 1981 0052 1E4B     		ldr	r3, .L149
 1982 0054 1B88     		ldrh	r3, [r3]
 1983 0056 1E4A     		ldr	r2, .L149+4
 1984 0058 1288     		ldrh	r2, [r2]
 1985 005a 4946     		mov	r1, r9
 1986 005c 80B2     		uxth	r0, r0
 1987 005e FFF7FEFF 		bl	LCD_ShowChar
 1988              	.LVL222:
 577:Core/Src/gui.c **** 				}
 578:Core/Src/gui.c **** 				continue;
 1989              		.loc 1 578 5 is_stmt 1 view .LVU538
 1990 0062 10E0     		b	.L143
 1991              	.LVL223:
 1992              	.L140:
 579:Core/Src/gui.c **** 			}else enshow=1; 
 580:Core/Src/gui.c **** 		 	 
 581:Core/Src/gui.c **** 		}
 582:Core/Src/gui.c **** 	 	LCD_ShowChar(x+(size/2)*t,y,POINT_COLOR,BACK_COLOR,temp+'0',size,0); 
 1993              		.loc 1 582 4 view .LVU539
 1994              		.loc 1 582 27 is_stmt 0 view .LVU540
 1995 0064 7008     		lsrs	r0, r6, #1
ARM GAS  /tmp/ccWgdbjA.s 			page 53


 1996              		.loc 1 582 4 view .LVU541
 1997 0066 00FB04A0 		mla	r0, r0, r4, r10
 1998 006a 0022     		movs	r2, #0
 1999 006c 0292     		str	r2, [sp, #8]
 2000 006e 0196     		str	r6, [sp, #4]
 2001 0070 3033     		adds	r3, r3, #48
 2002              	.LVL224:
 2003              		.loc 1 582 4 view .LVU542
 2004 0072 DBB2     		uxtb	r3, r3
 2005              	.LVL225:
 2006              		.loc 1 582 4 view .LVU543
 2007 0074 0093     		str	r3, [sp]
 2008 0076 154B     		ldr	r3, .L149
 2009 0078 1B88     		ldrh	r3, [r3]
 2010 007a 154A     		ldr	r2, .L149+4
 2011 007c 1288     		ldrh	r2, [r2]
 2012 007e 4946     		mov	r1, r9
 2013 0080 80B2     		uxth	r0, r0
 2014 0082 FFF7FEFF 		bl	LCD_ShowChar
 2015              	.LVL226:
 2016              	.L143:
 563:Core/Src/gui.c **** 	{
 2017              		.loc 1 563 16 is_stmt 1 discriminator 2 view .LVU544
 563:Core/Src/gui.c **** 	{
 2018              		.loc 1 563 17 is_stmt 0 discriminator 2 view .LVU545
 2019 0086 0134     		adds	r4, r4, #1
 2020              	.LVL227:
 563:Core/Src/gui.c **** 	{
 2021              		.loc 1 563 17 discriminator 2 view .LVU546
 2022 0088 E4B2     		uxtb	r4, r4
 2023              	.LVL228:
 2024              	.L139:
 563:Core/Src/gui.c **** 	{
 2025              		.loc 1 563 10 is_stmt 1 discriminator 1 view .LVU547
 563:Core/Src/gui.c **** 	{
 2026              		.loc 1 563 2 is_stmt 0 discriminator 1 view .LVU548
 2027 008a AC42     		cmp	r4, r5
 2028 008c 1AD2     		bcs	.L147
 565:Core/Src/gui.c **** 		if(enshow==0&&t<(len-1))
 2029              		.loc 1 565 3 is_stmt 1 view .LVU549
 565:Core/Src/gui.c **** 		if(enshow==0&&t<(len-1))
 2030              		.loc 1 565 25 is_stmt 0 view .LVU550
 2031 008e 291B     		subs	r1, r5, r4
 2032 0090 C9B2     		uxtb	r1, r1
 565:Core/Src/gui.c **** 		if(enshow==0&&t<(len-1))
 2033              		.loc 1 565 13 view .LVU551
 2034 0092 0139     		subs	r1, r1, #1
 2035 0094 C9B2     		uxtb	r1, r1
 2036 0096 0A20     		movs	r0, #10
 2037 0098 FFF7FEFF 		bl	mypow
 2038              	.LVL229:
 565:Core/Src/gui.c **** 		if(enshow==0&&t<(len-1))
 2039              		.loc 1 565 12 view .LVU552
 2040 009c B8FBF0F0 		udiv	r0, r8, r0
 565:Core/Src/gui.c **** 		if(enshow==0&&t<(len-1))
 2041              		.loc 1 565 31 view .LVU553
 2042 00a0 0C4B     		ldr	r3, .L149+8
ARM GAS  /tmp/ccWgdbjA.s 			page 54


 2043 00a2 A3FB0023 		umull	r2, r3, r3, r0
 2044 00a6 DB08     		lsrs	r3, r3, #3
 2045 00a8 03EB8303 		add	r3, r3, r3, lsl #2
 2046 00ac A0EB4303 		sub	r3, r0, r3, lsl #1
 565:Core/Src/gui.c **** 		if(enshow==0&&t<(len-1))
 2047              		.loc 1 565 7 view .LVU554
 2048 00b0 DBB2     		uxtb	r3, r3
 2049              	.LVL230:
 566:Core/Src/gui.c **** 		{
 2050              		.loc 1 566 3 is_stmt 1 view .LVU555
 566:Core/Src/gui.c **** 		{
 2051              		.loc 1 566 5 is_stmt 0 view .LVU556
 2052 00b2 002F     		cmp	r7, #0
 2053 00b4 D6D1     		bne	.L140
 566:Core/Src/gui.c **** 		{
 2054              		.loc 1 566 23 discriminator 1 view .LVU557
 2055 00b6 6A1E     		subs	r2, r5, #1
 566:Core/Src/gui.c **** 		{
 2056              		.loc 1 566 15 discriminator 1 view .LVU558
 2057 00b8 9442     		cmp	r4, r2
 2058 00ba D3DA     		bge	.L140
 568:Core/Src/gui.c **** 			{
 2059              		.loc 1 568 4 is_stmt 1 view .LVU559
 568:Core/Src/gui.c **** 			{
 2060              		.loc 1 568 6 is_stmt 0 view .LVU560
 2061 00bc 002B     		cmp	r3, #0
 2062 00be ADD0     		beq	.L148
 579:Core/Src/gui.c **** 		 	 
 2063              		.loc 1 579 16 view .LVU561
 2064 00c0 0127     		movs	r7, #1
 2065              	.LVL231:
 579:Core/Src/gui.c **** 		 	 
 2066              		.loc 1 579 16 view .LVU562
 2067 00c2 CFE7     		b	.L140
 2068              	.LVL232:
 2069              	.L147:
 583:Core/Src/gui.c **** 	}
 584:Core/Src/gui.c **** } 
 2070              		.loc 1 584 1 view .LVU563
 2071 00c4 05B0     		add	sp, sp, #20
 2072              	.LCFI29:
 2073              		.cfi_def_cfa_offset 36
 2074              		@ sp needed
 2075 00c6 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2076              	.LVL233:
 2077              	.L150:
 2078              		.loc 1 584 1 view .LVU564
 2079 00ca 00BF     		.align	2
 2080              	.L149:
 2081 00cc 00000000 		.word	BACK_COLOR
 2082 00d0 00000000 		.word	POINT_COLOR
 2083 00d4 CDCCCCCC 		.word	-858993459
 2084              		.cfi_endproc
 2085              	.LFE144:
 2087              		.section	.text.GUI_DrawFont16,"ax",%progbits
 2088              		.align	1
 2089              		.global	GUI_DrawFont16
ARM GAS  /tmp/ccWgdbjA.s 			page 55


 2090              		.syntax unified
 2091              		.thumb
 2092              		.thumb_func
 2093              		.fpu fpv4-sp-d16
 2095              	GUI_DrawFont16:
 2096              	.LVL234:
 2097              	.LFB145:
 585:Core/Src/gui.c **** 
 586:Core/Src/gui.c **** /*****************************************************************************
 587:Core/Src/gui.c ****  * @name       :void GUI_DrawFont16(u16 x, u16 y, u16 fc, u16 bc, u8 *s,u8 mode)
 588:Core/Src/gui.c ****  * @date       :2018-08-09 
 589:Core/Src/gui.c ****  * @function   :Display a single 16x16 Chinese character
 590:Core/Src/gui.c ****  * @parameters :x:the bebinning x coordinate of the Chinese character
 591:Core/Src/gui.c ****                 y:the bebinning y coordinate of the Chinese character
 592:Core/Src/gui.c **** 								fc:the color value of Chinese character
 593:Core/Src/gui.c **** 								bc:the background color of Chinese character
 594:Core/Src/gui.c **** 								s:the start address of the Chinese character
 595:Core/Src/gui.c **** 								mode:0-no overlying,1-overlying
 596:Core/Src/gui.c ****  * @retvalue   :None
 597:Core/Src/gui.c **** ******************************************************************************/ 
 598:Core/Src/gui.c **** void GUI_DrawFont16(u16 x, u16 y, u16 fc, u16 bc, u8 *s,u8 mode)
 599:Core/Src/gui.c **** {
 2098              		.loc 1 599 1 is_stmt 1 view -0
 2099              		.cfi_startproc
 2100              		@ args = 8, pretend = 0, frame = 16
 2101              		@ frame_needed = 0, uses_anonymous_args = 0
 2102              		.loc 1 599 1 is_stmt 0 view .LVU566
 2103 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2104              	.LCFI30:
 2105              		.cfi_def_cfa_offset 36
 2106              		.cfi_offset 4, -36
 2107              		.cfi_offset 5, -32
 2108              		.cfi_offset 6, -28
 2109              		.cfi_offset 7, -24
 2110              		.cfi_offset 8, -20
 2111              		.cfi_offset 9, -16
 2112              		.cfi_offset 10, -12
 2113              		.cfi_offset 11, -8
 2114              		.cfi_offset 14, -4
 2115 0004 85B0     		sub	sp, sp, #20
 2116              	.LCFI31:
 2117              		.cfi_def_cfa_offset 56
 2118 0006 8346     		mov	fp, r0
 2119 0008 0191     		str	r1, [sp, #4]
 2120 000a 9246     		mov	r10, r2
 2121 000c 0393     		str	r3, [sp, #12]
 2122 000e 9DF83C90 		ldrb	r9, [sp, #60]	@ zero_extendqisi2
 600:Core/Src/gui.c **** 	u8 i,j;
 2123              		.loc 1 600 2 is_stmt 1 view .LVU567
 601:Core/Src/gui.c **** 	u16 k;
 2124              		.loc 1 601 2 view .LVU568
 602:Core/Src/gui.c **** 	u16 HZnum;
 2125              		.loc 1 602 2 view .LVU569
 603:Core/Src/gui.c **** 	u16 x0=x;
 2126              		.loc 1 603 2 view .LVU570
 2127              	.LVL235:
 604:Core/Src/gui.c **** 	HZnum=sizeof(tfont16)/sizeof(typFNT_GB16);	//◊‘∂ØÕ≥º∆∫∫◊÷ ˝ƒø
ARM GAS  /tmp/ccWgdbjA.s 			page 56


 2128              		.loc 1 604 2 view .LVU571
 605:Core/Src/gui.c **** 	
 606:Core/Src/gui.c **** 			
 607:Core/Src/gui.c **** 	for (k=0;k<HZnum;k++) 
 2129              		.loc 1 607 2 view .LVU572
 2130              		.loc 1 607 2 is_stmt 0 view .LVU573
 2131 0012 0546     		mov	r5, r0
 2132              		.loc 1 607 8 view .LVU574
 2133 0014 4FF00008 		mov	r8, #0
 2134              		.loc 1 607 2 view .LVU575
 2135 0018 43E0     		b	.L152
 2136              	.LVL236:
 2137              	.L156:
 608:Core/Src/gui.c **** 	{
 609:Core/Src/gui.c **** 	  if ((tfont16[k].Index[0]==*(s))&&(tfont16[k].Index[1]==*(s+1)))
 610:Core/Src/gui.c **** 	  { 	LCD_SetWindows(x,y,x+16-1,y+16-1);
 611:Core/Src/gui.c **** 		    for(i=0;i<16*2;i++)
 612:Core/Src/gui.c **** 		    {
 613:Core/Src/gui.c **** 				for(j=0;j<8;j++)
 614:Core/Src/gui.c **** 		    	{	
 615:Core/Src/gui.c **** 					if(!mode) //∑«µ˛º”∑Ω Ω
 616:Core/Src/gui.c **** 					{
 617:Core/Src/gui.c **** 						if(tfont16[k].Msk[i]&(0x80>>j))	Lcd_WriteData_16Bit(fc);
 618:Core/Src/gui.c **** 						else Lcd_WriteData_16Bit(bc);
 2138              		.loc 1 618 12 is_stmt 1 view .LVU576
 2139 001a 4046     		mov	r0, r8
 2140 001c FFF7FEFF 		bl	Lcd_WriteData_16Bit
 2141              	.LVL237:
 2142 0020 13E0     		b	.L157
 2143              	.L155:
 619:Core/Src/gui.c **** 					}
 620:Core/Src/gui.c **** 					else
 621:Core/Src/gui.c **** 					{
 622:Core/Src/gui.c **** 						POINT_COLOR=fc;
 2144              		.loc 1 622 7 view .LVU577
 2145              		.loc 1 622 18 is_stmt 0 view .LVU578
 2146 0022 3A4B     		ldr	r3, .L169
 2147 0024 A3F800A0 		strh	r10, [r3]	@ movhi
 623:Core/Src/gui.c **** 						if(tfont16[k].Msk[i]&(0x80>>j))	LCD_DrawPoint(x,y);//ª≠“ª∏ˆµ„
 2148              		.loc 1 623 7 is_stmt 1 view .LVU579
 2149              		.loc 1 623 24 is_stmt 0 view .LVU580
 2150 0028 06EB0613 		add	r3, r6, r6, lsl #4
 2151 002c 384A     		ldr	r2, .L169+4
 2152 002e 02EB4303 		add	r3, r2, r3, lsl #1
 2153 0032 3B44     		add	r3, r3, r7
 2154 0034 9A78     		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 2155              		.loc 1 623 33 view .LVU581
 2156 0036 8023     		movs	r3, #128
 2157 0038 2341     		asrs	r3, r3, r4
 2158              		.loc 1 623 9 view .LVU582
 2159 003a 1A42     		tst	r2, r3
 2160 003c 1BD1     		bne	.L165
 2161              	.L158:
 624:Core/Src/gui.c **** 						x++;
 2162              		.loc 1 624 7 is_stmt 1 view .LVU583
 2163              		.loc 1 624 8 is_stmt 0 view .LVU584
 2164 003e 0135     		adds	r5, r5, #1
ARM GAS  /tmp/ccWgdbjA.s 			page 57


 2165              	.LVL238:
 2166              		.loc 1 624 8 view .LVU585
 2167 0040 ADB2     		uxth	r5, r5
 2168              	.LVL239:
 625:Core/Src/gui.c **** 						if((x-x0)==16)
 2169              		.loc 1 625 7 is_stmt 1 view .LVU586
 2170              		.loc 1 625 12 is_stmt 0 view .LVU587
 2171 0042 A5EB0B03 		sub	r3, r5, fp
 2172              		.loc 1 625 9 view .LVU588
 2173 0046 102B     		cmp	r3, #16
 2174 0048 1AD0     		beq	.L166
 2175              	.L157:
 613:Core/Src/gui.c **** 		    	{	
 2176              		.loc 1 613 17 is_stmt 1 discriminator 2 view .LVU589
 613:Core/Src/gui.c **** 		    	{	
 2177              		.loc 1 613 18 is_stmt 0 discriminator 2 view .LVU590
 2178 004a 0134     		adds	r4, r4, #1
 2179              	.LVL240:
 613:Core/Src/gui.c **** 		    	{	
 2180              		.loc 1 613 18 discriminator 2 view .LVU591
 2181 004c E4B2     		uxtb	r4, r4
 2182              	.LVL241:
 2183              	.L161:
 613:Core/Src/gui.c **** 		    	{	
 2184              		.loc 1 613 13 is_stmt 1 discriminator 1 view .LVU592
 613:Core/Src/gui.c **** 		    	{	
 2185              		.loc 1 613 5 is_stmt 0 discriminator 1 view .LVU593
 2186 004e 072C     		cmp	r4, #7
 2187 0050 1BD8     		bhi	.L159
 615:Core/Src/gui.c **** 					{
 2188              		.loc 1 615 6 is_stmt 1 view .LVU594
 615:Core/Src/gui.c **** 					{
 2189              		.loc 1 615 8 is_stmt 0 view .LVU595
 2190 0052 B9F1000F 		cmp	r9, #0
 2191 0056 E4D1     		bne	.L155
 617:Core/Src/gui.c **** 						else Lcd_WriteData_16Bit(bc);
 2192              		.loc 1 617 7 is_stmt 1 view .LVU596
 617:Core/Src/gui.c **** 						else Lcd_WriteData_16Bit(bc);
 2193              		.loc 1 617 24 is_stmt 0 view .LVU597
 2194 0058 06EB0613 		add	r3, r6, r6, lsl #4
 2195 005c 2C4A     		ldr	r2, .L169+4
 2196 005e 02EB4303 		add	r3, r2, r3, lsl #1
 2197 0062 3B44     		add	r3, r3, r7
 2198 0064 9A78     		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 617:Core/Src/gui.c **** 						else Lcd_WriteData_16Bit(bc);
 2199              		.loc 1 617 33 view .LVU598
 2200 0066 8023     		movs	r3, #128
 2201 0068 2341     		asrs	r3, r3, r4
 617:Core/Src/gui.c **** 						else Lcd_WriteData_16Bit(bc);
 2202              		.loc 1 617 9 view .LVU599
 2203 006a 1A42     		tst	r2, r3
 2204 006c D5D0     		beq	.L156
 617:Core/Src/gui.c **** 						else Lcd_WriteData_16Bit(bc);
 2205              		.loc 1 617 39 is_stmt 1 discriminator 1 view .LVU600
 2206 006e 5046     		mov	r0, r10
 2207 0070 FFF7FEFF 		bl	Lcd_WriteData_16Bit
 2208              	.LVL242:
ARM GAS  /tmp/ccWgdbjA.s 			page 58


 2209 0074 E9E7     		b	.L157
 2210              	.L165:
 623:Core/Src/gui.c **** 						x++;
 2211              		.loc 1 623 39 discriminator 1 view .LVU601
 2212 0076 0199     		ldr	r1, [sp, #4]
 2213 0078 2846     		mov	r0, r5
 2214 007a FFF7FEFF 		bl	LCD_DrawPoint
 2215              	.LVL243:
 2216 007e DEE7     		b	.L158
 2217              	.L166:
 626:Core/Src/gui.c **** 						{
 627:Core/Src/gui.c **** 							x=x0;
 2218              		.loc 1 627 8 view .LVU602
 2219              	.LVL244:
 628:Core/Src/gui.c **** 							y++;
 2220              		.loc 1 628 8 view .LVU603
 2221              		.loc 1 628 9 is_stmt 0 view .LVU604
 2222 0080 019B     		ldr	r3, [sp, #4]
 2223 0082 0133     		adds	r3, r3, #1
 2224 0084 9BB2     		uxth	r3, r3
 2225 0086 0193     		str	r3, [sp, #4]
 2226              	.LVL245:
 629:Core/Src/gui.c **** 							break;
 2227              		.loc 1 629 8 is_stmt 1 view .LVU605
 627:Core/Src/gui.c **** 							y++;
 2228              		.loc 1 627 9 is_stmt 0 view .LVU606
 2229 0088 5D46     		mov	r5, fp
 2230              	.LVL246:
 2231              	.L159:
 611:Core/Src/gui.c **** 		    {
 2232              		.loc 1 611 22 is_stmt 1 discriminator 2 view .LVU607
 611:Core/Src/gui.c **** 		    {
 2233              		.loc 1 611 23 is_stmt 0 discriminator 2 view .LVU608
 2234 008a 0137     		adds	r7, r7, #1
 2235              	.LVL247:
 611:Core/Src/gui.c **** 		    {
 2236              		.loc 1 611 23 discriminator 2 view .LVU609
 2237 008c FFB2     		uxtb	r7, r7
 2238              	.LVL248:
 2239              	.L154:
 611:Core/Src/gui.c **** 		    {
 2240              		.loc 1 611 15 is_stmt 1 discriminator 1 view .LVU610
 611:Core/Src/gui.c **** 		    {
 2241              		.loc 1 611 7 is_stmt 0 discriminator 1 view .LVU611
 2242 008e 1F2F     		cmp	r7, #31
 2243 0090 01D8     		bhi	.L167
 613:Core/Src/gui.c **** 		    	{	
 2244              		.loc 1 613 10 view .LVU612
 2245 0092 0024     		movs	r4, #0
 2246 0094 DBE7     		b	.L161
 2247              	.L167:
 2248 0096 DDF80880 		ldr	r8, [sp, #8]
 2249              	.LVL249:
 2250              	.L153:
 630:Core/Src/gui.c **** 						}
 631:Core/Src/gui.c **** 					}
 632:Core/Src/gui.c **** 
ARM GAS  /tmp/ccWgdbjA.s 			page 59


 633:Core/Src/gui.c **** 				}
 634:Core/Src/gui.c **** 				
 635:Core/Src/gui.c **** 			}
 636:Core/Src/gui.c **** 			
 637:Core/Src/gui.c **** 			
 638:Core/Src/gui.c **** 		}				  	
 639:Core/Src/gui.c **** 		continue;  //≤È’“µΩ∂‘”¶µ„’Û◊÷ø‚¡¢º¥ÕÀ≥ˆ£¨∑¿÷π∂‡∏ˆ∫∫◊÷÷ÿ∏¥»°ƒ£¥¯¿¥”∞œÏ
 2251              		.loc 1 639 3 is_stmt 1 view .LVU613
 607:Core/Src/gui.c **** 	{
 2252              		.loc 1 607 19 view .LVU614
 607:Core/Src/gui.c **** 	{
 2253              		.loc 1 607 20 is_stmt 0 view .LVU615
 2254 009a 08F10108 		add	r8, r8, #1
 2255 009e 1FFA88F8 		uxth	r8, r8
 2256              	.LVL250:
 2257              	.L152:
 607:Core/Src/gui.c **** 	{
 2258              		.loc 1 607 11 is_stmt 1 discriminator 1 view .LVU616
 607:Core/Src/gui.c **** 	{
 2259              		.loc 1 607 2 is_stmt 0 discriminator 1 view .LVU617
 2260 00a2 B8F1470F 		cmp	r8, #71
 2261 00a6 23D8     		bhi	.L168
 609:Core/Src/gui.c **** 	  { 	LCD_SetWindows(x,y,x+16-1,y+16-1);
 2262              		.loc 1 609 4 is_stmt 1 view .LVU618
 609:Core/Src/gui.c **** 	  { 	LCD_SetWindows(x,y,x+16-1,y+16-1);
 2263              		.loc 1 609 25 is_stmt 0 view .LVU619
 2264 00a8 4646     		mov	r6, r8
 2265 00aa 08EB0813 		add	r3, r8, r8, lsl #4
 2266 00ae 184A     		ldr	r2, .L169+4
 2267 00b0 12F81320 		ldrb	r2, [r2, r3, lsl #1]	@ zero_extendqisi2
 609:Core/Src/gui.c **** 	  { 	LCD_SetWindows(x,y,x+16-1,y+16-1);
 2268              		.loc 1 609 28 view .LVU620
 2269 00b4 0E9B     		ldr	r3, [sp, #56]
 2270 00b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 609:Core/Src/gui.c **** 	  { 	LCD_SetWindows(x,y,x+16-1,y+16-1);
 2271              		.loc 1 609 7 view .LVU621
 2272 00b8 9A42     		cmp	r2, r3
 2273 00ba EED1     		bne	.L153
 609:Core/Src/gui.c **** 	  { 	LCD_SetWindows(x,y,x+16-1,y+16-1);
 2274              		.loc 1 609 54 discriminator 1 view .LVU622
 2275 00bc 08EB0813 		add	r3, r8, r8, lsl #4
 2276 00c0 134A     		ldr	r2, .L169+4
 2277 00c2 02EB4303 		add	r3, r2, r3, lsl #1
 2278 00c6 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 609:Core/Src/gui.c **** 	  { 	LCD_SetWindows(x,y,x+16-1,y+16-1);
 2279              		.loc 1 609 57 discriminator 1 view .LVU623
 2280 00c8 0E9B     		ldr	r3, [sp, #56]
 2281 00ca 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 609:Core/Src/gui.c **** 	  { 	LCD_SetWindows(x,y,x+16-1,y+16-1);
 2282              		.loc 1 609 35 discriminator 1 view .LVU624
 2283 00cc 9A42     		cmp	r2, r3
 2284 00ce E4D1     		bne	.L153
 610:Core/Src/gui.c **** 		    for(i=0;i<16*2;i++)
 2285              		.loc 1 610 7 is_stmt 1 view .LVU625
 2286 00d0 0199     		ldr	r1, [sp, #4]
 2287 00d2 0B46     		mov	r3, r1
 2288 00d4 0F33     		adds	r3, r3, #15
ARM GAS  /tmp/ccWgdbjA.s 			page 60


 2289 00d6 05F10F02 		add	r2, r5, #15
 2290 00da 9BB2     		uxth	r3, r3
 2291 00dc 92B2     		uxth	r2, r2
 2292 00de 2846     		mov	r0, r5
 2293 00e0 FFF7FEFF 		bl	LCD_SetWindows
 2294              	.LVL251:
 611:Core/Src/gui.c **** 		    {
 2295              		.loc 1 611 7 view .LVU626
 611:Core/Src/gui.c **** 		    {
 2296              		.loc 1 611 12 is_stmt 0 view .LVU627
 2297 00e4 0027     		movs	r7, #0
 2298 00e6 CDF80880 		str	r8, [sp, #8]
 2299 00ea DDF80C80 		ldr	r8, [sp, #12]
 2300              	.LVL252:
 611:Core/Src/gui.c **** 		    {
 2301              		.loc 1 611 7 view .LVU628
 2302 00ee CEE7     		b	.L154
 2303              	.LVL253:
 2304              	.L168:
 640:Core/Src/gui.c **** 	}
 641:Core/Src/gui.c **** 
 642:Core/Src/gui.c **** 	LCD_SetWindows(0,0,lcddev.width-1,lcddev.height-1);//ª÷∏¥¥∞ø⁄Œ™»´∆¡  
 2305              		.loc 1 642 2 is_stmt 1 view .LVU629
 2306              		.loc 1 642 27 is_stmt 0 view .LVU630
 2307 00f0 084B     		ldr	r3, .L169+8
 2308 00f2 9A88     		ldrh	r2, [r3, #4]
 2309              		.loc 1 642 42 view .LVU631
 2310 00f4 DB88     		ldrh	r3, [r3, #6]
 2311              		.loc 1 642 2 view .LVU632
 2312 00f6 013B     		subs	r3, r3, #1
 2313 00f8 013A     		subs	r2, r2, #1
 2314 00fa 9BB2     		uxth	r3, r3
 2315 00fc 92B2     		uxth	r2, r2
 2316 00fe 0021     		movs	r1, #0
 2317 0100 0846     		mov	r0, r1
 2318 0102 FFF7FEFF 		bl	LCD_SetWindows
 2319              	.LVL254:
 643:Core/Src/gui.c **** } 
 2320              		.loc 1 643 1 view .LVU633
 2321 0106 05B0     		add	sp, sp, #20
 2322              	.LCFI32:
 2323              		.cfi_def_cfa_offset 36
 2324              		@ sp needed
 2325 0108 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2326              	.LVL255:
 2327              	.L170:
 2328              		.loc 1 643 1 view .LVU634
 2329              		.align	2
 2330              	.L169:
 2331 010c 00000000 		.word	POINT_COLOR
 2332 0110 00000000 		.word	.LANCHOR2
 2333 0114 00000000 		.word	lcddev
 2334              		.cfi_endproc
 2335              	.LFE145:
 2337              		.section	.text.GUI_DrawFont24,"ax",%progbits
 2338              		.align	1
 2339              		.global	GUI_DrawFont24
ARM GAS  /tmp/ccWgdbjA.s 			page 61


 2340              		.syntax unified
 2341              		.thumb
 2342              		.thumb_func
 2343              		.fpu fpv4-sp-d16
 2345              	GUI_DrawFont24:
 2346              	.LVL256:
 2347              	.LFB146:
 644:Core/Src/gui.c **** 
 645:Core/Src/gui.c **** /*****************************************************************************
 646:Core/Src/gui.c ****  * @name       :void GUI_DrawFont24(u16 x, u16 y, u16 fc, u16 bc, u8 *s,u8 mode)
 647:Core/Src/gui.c ****  * @date       :2018-08-09 
 648:Core/Src/gui.c ****  * @function   :Display a single 24x24 Chinese character
 649:Core/Src/gui.c ****  * @parameters :x:the bebinning x coordinate of the Chinese character
 650:Core/Src/gui.c ****                 y:the bebinning y coordinate of the Chinese character
 651:Core/Src/gui.c **** 								fc:the color value of Chinese character
 652:Core/Src/gui.c **** 								bc:the background color of Chinese character
 653:Core/Src/gui.c **** 								s:the start address of the Chinese character
 654:Core/Src/gui.c **** 								mode:0-no overlying,1-overlying
 655:Core/Src/gui.c ****  * @retvalue   :None
 656:Core/Src/gui.c **** ******************************************************************************/ 
 657:Core/Src/gui.c **** void GUI_DrawFont24(u16 x, u16 y, u16 fc, u16 bc, u8 *s,u8 mode)
 658:Core/Src/gui.c **** {
 2348              		.loc 1 658 1 is_stmt 1 view -0
 2349              		.cfi_startproc
 2350              		@ args = 8, pretend = 0, frame = 16
 2351              		@ frame_needed = 0, uses_anonymous_args = 0
 2352              		.loc 1 658 1 is_stmt 0 view .LVU636
 2353 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2354              	.LCFI33:
 2355              		.cfi_def_cfa_offset 36
 2356              		.cfi_offset 4, -36
 2357              		.cfi_offset 5, -32
 2358              		.cfi_offset 6, -28
 2359              		.cfi_offset 7, -24
 2360              		.cfi_offset 8, -20
 2361              		.cfi_offset 9, -16
 2362              		.cfi_offset 10, -12
 2363              		.cfi_offset 11, -8
 2364              		.cfi_offset 14, -4
 2365 0004 85B0     		sub	sp, sp, #20
 2366              	.LCFI34:
 2367              		.cfi_def_cfa_offset 56
 2368 0006 8246     		mov	r10, r0
 2369 0008 0191     		str	r1, [sp, #4]
 2370 000a 9146     		mov	r9, r2
 2371 000c 0293     		str	r3, [sp, #8]
 2372 000e 9DF83C80 		ldrb	r8, [sp, #60]	@ zero_extendqisi2
 659:Core/Src/gui.c **** 	u8 i,j;
 2373              		.loc 1 659 2 is_stmt 1 view .LVU637
 660:Core/Src/gui.c **** 	u16 k;
 2374              		.loc 1 660 2 view .LVU638
 661:Core/Src/gui.c **** 	u16 HZnum;
 2375              		.loc 1 661 2 view .LVU639
 662:Core/Src/gui.c **** 	u16 x0=x;
 2376              		.loc 1 662 2 view .LVU640
 2377              	.LVL257:
 663:Core/Src/gui.c **** 	HZnum=sizeof(tfont24)/sizeof(typFNT_GB24);	//◊‘∂ØÕ≥º∆∫∫◊÷ ˝ƒø
ARM GAS  /tmp/ccWgdbjA.s 			page 62


 2378              		.loc 1 663 2 view .LVU641
 664:Core/Src/gui.c **** 		
 665:Core/Src/gui.c **** 			for (k=0;k<HZnum;k++) 
 2379              		.loc 1 665 4 view .LVU642
 2380              		.loc 1 665 4 is_stmt 0 view .LVU643
 2381 0012 0546     		mov	r5, r0
 2382              		.loc 1 665 10 view .LVU644
 2383 0014 4FF0000B 		mov	fp, #0
 2384              		.loc 1 665 4 view .LVU645
 2385 0018 41E0     		b	.L172
 2386              	.LVL258:
 2387              	.L176:
 666:Core/Src/gui.c **** 			{
 667:Core/Src/gui.c **** 			  if ((tfont24[k].Index[0]==*(s))&&(tfont24[k].Index[1]==*(s+1)))
 668:Core/Src/gui.c **** 			  { 	LCD_SetWindows(x,y,x+24-1,y+24-1);
 669:Core/Src/gui.c **** 				    for(i=0;i<24*3;i++)
 670:Core/Src/gui.c **** 				    {
 671:Core/Src/gui.c **** 							for(j=0;j<8;j++)
 672:Core/Src/gui.c **** 							{
 673:Core/Src/gui.c **** 								if(!mode) //∑«µ˛º”∑Ω Ω
 674:Core/Src/gui.c **** 								{
 675:Core/Src/gui.c **** 									if(tfont24[k].Msk[i]&(0x80>>j))	Lcd_WriteData_16Bit(fc);
 676:Core/Src/gui.c **** 									else Lcd_WriteData_16Bit(bc);
 2388              		.loc 1 676 15 is_stmt 1 view .LVU646
 2389 001a 5846     		mov	r0, fp
 2390 001c FFF7FEFF 		bl	Lcd_WriteData_16Bit
 2391              	.LVL259:
 2392 0020 12E0     		b	.L177
 2393              	.L175:
 677:Core/Src/gui.c **** 								}
 678:Core/Src/gui.c **** 							else
 679:Core/Src/gui.c **** 							{
 680:Core/Src/gui.c **** 								POINT_COLOR=fc;
 2394              		.loc 1 680 9 view .LVU647
 2395              		.loc 1 680 20 is_stmt 0 view .LVU648
 2396 0022 394B     		ldr	r3, .L189
 2397 0024 A3F80090 		strh	r9, [r3]	@ movhi
 681:Core/Src/gui.c **** 								if(tfont24[k].Msk[i]&(0x80>>j))	LCD_DrawPoint(x,y);//ª≠“ª∏ˆµ„
 2398              		.loc 1 681 9 is_stmt 1 view .LVU649
 2399              		.loc 1 681 26 is_stmt 0 view .LVU650
 2400 0028 384A     		ldr	r2, .L189+4
 2401 002a 4A23     		movs	r3, #74
 2402 002c 03FB0723 		mla	r3, r3, r7, r2
 2403 0030 3344     		add	r3, r3, r6
 2404 0032 9A78     		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 2405              		.loc 1 681 35 view .LVU651
 2406 0034 8023     		movs	r3, #128
 2407 0036 2341     		asrs	r3, r3, r4
 2408              		.loc 1 681 11 view .LVU652
 2409 0038 1A42     		tst	r2, r3
 2410 003a 1AD1     		bne	.L185
 2411              	.L178:
 682:Core/Src/gui.c **** 								x++;
 2412              		.loc 1 682 9 is_stmt 1 view .LVU653
 2413              		.loc 1 682 10 is_stmt 0 view .LVU654
 2414 003c 0135     		adds	r5, r5, #1
 2415              	.LVL260:
ARM GAS  /tmp/ccWgdbjA.s 			page 63


 2416              		.loc 1 682 10 view .LVU655
 2417 003e ADB2     		uxth	r5, r5
 2418              	.LVL261:
 683:Core/Src/gui.c **** 								if((x-x0)==24)
 2419              		.loc 1 683 9 is_stmt 1 view .LVU656
 2420              		.loc 1 683 14 is_stmt 0 view .LVU657
 2421 0040 A5EB0A03 		sub	r3, r5, r10
 2422              		.loc 1 683 11 view .LVU658
 2423 0044 182B     		cmp	r3, #24
 2424 0046 19D0     		beq	.L186
 2425              	.L177:
 671:Core/Src/gui.c **** 							{
 2426              		.loc 1 671 20 is_stmt 1 discriminator 2 view .LVU659
 671:Core/Src/gui.c **** 							{
 2427              		.loc 1 671 21 is_stmt 0 discriminator 2 view .LVU660
 2428 0048 0134     		adds	r4, r4, #1
 2429              	.LVL262:
 671:Core/Src/gui.c **** 							{
 2430              		.loc 1 671 21 discriminator 2 view .LVU661
 2431 004a E4B2     		uxtb	r4, r4
 2432              	.LVL263:
 2433              	.L181:
 671:Core/Src/gui.c **** 							{
 2434              		.loc 1 671 16 is_stmt 1 discriminator 1 view .LVU662
 671:Core/Src/gui.c **** 							{
 2435              		.loc 1 671 8 is_stmt 0 discriminator 1 view .LVU663
 2436 004c 072C     		cmp	r4, #7
 2437 004e 1AD8     		bhi	.L179
 673:Core/Src/gui.c **** 								{
 2438              		.loc 1 673 9 is_stmt 1 view .LVU664
 673:Core/Src/gui.c **** 								{
 2439              		.loc 1 673 11 is_stmt 0 view .LVU665
 2440 0050 B8F1000F 		cmp	r8, #0
 2441 0054 E5D1     		bne	.L175
 675:Core/Src/gui.c **** 									else Lcd_WriteData_16Bit(bc);
 2442              		.loc 1 675 10 is_stmt 1 view .LVU666
 675:Core/Src/gui.c **** 									else Lcd_WriteData_16Bit(bc);
 2443              		.loc 1 675 27 is_stmt 0 view .LVU667
 2444 0056 2D4A     		ldr	r2, .L189+4
 2445 0058 4A23     		movs	r3, #74
 2446 005a 03FB0723 		mla	r3, r3, r7, r2
 2447 005e 3344     		add	r3, r3, r6
 2448 0060 9A78     		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 675:Core/Src/gui.c **** 									else Lcd_WriteData_16Bit(bc);
 2449              		.loc 1 675 36 view .LVU668
 2450 0062 8023     		movs	r3, #128
 2451 0064 2341     		asrs	r3, r3, r4
 675:Core/Src/gui.c **** 									else Lcd_WriteData_16Bit(bc);
 2452              		.loc 1 675 12 view .LVU669
 2453 0066 1A42     		tst	r2, r3
 2454 0068 D7D0     		beq	.L176
 675:Core/Src/gui.c **** 									else Lcd_WriteData_16Bit(bc);
 2455              		.loc 1 675 42 is_stmt 1 discriminator 1 view .LVU670
 2456 006a 4846     		mov	r0, r9
 2457 006c FFF7FEFF 		bl	Lcd_WriteData_16Bit
 2458              	.LVL264:
 2459 0070 EAE7     		b	.L177
ARM GAS  /tmp/ccWgdbjA.s 			page 64


 2460              	.L185:
 681:Core/Src/gui.c **** 								x++;
 2461              		.loc 1 681 41 discriminator 1 view .LVU671
 2462 0072 0199     		ldr	r1, [sp, #4]
 2463 0074 2846     		mov	r0, r5
 2464 0076 FFF7FEFF 		bl	LCD_DrawPoint
 2465              	.LVL265:
 2466 007a DFE7     		b	.L178
 2467              	.L186:
 684:Core/Src/gui.c **** 								{
 685:Core/Src/gui.c **** 									x=x0;
 2468              		.loc 1 685 10 view .LVU672
 2469              	.LVL266:
 686:Core/Src/gui.c **** 									y++;
 2470              		.loc 1 686 10 view .LVU673
 2471              		.loc 1 686 11 is_stmt 0 view .LVU674
 2472 007c 019B     		ldr	r3, [sp, #4]
 2473 007e 0133     		adds	r3, r3, #1
 2474 0080 9BB2     		uxth	r3, r3
 2475 0082 0193     		str	r3, [sp, #4]
 2476              	.LVL267:
 687:Core/Src/gui.c **** 									break;
 2477              		.loc 1 687 10 is_stmt 1 view .LVU675
 685:Core/Src/gui.c **** 									y++;
 2478              		.loc 1 685 11 is_stmt 0 view .LVU676
 2479 0084 5546     		mov	r5, r10
 2480              	.LVL268:
 2481              	.L179:
 669:Core/Src/gui.c **** 				    {
 2482              		.loc 1 669 24 is_stmt 1 discriminator 2 view .LVU677
 669:Core/Src/gui.c **** 				    {
 2483              		.loc 1 669 25 is_stmt 0 discriminator 2 view .LVU678
 2484 0086 0136     		adds	r6, r6, #1
 2485              	.LVL269:
 669:Core/Src/gui.c **** 				    {
 2486              		.loc 1 669 25 discriminator 2 view .LVU679
 2487 0088 F6B2     		uxtb	r6, r6
 2488              	.LVL270:
 2489              	.L174:
 669:Core/Src/gui.c **** 				    {
 2490              		.loc 1 669 17 is_stmt 1 discriminator 1 view .LVU680
 669:Core/Src/gui.c **** 				    {
 2491              		.loc 1 669 9 is_stmt 0 discriminator 1 view .LVU681
 2492 008a 472E     		cmp	r6, #71
 2493 008c 01D8     		bhi	.L187
 671:Core/Src/gui.c **** 							{
 2494              		.loc 1 671 13 view .LVU682
 2495 008e 0024     		movs	r4, #0
 2496 0090 DCE7     		b	.L181
 2497              	.L187:
 2498 0092 DDF80CB0 		ldr	fp, [sp, #12]
 2499              	.LVL271:
 2500              	.L173:
 688:Core/Src/gui.c **** 								}
 689:Core/Src/gui.c **** 							}
 690:Core/Src/gui.c **** 						}
 691:Core/Src/gui.c **** 					}
ARM GAS  /tmp/ccWgdbjA.s 			page 65


 692:Core/Src/gui.c **** 					
 693:Core/Src/gui.c **** 					
 694:Core/Src/gui.c **** 				}				  	
 695:Core/Src/gui.c **** 				continue;  //≤È’“µΩ∂‘”¶µ„’Û◊÷ø‚¡¢º¥ÕÀ≥ˆ£¨∑¿÷π∂‡∏ˆ∫∫◊÷÷ÿ∏¥»°ƒ£¥¯¿¥”∞œÏ
 2501              		.loc 1 695 5 is_stmt 1 view .LVU683
 665:Core/Src/gui.c **** 			{
 2502              		.loc 1 665 21 view .LVU684
 665:Core/Src/gui.c **** 			{
 2503              		.loc 1 665 22 is_stmt 0 view .LVU685
 2504 0096 0BF1010B 		add	fp, fp, #1
 2505 009a 1FFA8BFB 		uxth	fp, fp
 2506              	.LVL272:
 2507              	.L172:
 665:Core/Src/gui.c **** 			{
 2508              		.loc 1 665 13 is_stmt 1 discriminator 1 view .LVU686
 665:Core/Src/gui.c **** 			{
 2509              		.loc 1 665 4 is_stmt 0 discriminator 1 view .LVU687
 2510 009e BBF1060F 		cmp	fp, #6
 2511 00a2 22D8     		bhi	.L188
 667:Core/Src/gui.c **** 			  { 	LCD_SetWindows(x,y,x+24-1,y+24-1);
 2512              		.loc 1 667 6 is_stmt 1 view .LVU688
 667:Core/Src/gui.c **** 			  { 	LCD_SetWindows(x,y,x+24-1,y+24-1);
 2513              		.loc 1 667 27 is_stmt 0 view .LVU689
 2514 00a4 5F46     		mov	r7, fp
 2515 00a6 4A23     		movs	r3, #74
 2516 00a8 03FB0BF3 		mul	r3, r3, fp
 2517 00ac 174A     		ldr	r2, .L189+4
 2518 00ae D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 667:Core/Src/gui.c **** 			  { 	LCD_SetWindows(x,y,x+24-1,y+24-1);
 2519              		.loc 1 667 30 view .LVU690
 2520 00b0 0E9B     		ldr	r3, [sp, #56]
 2521 00b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 667:Core/Src/gui.c **** 			  { 	LCD_SetWindows(x,y,x+24-1,y+24-1);
 2522              		.loc 1 667 9 view .LVU691
 2523 00b4 9A42     		cmp	r2, r3
 2524 00b6 EED1     		bne	.L173
 667:Core/Src/gui.c **** 			  { 	LCD_SetWindows(x,y,x+24-1,y+24-1);
 2525              		.loc 1 667 56 discriminator 1 view .LVU692
 2526 00b8 144A     		ldr	r2, .L189+4
 2527 00ba 4A23     		movs	r3, #74
 2528 00bc 03FB0B23 		mla	r3, r3, fp, r2
 2529 00c0 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 667:Core/Src/gui.c **** 			  { 	LCD_SetWindows(x,y,x+24-1,y+24-1);
 2530              		.loc 1 667 59 discriminator 1 view .LVU693
 2531 00c2 0E9B     		ldr	r3, [sp, #56]
 2532 00c4 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 667:Core/Src/gui.c **** 			  { 	LCD_SetWindows(x,y,x+24-1,y+24-1);
 2533              		.loc 1 667 37 discriminator 1 view .LVU694
 2534 00c6 9A42     		cmp	r2, r3
 2535 00c8 E5D1     		bne	.L173
 668:Core/Src/gui.c **** 				    for(i=0;i<24*3;i++)
 2536              		.loc 1 668 9 is_stmt 1 view .LVU695
 2537 00ca 0199     		ldr	r1, [sp, #4]
 2538 00cc 0B46     		mov	r3, r1
 2539 00ce 1733     		adds	r3, r3, #23
 2540 00d0 05F11702 		add	r2, r5, #23
 2541 00d4 9BB2     		uxth	r3, r3
ARM GAS  /tmp/ccWgdbjA.s 			page 66


 2542 00d6 92B2     		uxth	r2, r2
 2543 00d8 2846     		mov	r0, r5
 2544 00da FFF7FEFF 		bl	LCD_SetWindows
 2545              	.LVL273:
 669:Core/Src/gui.c **** 				    {
 2546              		.loc 1 669 9 view .LVU696
 669:Core/Src/gui.c **** 				    {
 2547              		.loc 1 669 14 is_stmt 0 view .LVU697
 2548 00de 0026     		movs	r6, #0
 2549 00e0 CDF80CB0 		str	fp, [sp, #12]
 2550 00e4 DDF808B0 		ldr	fp, [sp, #8]
 2551              	.LVL274:
 669:Core/Src/gui.c **** 				    {
 2552              		.loc 1 669 9 view .LVU698
 2553 00e8 CFE7     		b	.L174
 2554              	.LVL275:
 2555              	.L188:
 696:Core/Src/gui.c **** 			}
 697:Core/Src/gui.c **** 
 698:Core/Src/gui.c **** 	LCD_SetWindows(0,0,lcddev.width-1,lcddev.height-1);//ª÷∏¥¥∞ø⁄Œ™»´∆¡  
 2556              		.loc 1 698 2 is_stmt 1 view .LVU699
 2557              		.loc 1 698 27 is_stmt 0 view .LVU700
 2558 00ea 094B     		ldr	r3, .L189+8
 2559 00ec 9A88     		ldrh	r2, [r3, #4]
 2560              		.loc 1 698 42 view .LVU701
 2561 00ee DB88     		ldrh	r3, [r3, #6]
 2562              		.loc 1 698 2 view .LVU702
 2563 00f0 013B     		subs	r3, r3, #1
 2564 00f2 013A     		subs	r2, r2, #1
 2565 00f4 9BB2     		uxth	r3, r3
 2566 00f6 92B2     		uxth	r2, r2
 2567 00f8 0021     		movs	r1, #0
 2568 00fa 0846     		mov	r0, r1
 2569 00fc FFF7FEFF 		bl	LCD_SetWindows
 2570              	.LVL276:
 699:Core/Src/gui.c **** }
 2571              		.loc 1 699 1 view .LVU703
 2572 0100 05B0     		add	sp, sp, #20
 2573              	.LCFI35:
 2574              		.cfi_def_cfa_offset 36
 2575              		@ sp needed
 2576 0102 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2577              	.LVL277:
 2578              	.L190:
 2579              		.loc 1 699 1 view .LVU704
 2580 0106 00BF     		.align	2
 2581              	.L189:
 2582 0108 00000000 		.word	POINT_COLOR
 2583 010c 00000000 		.word	.LANCHOR3
 2584 0110 00000000 		.word	lcddev
 2585              		.cfi_endproc
 2586              	.LFE146:
 2588              		.section	.text.GUI_DrawFont32,"ax",%progbits
 2589              		.align	1
 2590              		.global	GUI_DrawFont32
 2591              		.syntax unified
 2592              		.thumb
ARM GAS  /tmp/ccWgdbjA.s 			page 67


 2593              		.thumb_func
 2594              		.fpu fpv4-sp-d16
 2596              	GUI_DrawFont32:
 2597              	.LVL278:
 2598              	.LFB147:
 700:Core/Src/gui.c **** 
 701:Core/Src/gui.c **** /*****************************************************************************
 702:Core/Src/gui.c ****  * @name       :void GUI_DrawFont32(u16 x, u16 y, u16 fc, u16 bc, u8 *s,u8 mode)
 703:Core/Src/gui.c ****  * @date       :2018-08-09 
 704:Core/Src/gui.c ****  * @function   :Display a single 32x32 Chinese character
 705:Core/Src/gui.c ****  * @parameters :x:the bebinning x coordinate of the Chinese character
 706:Core/Src/gui.c ****                 y:the bebinning y coordinate of the Chinese character
 707:Core/Src/gui.c **** 								fc:the color value of Chinese character
 708:Core/Src/gui.c **** 								bc:the background color of Chinese character
 709:Core/Src/gui.c **** 								s:the start address of the Chinese character
 710:Core/Src/gui.c **** 								mode:0-no overlying,1-overlying
 711:Core/Src/gui.c ****  * @retvalue   :None
 712:Core/Src/gui.c **** ******************************************************************************/ 
 713:Core/Src/gui.c **** void GUI_DrawFont32(u16 x, u16 y, u16 fc, u16 bc, u8 *s,u8 mode)
 714:Core/Src/gui.c **** {
 2599              		.loc 1 714 1 is_stmt 1 view -0
 2600              		.cfi_startproc
 2601              		@ args = 8, pretend = 0, frame = 16
 2602              		@ frame_needed = 0, uses_anonymous_args = 0
 2603              		.loc 1 714 1 is_stmt 0 view .LVU706
 2604 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2605              	.LCFI36:
 2606              		.cfi_def_cfa_offset 36
 2607              		.cfi_offset 4, -36
 2608              		.cfi_offset 5, -32
 2609              		.cfi_offset 6, -28
 2610              		.cfi_offset 7, -24
 2611              		.cfi_offset 8, -20
 2612              		.cfi_offset 9, -16
 2613              		.cfi_offset 10, -12
 2614              		.cfi_offset 11, -8
 2615              		.cfi_offset 14, -4
 2616 0004 85B0     		sub	sp, sp, #20
 2617              	.LCFI37:
 2618              		.cfi_def_cfa_offset 56
 2619 0006 8246     		mov	r10, r0
 2620 0008 0191     		str	r1, [sp, #4]
 2621 000a 9146     		mov	r9, r2
 2622 000c 0293     		str	r3, [sp, #8]
 2623 000e 9DF83C80 		ldrb	r8, [sp, #60]	@ zero_extendqisi2
 715:Core/Src/gui.c **** 	u8 i,j;
 2624              		.loc 1 715 2 is_stmt 1 view .LVU707
 716:Core/Src/gui.c **** 	u16 k;
 2625              		.loc 1 716 2 view .LVU708
 717:Core/Src/gui.c **** 	u16 HZnum;
 2626              		.loc 1 717 2 view .LVU709
 718:Core/Src/gui.c **** 	u16 x0=x;
 2627              		.loc 1 718 2 view .LVU710
 2628              	.LVL279:
 719:Core/Src/gui.c **** 	HZnum=sizeof(tfont32)/sizeof(typFNT_GB32);	//◊‘∂ØÕ≥º∆∫∫◊÷ ˝ƒø
 2629              		.loc 1 719 2 view .LVU711
 720:Core/Src/gui.c **** 	for (k=0;k<HZnum;k++) 
ARM GAS  /tmp/ccWgdbjA.s 			page 68


 2630              		.loc 1 720 2 view .LVU712
 2631              		.loc 1 720 2 is_stmt 0 view .LVU713
 2632 0012 0546     		mov	r5, r0
 2633              		.loc 1 720 8 view .LVU714
 2634 0014 4FF0000B 		mov	fp, #0
 2635              		.loc 1 720 2 view .LVU715
 2636 0018 44E0     		b	.L192
 2637              	.LVL280:
 2638              	.L196:
 721:Core/Src/gui.c **** 			{
 722:Core/Src/gui.c **** 			  if ((tfont32[k].Index[0]==*(s))&&(tfont32[k].Index[1]==*(s+1)))
 723:Core/Src/gui.c **** 			  { 	LCD_SetWindows(x,y,x+32-1,y+32-1);
 724:Core/Src/gui.c **** 				    for(i=0;i<32*4;i++)
 725:Core/Src/gui.c **** 				    {
 726:Core/Src/gui.c **** 						for(j=0;j<8;j++)
 727:Core/Src/gui.c **** 				    	{
 728:Core/Src/gui.c **** 							if(!mode) //∑«µ˛º”∑Ω Ω
 729:Core/Src/gui.c **** 							{
 730:Core/Src/gui.c **** 								if(tfont32[k].Msk[i]&(0x80>>j))	Lcd_WriteData_16Bit(fc);
 731:Core/Src/gui.c **** 								else Lcd_WriteData_16Bit(bc);
 2639              		.loc 1 731 14 is_stmt 1 view .LVU716
 2640 001a 5846     		mov	r0, fp
 2641 001c FFF7FEFF 		bl	Lcd_WriteData_16Bit
 2642              	.LVL281:
 2643 0020 13E0     		b	.L197
 2644              	.L195:
 732:Core/Src/gui.c **** 							}
 733:Core/Src/gui.c **** 							else
 734:Core/Src/gui.c **** 							{
 735:Core/Src/gui.c **** 								POINT_COLOR=fc;
 2645              		.loc 1 735 9 view .LVU717
 2646              		.loc 1 735 20 is_stmt 0 view .LVU718
 2647 0022 3B4B     		ldr	r3, .L209
 2648 0024 A3F80090 		strh	r9, [r3]	@ movhi
 736:Core/Src/gui.c **** 								if(tfont32[k].Msk[i]&(0x80>>j))	LCD_DrawPoint(x,y);//ª≠“ª∏ˆµ„
 2649              		.loc 1 736 9 is_stmt 1 view .LVU719
 2650              		.loc 1 736 26 is_stmt 0 view .LVU720
 2651 0028 06EB8613 		add	r3, r6, r6, lsl #6
 2652 002c 394A     		ldr	r2, .L209+4
 2653 002e 02EB4303 		add	r3, r2, r3, lsl #1
 2654 0032 3B44     		add	r3, r3, r7
 2655 0034 9A78     		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 2656              		.loc 1 736 35 view .LVU721
 2657 0036 8023     		movs	r3, #128
 2658 0038 2341     		asrs	r3, r3, r4
 2659              		.loc 1 736 11 view .LVU722
 2660 003a 1A42     		tst	r2, r3
 2661 003c 1BD1     		bne	.L205
 2662              	.L198:
 737:Core/Src/gui.c **** 								x++;
 2663              		.loc 1 737 9 is_stmt 1 view .LVU723
 2664              		.loc 1 737 10 is_stmt 0 view .LVU724
 2665 003e 0135     		adds	r5, r5, #1
 2666              	.LVL282:
 2667              		.loc 1 737 10 view .LVU725
 2668 0040 ADB2     		uxth	r5, r5
 2669              	.LVL283:
ARM GAS  /tmp/ccWgdbjA.s 			page 69


 738:Core/Src/gui.c **** 								if((x-x0)==32)
 2670              		.loc 1 738 9 is_stmt 1 view .LVU726
 2671              		.loc 1 738 14 is_stmt 0 view .LVU727
 2672 0042 A5EB0A03 		sub	r3, r5, r10
 2673              		.loc 1 738 11 view .LVU728
 2674 0046 202B     		cmp	r3, #32
 2675 0048 1AD0     		beq	.L206
 2676              	.L197:
 726:Core/Src/gui.c **** 				    	{
 2677              		.loc 1 726 19 is_stmt 1 discriminator 2 view .LVU729
 726:Core/Src/gui.c **** 				    	{
 2678              		.loc 1 726 20 is_stmt 0 discriminator 2 view .LVU730
 2679 004a 0134     		adds	r4, r4, #1
 2680              	.LVL284:
 726:Core/Src/gui.c **** 				    	{
 2681              		.loc 1 726 20 discriminator 2 view .LVU731
 2682 004c E4B2     		uxtb	r4, r4
 2683              	.LVL285:
 2684              	.L201:
 726:Core/Src/gui.c **** 				    	{
 2685              		.loc 1 726 15 is_stmt 1 discriminator 1 view .LVU732
 726:Core/Src/gui.c **** 				    	{
 2686              		.loc 1 726 7 is_stmt 0 discriminator 1 view .LVU733
 2687 004e 072C     		cmp	r4, #7
 2688 0050 1BD8     		bhi	.L199
 728:Core/Src/gui.c **** 							{
 2689              		.loc 1 728 8 is_stmt 1 view .LVU734
 728:Core/Src/gui.c **** 							{
 2690              		.loc 1 728 10 is_stmt 0 view .LVU735
 2691 0052 B8F1000F 		cmp	r8, #0
 2692 0056 E4D1     		bne	.L195
 730:Core/Src/gui.c **** 								else Lcd_WriteData_16Bit(bc);
 2693              		.loc 1 730 9 is_stmt 1 view .LVU736
 730:Core/Src/gui.c **** 								else Lcd_WriteData_16Bit(bc);
 2694              		.loc 1 730 26 is_stmt 0 view .LVU737
 2695 0058 06EB8613 		add	r3, r6, r6, lsl #6
 2696 005c 2D4A     		ldr	r2, .L209+4
 2697 005e 02EB4303 		add	r3, r2, r3, lsl #1
 2698 0062 3B44     		add	r3, r3, r7
 2699 0064 9A78     		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 730:Core/Src/gui.c **** 								else Lcd_WriteData_16Bit(bc);
 2700              		.loc 1 730 35 view .LVU738
 2701 0066 8023     		movs	r3, #128
 2702 0068 2341     		asrs	r3, r3, r4
 730:Core/Src/gui.c **** 								else Lcd_WriteData_16Bit(bc);
 2703              		.loc 1 730 11 view .LVU739
 2704 006a 1A42     		tst	r2, r3
 2705 006c D5D0     		beq	.L196
 730:Core/Src/gui.c **** 								else Lcd_WriteData_16Bit(bc);
 2706              		.loc 1 730 41 is_stmt 1 discriminator 1 view .LVU740
 2707 006e 4846     		mov	r0, r9
 2708 0070 FFF7FEFF 		bl	Lcd_WriteData_16Bit
 2709              	.LVL286:
 2710 0074 E9E7     		b	.L197
 2711              	.L205:
 736:Core/Src/gui.c **** 								x++;
 2712              		.loc 1 736 41 discriminator 1 view .LVU741
ARM GAS  /tmp/ccWgdbjA.s 			page 70


 2713 0076 0199     		ldr	r1, [sp, #4]
 2714 0078 2846     		mov	r0, r5
 2715 007a FFF7FEFF 		bl	LCD_DrawPoint
 2716              	.LVL287:
 2717 007e DEE7     		b	.L198
 2718              	.L206:
 739:Core/Src/gui.c **** 								{
 740:Core/Src/gui.c **** 									x=x0;
 2719              		.loc 1 740 10 view .LVU742
 2720              	.LVL288:
 741:Core/Src/gui.c **** 									y++;
 2721              		.loc 1 741 10 view .LVU743
 2722              		.loc 1 741 11 is_stmt 0 view .LVU744
 2723 0080 019B     		ldr	r3, [sp, #4]
 2724 0082 0133     		adds	r3, r3, #1
 2725 0084 9BB2     		uxth	r3, r3
 2726 0086 0193     		str	r3, [sp, #4]
 2727              	.LVL289:
 742:Core/Src/gui.c **** 									break;
 2728              		.loc 1 742 10 is_stmt 1 view .LVU745
 740:Core/Src/gui.c **** 									y++;
 2729              		.loc 1 740 11 is_stmt 0 view .LVU746
 2730 0088 5546     		mov	r5, r10
 2731              	.LVL290:
 2732              	.L199:
 724:Core/Src/gui.c **** 				    {
 2733              		.loc 1 724 24 is_stmt 1 discriminator 2 view .LVU747
 724:Core/Src/gui.c **** 				    {
 2734              		.loc 1 724 25 is_stmt 0 discriminator 2 view .LVU748
 2735 008a 0137     		adds	r7, r7, #1
 2736              	.LVL291:
 724:Core/Src/gui.c **** 				    {
 2737              		.loc 1 724 25 discriminator 2 view .LVU749
 2738 008c FFB2     		uxtb	r7, r7
 2739              	.LVL292:
 2740              	.L194:
 724:Core/Src/gui.c **** 				    {
 2741              		.loc 1 724 17 is_stmt 1 discriminator 1 view .LVU750
 724:Core/Src/gui.c **** 				    {
 2742              		.loc 1 724 9 is_stmt 0 discriminator 1 view .LVU751
 2743 008e 17F0800F 		tst	r7, #128
 2744 0092 01D1     		bne	.L207
 726:Core/Src/gui.c **** 				    	{
 2745              		.loc 1 726 12 view .LVU752
 2746 0094 0024     		movs	r4, #0
 2747 0096 DAE7     		b	.L201
 2748              	.L207:
 2749 0098 DDF80CB0 		ldr	fp, [sp, #12]
 2750              	.LVL293:
 2751              	.L193:
 743:Core/Src/gui.c **** 								}
 744:Core/Src/gui.c **** 							}
 745:Core/Src/gui.c **** 						}
 746:Core/Src/gui.c **** 					}
 747:Core/Src/gui.c **** 					
 748:Core/Src/gui.c **** 					
 749:Core/Src/gui.c **** 				}				  	
ARM GAS  /tmp/ccWgdbjA.s 			page 71


 750:Core/Src/gui.c **** 				continue;  //≤È’“µΩ∂‘”¶µ„’Û◊÷ø‚¡¢º¥ÕÀ≥ˆ£¨∑¿÷π∂‡∏ˆ∫∫◊÷÷ÿ∏¥»°ƒ£¥¯¿¥”∞œÏ
 2752              		.loc 1 750 5 is_stmt 1 view .LVU753
 720:Core/Src/gui.c **** 			{
 2753              		.loc 1 720 19 view .LVU754
 720:Core/Src/gui.c **** 			{
 2754              		.loc 1 720 20 is_stmt 0 view .LVU755
 2755 009c 0BF1010B 		add	fp, fp, #1
 2756 00a0 1FFA8BFB 		uxth	fp, fp
 2757              	.LVL294:
 2758              	.L192:
 720:Core/Src/gui.c **** 			{
 2759              		.loc 1 720 11 is_stmt 1 discriminator 1 view .LVU756
 720:Core/Src/gui.c **** 			{
 2760              		.loc 1 720 2 is_stmt 0 discriminator 1 view .LVU757
 2761 00a4 BBF1030F 		cmp	fp, #3
 2762 00a8 23D8     		bhi	.L208
 722:Core/Src/gui.c **** 			  { 	LCD_SetWindows(x,y,x+32-1,y+32-1);
 2763              		.loc 1 722 6 is_stmt 1 view .LVU758
 722:Core/Src/gui.c **** 			  { 	LCD_SetWindows(x,y,x+32-1,y+32-1);
 2764              		.loc 1 722 27 is_stmt 0 view .LVU759
 2765 00aa 5E46     		mov	r6, fp
 2766 00ac 0BEB8B13 		add	r3, fp, fp, lsl #6
 2767 00b0 184A     		ldr	r2, .L209+4
 2768 00b2 12F81320 		ldrb	r2, [r2, r3, lsl #1]	@ zero_extendqisi2
 722:Core/Src/gui.c **** 			  { 	LCD_SetWindows(x,y,x+32-1,y+32-1);
 2769              		.loc 1 722 30 view .LVU760
 2770 00b6 0E9B     		ldr	r3, [sp, #56]
 2771 00b8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 722:Core/Src/gui.c **** 			  { 	LCD_SetWindows(x,y,x+32-1,y+32-1);
 2772              		.loc 1 722 9 view .LVU761
 2773 00ba 9A42     		cmp	r2, r3
 2774 00bc EED1     		bne	.L193
 722:Core/Src/gui.c **** 			  { 	LCD_SetWindows(x,y,x+32-1,y+32-1);
 2775              		.loc 1 722 56 discriminator 1 view .LVU762
 2776 00be 0BEB8B13 		add	r3, fp, fp, lsl #6
 2777 00c2 144A     		ldr	r2, .L209+4
 2778 00c4 02EB4303 		add	r3, r2, r3, lsl #1
 2779 00c8 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 722:Core/Src/gui.c **** 			  { 	LCD_SetWindows(x,y,x+32-1,y+32-1);
 2780              		.loc 1 722 59 discriminator 1 view .LVU763
 2781 00ca 0E9B     		ldr	r3, [sp, #56]
 2782 00cc 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 722:Core/Src/gui.c **** 			  { 	LCD_SetWindows(x,y,x+32-1,y+32-1);
 2783              		.loc 1 722 37 discriminator 1 view .LVU764
 2784 00ce 9A42     		cmp	r2, r3
 2785 00d0 E4D1     		bne	.L193
 723:Core/Src/gui.c **** 				    for(i=0;i<32*4;i++)
 2786              		.loc 1 723 9 is_stmt 1 view .LVU765
 2787 00d2 0199     		ldr	r1, [sp, #4]
 2788 00d4 0B46     		mov	r3, r1
 2789 00d6 1F33     		adds	r3, r3, #31
 2790 00d8 05F11F02 		add	r2, r5, #31
 2791 00dc 9BB2     		uxth	r3, r3
 2792 00de 92B2     		uxth	r2, r2
 2793 00e0 2846     		mov	r0, r5
 2794 00e2 FFF7FEFF 		bl	LCD_SetWindows
 2795              	.LVL295:
ARM GAS  /tmp/ccWgdbjA.s 			page 72


 724:Core/Src/gui.c **** 				    {
 2796              		.loc 1 724 9 view .LVU766
 724:Core/Src/gui.c **** 				    {
 2797              		.loc 1 724 14 is_stmt 0 view .LVU767
 2798 00e6 0027     		movs	r7, #0
 2799 00e8 CDF80CB0 		str	fp, [sp, #12]
 2800 00ec DDF808B0 		ldr	fp, [sp, #8]
 2801              	.LVL296:
 724:Core/Src/gui.c **** 				    {
 2802              		.loc 1 724 9 view .LVU768
 2803 00f0 CDE7     		b	.L194
 2804              	.LVL297:
 2805              	.L208:
 751:Core/Src/gui.c **** 			}
 752:Core/Src/gui.c **** 	
 753:Core/Src/gui.c **** 	LCD_SetWindows(0,0,lcddev.width-1,lcddev.height-1);//ª÷∏¥¥∞ø⁄Œ™»´∆¡  
 2806              		.loc 1 753 2 is_stmt 1 view .LVU769
 2807              		.loc 1 753 27 is_stmt 0 view .LVU770
 2808 00f2 094B     		ldr	r3, .L209+8
 2809 00f4 9A88     		ldrh	r2, [r3, #4]
 2810              		.loc 1 753 42 view .LVU771
 2811 00f6 DB88     		ldrh	r3, [r3, #6]
 2812              		.loc 1 753 2 view .LVU772
 2813 00f8 013B     		subs	r3, r3, #1
 2814 00fa 013A     		subs	r2, r2, #1
 2815 00fc 9BB2     		uxth	r3, r3
 2816 00fe 92B2     		uxth	r2, r2
 2817 0100 0021     		movs	r1, #0
 2818 0102 0846     		mov	r0, r1
 2819 0104 FFF7FEFF 		bl	LCD_SetWindows
 2820              	.LVL298:
 754:Core/Src/gui.c **** } 
 2821              		.loc 1 754 1 view .LVU773
 2822 0108 05B0     		add	sp, sp, #20
 2823              	.LCFI38:
 2824              		.cfi_def_cfa_offset 36
 2825              		@ sp needed
 2826 010a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2827              	.LVL299:
 2828              	.L210:
 2829              		.loc 1 754 1 view .LVU774
 2830 010e 00BF     		.align	2
 2831              	.L209:
 2832 0110 00000000 		.word	POINT_COLOR
 2833 0114 00000000 		.word	.LANCHOR4
 2834 0118 00000000 		.word	lcddev
 2835              		.cfi_endproc
 2836              	.LFE147:
 2838              		.section	.text.Show_Str,"ax",%progbits
 2839              		.align	1
 2840              		.global	Show_Str
 2841              		.syntax unified
 2842              		.thumb
 2843              		.thumb_func
 2844              		.fpu fpv4-sp-d16
 2846              	Show_Str:
 2847              	.LVL300:
ARM GAS  /tmp/ccWgdbjA.s 			page 73


 2848              	.LFB148:
 755:Core/Src/gui.c **** 
 756:Core/Src/gui.c **** /*****************************************************************************
 757:Core/Src/gui.c ****  * @name       :void Show_Str(u16 x, u16 y, u16 fc, u16 bc, u8 *str,u8 size,u8 mode)
 758:Core/Src/gui.c ****  * @date       :2018-08-09 
 759:Core/Src/gui.c ****  * @function   :Display Chinese and English strings
 760:Core/Src/gui.c ****  * @parameters :x:the bebinning x coordinate of the Chinese and English strings
 761:Core/Src/gui.c ****                 y:the bebinning y coordinate of the Chinese and English strings
 762:Core/Src/gui.c **** 								fc:the color value of Chinese and English strings
 763:Core/Src/gui.c **** 								bc:the background color of Chinese and English strings
 764:Core/Src/gui.c **** 								str:the start address of the Chinese and English strings
 765:Core/Src/gui.c **** 								size:the size of Chinese and English strings
 766:Core/Src/gui.c **** 								mode:0-no overlying,1-overlying
 767:Core/Src/gui.c ****  * @retvalue   :None
 768:Core/Src/gui.c **** ******************************************************************************/	   		   
 769:Core/Src/gui.c **** void Show_Str(u16 x, u16 y, u16 fc, u16 bc, u8 *str,u8 size,u8 mode)
 770:Core/Src/gui.c **** {					
 2849              		.loc 1 770 1 is_stmt 1 view -0
 2850              		.cfi_startproc
 2851              		@ args = 12, pretend = 0, frame = 8
 2852              		@ frame_needed = 0, uses_anonymous_args = 0
 2853              		.loc 1 770 1 is_stmt 0 view .LVU776
 2854 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2855              	.LCFI39:
 2856              		.cfi_def_cfa_offset 36
 2857              		.cfi_offset 4, -36
 2858              		.cfi_offset 5, -32
 2859              		.cfi_offset 6, -28
 2860              		.cfi_offset 7, -24
 2861              		.cfi_offset 8, -20
 2862              		.cfi_offset 9, -16
 2863              		.cfi_offset 10, -12
 2864              		.cfi_offset 11, -8
 2865              		.cfi_offset 14, -4
 2866 0004 87B0     		sub	sp, sp, #28
 2867              	.LCFI40:
 2868              		.cfi_def_cfa_offset 64
 2869 0006 0590     		str	r0, [sp, #20]
 2870 0008 8846     		mov	r8, r1
 2871 000a 9246     		mov	r10, r2
 2872 000c 0493     		str	r3, [sp, #16]
 2873 000e 109F     		ldr	r7, [sp, #64]
 2874 0010 9DF84460 		ldrb	r6, [sp, #68]	@ zero_extendqisi2
 2875 0014 9DF848B0 		ldrb	fp, [sp, #72]	@ zero_extendqisi2
 771:Core/Src/gui.c **** 	u16 x0=x;							  	  
 2876              		.loc 1 771 2 is_stmt 1 view .LVU777
 2877              	.LVL301:
 772:Core/Src/gui.c ****   	u8 bHz=0;     //◊÷∑˚ªÚ’ﬂ÷–Œƒ 
 2878              		.loc 1 772 4 view .LVU778
 773:Core/Src/gui.c ****     while(*str!=0)// ˝æ›Œ¥Ω· ¯
 2879              		.loc 1 773 5 view .LVU779
 2880              		.loc 1 773 10 is_stmt 0 view .LVU780
 2881 0018 0446     		mov	r4, r0
 772:Core/Src/gui.c ****   	u8 bHz=0;     //◊÷∑˚ªÚ’ﬂ÷–Œƒ 
 2882              		.loc 1 772 7 view .LVU781
 2883 001a 4FF00009 		mov	r9, #0
 2884              		.loc 1 773 10 view .LVU782
ARM GAS  /tmp/ccWgdbjA.s 			page 74


 2885 001e 2FE0     		b	.L212
 2886              	.LVL302:
 2887              	.L227:
 774:Core/Src/gui.c ****     { 
 775:Core/Src/gui.c ****         if(!bHz)
 776:Core/Src/gui.c ****         {
 777:Core/Src/gui.c **** 			if(x>(lcddev.width-size/2)||y>(lcddev.height-size)) 
 778:Core/Src/gui.c **** 			return; 
 779:Core/Src/gui.c **** 	        if(*str>0x80)bHz=1;//÷–Œƒ 
 780:Core/Src/gui.c **** 	        else              //◊÷∑˚
 781:Core/Src/gui.c **** 	        {          
 782:Core/Src/gui.c **** 		        if(*str==0x0D)//ªª––∑˚∫≈
 783:Core/Src/gui.c **** 		        {         
 784:Core/Src/gui.c **** 		            y+=size;
 2888              		.loc 1 784 15 is_stmt 1 view .LVU783
 2889              		.loc 1 784 16 is_stmt 0 view .LVU784
 2890 0020 B044     		add	r8, r8, r6
 2891              	.LVL303:
 2892              		.loc 1 784 16 view .LVU785
 2893 0022 1FFA88F8 		uxth	r8, r8
 2894              	.LVL304:
 785:Core/Src/gui.c **** 					x=x0;
 2895              		.loc 1 785 6 is_stmt 1 view .LVU786
 786:Core/Src/gui.c **** 		            str++; 
 2896              		.loc 1 786 15 view .LVU787
 2897              		.loc 1 786 18 is_stmt 0 view .LVU788
 2898 0026 0137     		adds	r7, r7, #1
 2899              	.LVL305:
 785:Core/Src/gui.c **** 					x=x0;
 2900              		.loc 1 785 7 view .LVU789
 2901 0028 059C     		ldr	r4, [sp, #20]
 2902              	.LVL306:
 2903              	.L217:
 787:Core/Src/gui.c **** 		        }  
 788:Core/Src/gui.c **** 		        else
 789:Core/Src/gui.c **** 				{
 790:Core/Src/gui.c **** 					if(size>16)//◊÷ø‚÷–√ª”–ºØ≥…12X24 16X32µƒ”¢Œƒ◊÷ÃÂ,”√8X16¥˙ÃÊ
 791:Core/Src/gui.c **** 					{  
 792:Core/Src/gui.c **** 					LCD_ShowChar(x,y,fc,bc,*str,16,mode);
 793:Core/Src/gui.c **** 					x+=8; //◊÷∑˚,Œ™»´◊÷µƒ“ª∞Î 
 794:Core/Src/gui.c **** 					}
 795:Core/Src/gui.c **** 					else
 796:Core/Src/gui.c **** 					{
 797:Core/Src/gui.c **** 					LCD_ShowChar(x,y,fc,bc,*str,size,mode);
 798:Core/Src/gui.c **** 					x+=size/2; //◊÷∑˚,Œ™»´◊÷µƒ“ª∞Î 
 799:Core/Src/gui.c **** 					}
 800:Core/Src/gui.c **** 				} 
 801:Core/Src/gui.c **** 				str++; 
 2904              		.loc 1 801 5 is_stmt 1 view .LVU790
 2905              		.loc 1 801 8 is_stmt 0 view .LVU791
 2906 002a 0137     		adds	r7, r7, #1
 2907              	.LVL307:
 2908              		.loc 1 801 8 view .LVU792
 2909 002c 28E0     		b	.L212
 2910              	.L218:
 797:Core/Src/gui.c **** 					x+=size/2; //◊÷∑˚,Œ™»´◊÷µƒ“ª∞Î 
 2911              		.loc 1 797 6 is_stmt 1 view .LVU793
ARM GAS  /tmp/ccWgdbjA.s 			page 75


 2912 002e CDF808B0 		str	fp, [sp, #8]
 2913 0032 0196     		str	r6, [sp, #4]
 2914 0034 0093     		str	r3, [sp]
 2915 0036 049B     		ldr	r3, [sp, #16]
 2916 0038 5246     		mov	r2, r10
 2917 003a 4146     		mov	r1, r8
 2918 003c 2046     		mov	r0, r4
 2919 003e FFF7FEFF 		bl	LCD_ShowChar
 2920              	.LVL308:
 798:Core/Src/gui.c **** 					}
 2921              		.loc 1 798 6 view .LVU794
 798:Core/Src/gui.c **** 					}
 2922              		.loc 1 798 7 is_stmt 0 view .LVU795
 2923 0042 2C44     		add	r4, r4, r5
 2924              	.LVL309:
 798:Core/Src/gui.c **** 					}
 2925              		.loc 1 798 7 view .LVU796
 2926 0044 A4B2     		uxth	r4, r4
 2927              	.LVL310:
 798:Core/Src/gui.c **** 					}
 2928              		.loc 1 798 7 view .LVU797
 2929 0046 F0E7     		b	.L217
 2930              	.L213:
 802:Core/Src/gui.c **** 		        
 803:Core/Src/gui.c **** 	        }
 804:Core/Src/gui.c ****         }else//÷–Œƒ 
 805:Core/Src/gui.c ****         {   
 806:Core/Src/gui.c **** 			if(x>(lcddev.width-size)||y>(lcddev.height-size)) 
 2931              		.loc 1 806 4 is_stmt 1 view .LVU798
 2932              		.loc 1 806 16 is_stmt 0 view .LVU799
 2933 0048 2D4B     		ldr	r3, .L228
 2934 004a 9B88     		ldrh	r3, [r3, #4]
 2935              		.loc 1 806 22 view .LVU800
 2936 004c 9B1B     		subs	r3, r3, r6
 2937              		.loc 1 806 6 view .LVU801
 2938 004e 9C42     		cmp	r4, r3
 2939 0050 53DC     		bgt	.L211
 2940              		.loc 1 806 39 discriminator 1 view .LVU802
 2941 0052 2B4B     		ldr	r3, .L228
 2942 0054 DB88     		ldrh	r3, [r3, #6]
 2943              		.loc 1 806 46 discriminator 1 view .LVU803
 2944 0056 9B1B     		subs	r3, r3, r6
 2945              		.loc 1 806 28 discriminator 1 view .LVU804
 2946 0058 9845     		cmp	r8, r3
 2947 005a 4EDC     		bgt	.L211
 807:Core/Src/gui.c **** 			return;  
 808:Core/Src/gui.c ****             bHz=0;//”–∫∫◊÷ø‚    
 2948              		.loc 1 808 13 is_stmt 1 view .LVU805
 2949              	.LVL311:
 809:Core/Src/gui.c **** 			if(size==32)
 2950              		.loc 1 809 4 view .LVU806
 2951              		.loc 1 809 6 is_stmt 0 view .LVU807
 2952 005c 202E     		cmp	r6, #32
 2953 005e 35D0     		beq	.L225
 810:Core/Src/gui.c **** 			GUI_DrawFont32(x,y,fc,bc,str,mode);	 	
 811:Core/Src/gui.c **** 			else if(size==24)
 2954              		.loc 1 811 9 is_stmt 1 view .LVU808
ARM GAS  /tmp/ccWgdbjA.s 			page 76


 2955              		.loc 1 811 11 is_stmt 0 view .LVU809
 2956 0060 182E     		cmp	r6, #24
 2957 0062 3DD0     		beq	.L226
 812:Core/Src/gui.c **** 			GUI_DrawFont24(x,y,fc,bc,str,mode);	
 813:Core/Src/gui.c **** 			else
 814:Core/Src/gui.c **** 			GUI_DrawFont16(x,y,fc,bc,str,mode);
 2958              		.loc 1 814 4 is_stmt 1 view .LVU810
 2959 0064 CDF804B0 		str	fp, [sp, #4]
 2960 0068 0097     		str	r7, [sp]
 2961 006a 049B     		ldr	r3, [sp, #16]
 2962 006c 5246     		mov	r2, r10
 2963 006e 4146     		mov	r1, r8
 2964 0070 2046     		mov	r0, r4
 2965 0072 FFF7FEFF 		bl	GUI_DrawFont16
 2966              	.LVL312:
 2967              	.L220:
 815:Core/Src/gui.c **** 				
 816:Core/Src/gui.c **** 	        str+=2; 
 2968              		.loc 1 816 10 view .LVU811
 2969              		.loc 1 816 13 is_stmt 0 view .LVU812
 2970 0076 0237     		adds	r7, r7, #2
 2971              	.LVL313:
 817:Core/Src/gui.c **** 	        x+=size;//œ¬“ª∏ˆ∫∫◊÷∆´“∆	    
 2972              		.loc 1 817 10 is_stmt 1 view .LVU813
 2973              		.loc 1 817 11 is_stmt 0 view .LVU814
 2974 0078 3444     		add	r4, r4, r6
 2975              	.LVL314:
 2976              		.loc 1 817 11 view .LVU815
 2977 007a A4B2     		uxth	r4, r4
 2978              	.LVL315:
 808:Core/Src/gui.c **** 			if(size==32)
 2979              		.loc 1 808 16 view .LVU816
 2980 007c 4FF00009 		mov	r9, #0
 2981              	.LVL316:
 2982              	.L212:
 773:Core/Src/gui.c ****     { 
 2983              		.loc 1 773 10 is_stmt 1 view .LVU817
 773:Core/Src/gui.c ****     { 
 2984              		.loc 1 773 11 is_stmt 0 view .LVU818
 2985 0080 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 773:Core/Src/gui.c ****     { 
 2986              		.loc 1 773 10 view .LVU819
 2987 0082 002B     		cmp	r3, #0
 2988 0084 39D0     		beq	.L211
 775:Core/Src/gui.c ****         {
 2989              		.loc 1 775 9 is_stmt 1 view .LVU820
 775:Core/Src/gui.c ****         {
 2990              		.loc 1 775 11 is_stmt 0 view .LVU821
 2991 0086 B9F1000F 		cmp	r9, #0
 2992 008a DDD1     		bne	.L213
 777:Core/Src/gui.c **** 			return; 
 2993              		.loc 1 777 4 is_stmt 1 view .LVU822
 777:Core/Src/gui.c **** 			return; 
 2994              		.loc 1 777 16 is_stmt 0 view .LVU823
 2995 008c 1C4A     		ldr	r2, .L228
 2996 008e 9288     		ldrh	r2, [r2, #4]
 777:Core/Src/gui.c **** 			return; 
ARM GAS  /tmp/ccWgdbjA.s 			page 77


 2997              		.loc 1 777 27 view .LVU824
 2998 0090 7508     		lsrs	r5, r6, #1
 777:Core/Src/gui.c **** 			return; 
 2999              		.loc 1 777 22 view .LVU825
 3000 0092 A2EB5602 		sub	r2, r2, r6, lsr #1
 777:Core/Src/gui.c **** 			return; 
 3001              		.loc 1 777 6 view .LVU826
 3002 0096 9442     		cmp	r4, r2
 3003 0098 2FDC     		bgt	.L211
 777:Core/Src/gui.c **** 			return; 
 3004              		.loc 1 777 41 discriminator 1 view .LVU827
 3005 009a 194A     		ldr	r2, .L228
 3006 009c D288     		ldrh	r2, [r2, #6]
 777:Core/Src/gui.c **** 			return; 
 3007              		.loc 1 777 48 discriminator 1 view .LVU828
 3008 009e 921B     		subs	r2, r2, r6
 777:Core/Src/gui.c **** 			return; 
 3009              		.loc 1 777 30 discriminator 1 view .LVU829
 3010 00a0 9045     		cmp	r8, r2
 3011 00a2 2ADC     		bgt	.L211
 779:Core/Src/gui.c **** 	        else              //◊÷∑˚
 3012              		.loc 1 779 10 is_stmt 1 view .LVU830
 779:Core/Src/gui.c **** 	        else              //◊÷∑˚
 3013              		.loc 1 779 12 is_stmt 0 view .LVU831
 3014 00a4 802B     		cmp	r3, #128
 3015 00a6 25D8     		bhi	.L223
 782:Core/Src/gui.c **** 		        {         
 3016              		.loc 1 782 11 is_stmt 1 view .LVU832
 782:Core/Src/gui.c **** 		        {         
 3017              		.loc 1 782 13 is_stmt 0 view .LVU833
 3018 00a8 0D2B     		cmp	r3, #13
 3019 00aa B9D0     		beq	.L227
 790:Core/Src/gui.c **** 					{  
 3020              		.loc 1 790 6 is_stmt 1 view .LVU834
 790:Core/Src/gui.c **** 					{  
 3021              		.loc 1 790 8 is_stmt 0 view .LVU835
 3022 00ac 102E     		cmp	r6, #16
 3023 00ae BED9     		bls	.L218
 792:Core/Src/gui.c **** 					x+=8; //◊÷∑˚,Œ™»´◊÷µƒ“ª∞Î 
 3024              		.loc 1 792 6 is_stmt 1 view .LVU836
 3025 00b0 CDF808B0 		str	fp, [sp, #8]
 3026 00b4 1022     		movs	r2, #16
 3027 00b6 0192     		str	r2, [sp, #4]
 3028 00b8 0093     		str	r3, [sp]
 3029 00ba 049B     		ldr	r3, [sp, #16]
 3030 00bc 5246     		mov	r2, r10
 3031 00be 4146     		mov	r1, r8
 3032 00c0 2046     		mov	r0, r4
 3033 00c2 FFF7FEFF 		bl	LCD_ShowChar
 3034              	.LVL317:
 793:Core/Src/gui.c **** 					}
 3035              		.loc 1 793 6 view .LVU837
 793:Core/Src/gui.c **** 					}
 3036              		.loc 1 793 7 is_stmt 0 view .LVU838
 3037 00c6 0834     		adds	r4, r4, #8
 3038              	.LVL318:
 793:Core/Src/gui.c **** 					}
ARM GAS  /tmp/ccWgdbjA.s 			page 78


 3039              		.loc 1 793 7 view .LVU839
 3040 00c8 A4B2     		uxth	r4, r4
 3041              	.LVL319:
 793:Core/Src/gui.c **** 					}
 3042              		.loc 1 793 7 view .LVU840
 3043 00ca AEE7     		b	.L217
 3044              	.LVL320:
 3045              	.L225:
 810:Core/Src/gui.c **** 			else if(size==24)
 3046              		.loc 1 810 4 is_stmt 1 view .LVU841
 3047 00cc CDF804B0 		str	fp, [sp, #4]
 3048 00d0 0097     		str	r7, [sp]
 3049 00d2 049B     		ldr	r3, [sp, #16]
 3050 00d4 5246     		mov	r2, r10
 3051 00d6 4146     		mov	r1, r8
 3052 00d8 2046     		mov	r0, r4
 3053 00da FFF7FEFF 		bl	GUI_DrawFont32
 3054              	.LVL321:
 3055 00de CAE7     		b	.L220
 3056              	.L226:
 812:Core/Src/gui.c **** 			else
 3057              		.loc 1 812 4 view .LVU842
 3058 00e0 CDF804B0 		str	fp, [sp, #4]
 3059 00e4 0097     		str	r7, [sp]
 3060 00e6 049B     		ldr	r3, [sp, #16]
 3061 00e8 5246     		mov	r2, r10
 3062 00ea 4146     		mov	r1, r8
 3063 00ec 2046     		mov	r0, r4
 3064 00ee FFF7FEFF 		bl	GUI_DrawFont24
 3065              	.LVL322:
 3066 00f2 C0E7     		b	.L220
 3067              	.LVL323:
 3068              	.L223:
 779:Core/Src/gui.c **** 	        else              //◊÷∑˚
 3069              		.loc 1 779 26 is_stmt 0 view .LVU843
 3070 00f4 4FF00109 		mov	r9, #1
 3071              	.LVL324:
 779:Core/Src/gui.c **** 	        else              //◊÷∑˚
 3072              		.loc 1 779 26 view .LVU844
 3073 00f8 C2E7     		b	.L212
 3074              	.LVL325:
 3075              	.L211:
 818:Core/Src/gui.c ****         }						 
 819:Core/Src/gui.c ****     }   
 820:Core/Src/gui.c **** }
 3076              		.loc 1 820 1 view .LVU845
 3077 00fa 07B0     		add	sp, sp, #28
 3078              	.LCFI41:
 3079              		.cfi_def_cfa_offset 36
 3080              		@ sp needed
 3081 00fc BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3082              	.LVL326:
 3083              	.L229:
 3084              		.loc 1 820 1 view .LVU846
 3085              		.align	2
 3086              	.L228:
 3087 0100 00000000 		.word	lcddev
ARM GAS  /tmp/ccWgdbjA.s 			page 79


 3088              		.cfi_endproc
 3089              	.LFE148:
 3091              		.section	.text.Gui_StrCenter,"ax",%progbits
 3092              		.align	1
 3093              		.global	Gui_StrCenter
 3094              		.syntax unified
 3095              		.thumb
 3096              		.thumb_func
 3097              		.fpu fpv4-sp-d16
 3099              	Gui_StrCenter:
 3100              	.LVL327:
 3101              	.LFB149:
 821:Core/Src/gui.c **** 
 822:Core/Src/gui.c **** /*****************************************************************************
 823:Core/Src/gui.c ****  * @name       :void Gui_StrCenter(u16 x, u16 y, u16 fc, u16 bc, u8 *str,u8 size,u8 mode)
 824:Core/Src/gui.c ****  * @date       :2018-08-09 
 825:Core/Src/gui.c ****  * @function   :Centered display of English and Chinese strings
 826:Core/Src/gui.c ****  * @parameters :x:the bebinning x coordinate of the Chinese and English strings
 827:Core/Src/gui.c ****                 y:the bebinning y coordinate of the Chinese and English strings
 828:Core/Src/gui.c **** 								fc:the color value of Chinese and English strings
 829:Core/Src/gui.c **** 								bc:the background color of Chinese and English strings
 830:Core/Src/gui.c **** 								str:the start address of the Chinese and English strings
 831:Core/Src/gui.c **** 								size:the size of Chinese and English strings
 832:Core/Src/gui.c **** 								mode:0-no overlying,1-overlying
 833:Core/Src/gui.c ****  * @retvalue   :None
 834:Core/Src/gui.c **** ******************************************************************************/ 
 835:Core/Src/gui.c **** void Gui_StrCenter(u16 x, u16 y, u16 fc, u16 bc, u8 *str,u8 size,u8 mode)
 836:Core/Src/gui.c **** {
 3102              		.loc 1 836 1 is_stmt 1 view -0
 3103              		.cfi_startproc
 3104              		@ args = 12, pretend = 0, frame = 0
 3105              		@ frame_needed = 0, uses_anonymous_args = 0
 3106              		.loc 1 836 1 is_stmt 0 view .LVU848
 3107 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 3108              	.LCFI42:
 3109              		.cfi_def_cfa_offset 24
 3110              		.cfi_offset 4, -24
 3111              		.cfi_offset 5, -20
 3112              		.cfi_offset 6, -16
 3113              		.cfi_offset 7, -12
 3114              		.cfi_offset 8, -8
 3115              		.cfi_offset 14, -4
 3116 0004 84B0     		sub	sp, sp, #16
 3117              	.LCFI43:
 3118              		.cfi_def_cfa_offset 40
 3119 0006 0D46     		mov	r5, r1
 3120 0008 1646     		mov	r6, r2
 3121 000a 1F46     		mov	r7, r3
 3122 000c DDF82880 		ldr	r8, [sp, #40]
 837:Core/Src/gui.c **** 	u16 len=strlen((const char *)str);
 3123              		.loc 1 837 2 is_stmt 1 view .LVU849
 3124              		.loc 1 837 10 is_stmt 0 view .LVU850
 3125 0010 4046     		mov	r0, r8
 3126              	.LVL328:
 3127              		.loc 1 837 10 view .LVU851
 3128 0012 FFF7FEFF 		bl	strlen
 3129              	.LVL329:
ARM GAS  /tmp/ccWgdbjA.s 			page 80


 838:Core/Src/gui.c **** 	u16 x1=(lcddev.width-len*8)/2;
 3130              		.loc 1 838 2 is_stmt 1 view .LVU852
 3131              		.loc 1 838 16 is_stmt 0 view .LVU853
 3132 0016 0C4B     		ldr	r3, .L232
 3133 0018 9C88     		ldrh	r4, [r3, #4]
 3134              		.loc 1 838 26 view .LVU854
 3135 001a 80B2     		uxth	r0, r0
 3136              		.loc 1 838 22 view .LVU855
 3137 001c A4EBC000 		sub	r0, r4, r0, lsl #3
 3138              	.LVL330:
 3139              		.loc 1 838 29 view .LVU856
 3140 0020 00EBD070 		add	r0, r0, r0, lsr #31
 3141              	.LVL331:
 839:Core/Src/gui.c **** 	Show_Str(x1,y,fc,bc,str,size,mode);
 3142              		.loc 1 839 2 is_stmt 1 view .LVU857
 3143 0024 9DF83030 		ldrb	r3, [sp, #48]	@ zero_extendqisi2
 3144 0028 0293     		str	r3, [sp, #8]
 3145 002a 9DF82C30 		ldrb	r3, [sp, #44]	@ zero_extendqisi2
 3146 002e 0193     		str	r3, [sp, #4]
 3147 0030 CDF80080 		str	r8, [sp]
 3148 0034 3B46     		mov	r3, r7
 3149 0036 3246     		mov	r2, r6
 3150 0038 2946     		mov	r1, r5
 3151 003a C0F34F00 		ubfx	r0, r0, #1, #16
 3152              	.LVL332:
 3153              		.loc 1 839 2 is_stmt 0 view .LVU858
 3154 003e FFF7FEFF 		bl	Show_Str
 3155              	.LVL333:
 840:Core/Src/gui.c **** } 
 3156              		.loc 1 840 1 view .LVU859
 3157 0042 04B0     		add	sp, sp, #16
 3158              	.LCFI44:
 3159              		.cfi_def_cfa_offset 24
 3160              		@ sp needed
 3161 0044 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3162              	.LVL334:
 3163              	.L233:
 3164              		.loc 1 840 1 view .LVU860
 3165              		.align	2
 3166              	.L232:
 3167 0048 00000000 		.word	lcddev
 3168              		.cfi_endproc
 3169              	.LFE149:
 3171              		.section	.text.Gui_Drawbmp16,"ax",%progbits
 3172              		.align	1
 3173              		.global	Gui_Drawbmp16
 3174              		.syntax unified
 3175              		.thumb
 3176              		.thumb_func
 3177              		.fpu fpv4-sp-d16
 3179              	Gui_Drawbmp16:
 3180              	.LVL335:
 3181              	.LFB150:
 841:Core/Src/gui.c ****  
 842:Core/Src/gui.c **** /*****************************************************************************
 843:Core/Src/gui.c ****  * @name       :void Gui_Drawbmp16(u16 x,u16 y,u16 pwidth, u16 pheight, const unsigned char *p) //œ
 844:Core/Src/gui.c ****  * @date       :2018-08-09 
ARM GAS  /tmp/ccWgdbjA.s 			page 81


 845:Core/Src/gui.c ****  * @function   :Display a 16-bit BMP image
 846:Core/Src/gui.c ****  * @parameters :x:the bebinning x coordinate of the BMP image
 847:Core/Src/gui.c ****                 y:the bebinning y coordinate of the BMP image
 848:Core/Src/gui.c **** 								p:the start address of image array
 849:Core/Src/gui.c ****  * @retvalue   :None
 850:Core/Src/gui.c **** ******************************************************************************/ 
 851:Core/Src/gui.c **** void Gui_Drawbmp16(u16 x,u16 y,u16 pwidth, u16 pheight, const unsigned char *p) //œ‘ æÕº∆¨
 852:Core/Src/gui.c **** {
 3182              		.loc 1 852 1 is_stmt 1 view -0
 3183              		.cfi_startproc
 3184              		@ args = 4, pretend = 0, frame = 0
 3185              		@ frame_needed = 0, uses_anonymous_args = 0
 3186              		.loc 1 852 1 is_stmt 0 view .LVU862
 3187 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3188              	.LCFI45:
 3189              		.cfi_def_cfa_offset 24
 3190              		.cfi_offset 3, -24
 3191              		.cfi_offset 4, -20
 3192              		.cfi_offset 5, -16
 3193              		.cfi_offset 6, -12
 3194              		.cfi_offset 7, -8
 3195              		.cfi_offset 14, -4
 3196 0002 1746     		mov	r7, r2
 3197 0004 1E46     		mov	r6, r3
 3198 0006 069D     		ldr	r5, [sp, #24]
 853:Core/Src/gui.c ****   	int i; 
 3199              		.loc 1 853 4 is_stmt 1 view .LVU863
 854:Core/Src/gui.c **** 	unsigned char picH,picL; 
 3200              		.loc 1 854 2 view .LVU864
 855:Core/Src/gui.c **** 	LCD_SetWindows(x,y,x+pwidth-1,y+pheight-1);//¥∞ø⁄…Ë÷√
 3201              		.loc 1 855 2 view .LVU865
 3202              		.loc 1 855 22 is_stmt 0 view .LVU866
 3203 0008 8218     		adds	r2, r0, r2
 3204              	.LVL336:
 3205              		.loc 1 855 22 view .LVU867
 3206 000a 92B2     		uxth	r2, r2
 3207              		.loc 1 855 33 view .LVU868
 3208 000c CB18     		adds	r3, r1, r3
 3209              	.LVL337:
 3210              		.loc 1 855 33 view .LVU869
 3211 000e 9BB2     		uxth	r3, r3
 3212              		.loc 1 855 2 view .LVU870
 3213 0010 013B     		subs	r3, r3, #1
 3214 0012 013A     		subs	r2, r2, #1
 3215 0014 9BB2     		uxth	r3, r3
 3216 0016 92B2     		uxth	r2, r2
 3217 0018 FFF7FEFF 		bl	LCD_SetWindows
 3218              	.LVL338:
 856:Core/Src/gui.c ****     for(i=0;i<pwidth*pheight;i++)
 3219              		.loc 1 856 5 is_stmt 1 view .LVU871
 3220              		.loc 1 856 10 is_stmt 0 view .LVU872
 3221 001c 0024     		movs	r4, #0
 3222              	.LVL339:
 3223              	.L235:
 3224              		.loc 1 856 13 is_stmt 1 discriminator 1 view .LVU873
 3225              		.loc 1 856 21 is_stmt 0 discriminator 1 view .LVU874
 3226 001e 06FB07F1 		mul	r1, r6, r7
ARM GAS  /tmp/ccWgdbjA.s 			page 82


 3227              		.loc 1 856 5 discriminator 1 view .LVU875
 3228 0022 A142     		cmp	r1, r4
 3229 0024 0ADD     		ble	.L238
 857:Core/Src/gui.c **** 	{	
 858:Core/Src/gui.c **** 	 	picL=*(p+i*2);	// ˝æ›µÕŒª‘⁄«∞
 3230              		.loc 1 858 4 is_stmt 1 discriminator 3 view .LVU876
 3231              		.loc 1 858 14 is_stmt 0 discriminator 3 view .LVU877
 3232 0026 6100     		lsls	r1, r4, #1
 3233              		.loc 1 858 8 discriminator 3 view .LVU878
 3234 0028 15F81400 		ldrb	r0, [r5, r4, lsl #1]	@ zero_extendqisi2
 3235              	.LVL340:
 859:Core/Src/gui.c **** 		picH=*(p+i*2+1);				
 3236              		.loc 1 859 3 is_stmt 1 discriminator 3 view .LVU879
 3237              		.loc 1 859 15 is_stmt 0 discriminator 3 view .LVU880
 3238 002c 0131     		adds	r1, r1, #1
 3239              		.loc 1 859 7 discriminator 3 view .LVU881
 3240 002e 6B5C     		ldrb	r3, [r5, r1]	@ zero_extendqisi2
 3241              	.LVL341:
 860:Core/Src/gui.c **** 		Lcd_WriteData_16Bit(picH<<8|picL);  						
 3242              		.loc 1 860 3 is_stmt 1 discriminator 3 view .LVU882
 3243 0030 40EA0320 		orr	r0, r0, r3, lsl #8
 3244              	.LVL342:
 3245              		.loc 1 860 3 is_stmt 0 discriminator 3 view .LVU883
 3246 0034 FFF7FEFF 		bl	Lcd_WriteData_16Bit
 3247              	.LVL343:
 856:Core/Src/gui.c **** 	{	
 3248              		.loc 1 856 30 is_stmt 1 discriminator 3 view .LVU884
 856:Core/Src/gui.c **** 	{	
 3249              		.loc 1 856 31 is_stmt 0 discriminator 3 view .LVU885
 3250 0038 0134     		adds	r4, r4, #1
 3251              	.LVL344:
 856:Core/Src/gui.c **** 	{	
 3252              		.loc 1 856 31 discriminator 3 view .LVU886
 3253 003a F0E7     		b	.L235
 3254              	.L238:
 861:Core/Src/gui.c **** 	}	
 862:Core/Src/gui.c **** 	LCD_SetWindows(0,0,lcddev.width-1,lcddev.height-1);//ª÷∏¥œ‘ æ¥∞ø⁄Œ™»´∆¡	
 3255              		.loc 1 862 2 is_stmt 1 view .LVU887
 3256              		.loc 1 862 27 is_stmt 0 view .LVU888
 3257 003c 054B     		ldr	r3, .L239
 3258 003e 9A88     		ldrh	r2, [r3, #4]
 3259              		.loc 1 862 42 view .LVU889
 3260 0040 DB88     		ldrh	r3, [r3, #6]
 3261              		.loc 1 862 2 view .LVU890
 3262 0042 013B     		subs	r3, r3, #1
 3263 0044 013A     		subs	r2, r2, #1
 3264 0046 9BB2     		uxth	r3, r3
 3265 0048 92B2     		uxth	r2, r2
 3266 004a 0021     		movs	r1, #0
 3267 004c 0846     		mov	r0, r1
 3268 004e FFF7FEFF 		bl	LCD_SetWindows
 3269              	.LVL345:
 863:Core/Src/gui.c **** }
 3270              		.loc 1 863 1 view .LVU891
 3271 0052 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3272              	.LVL346:
 3273              	.L240:
ARM GAS  /tmp/ccWgdbjA.s 			page 83


 3274              		.loc 1 863 1 view .LVU892
 3275              		.align	2
 3276              	.L239:
 3277 0054 00000000 		.word	lcddev
 3278              		.cfi_endproc
 3279              	.LFE150:
 3281              		.section	.text.LCD_Draw9Point,"ax",%progbits
 3282              		.align	1
 3283              		.global	LCD_Draw9Point
 3284              		.syntax unified
 3285              		.thumb
 3286              		.thumb_func
 3287              		.fpu fpv4-sp-d16
 3289              	LCD_Draw9Point:
 3290              	.LVL347:
 3291              	.LFB151:
 864:Core/Src/gui.c **** 
 865:Core/Src/gui.c **** /*******************************************************************
 866:Core/Src/gui.c ****  * @name       :void LCD_Draw9Point(uint16_t x, uint16_t y, uint16_t color)
 867:Core/Src/gui.c ****  * @date       :2018-12-29 
 868:Core/Src/gui.c ****  * @function   :Draw a point with a radius of 9 pixels in LCD screen
 869:Core/Src/gui.c ****  * @parameters :x:the x coordinate of the point
 870:Core/Src/gui.c ****                 y:the y coordinate of the point
 871:Core/Src/gui.c **** 								color:the color value of the point
 872:Core/Src/gui.c ****  * @retvalue   :None
 873:Core/Src/gui.c **** ********************************************************************/
 874:Core/Src/gui.c **** void LCD_Draw9Point(uint16_t x, uint16_t y, uint16_t color)
 875:Core/Src/gui.c **** {
 3292              		.loc 1 875 1 is_stmt 1 view -0
 3293              		.cfi_startproc
 3294              		@ args = 0, pretend = 0, frame = 0
 3295              		@ frame_needed = 0, uses_anonymous_args = 0
 3296              		.loc 1 875 1 is_stmt 0 view .LVU894
 3297 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3298              	.LCFI46:
 3299              		.cfi_def_cfa_offset 36
 3300              		.cfi_offset 4, -36
 3301              		.cfi_offset 5, -32
 3302              		.cfi_offset 6, -28
 3303              		.cfi_offset 7, -24
 3304              		.cfi_offset 8, -20
 3305              		.cfi_offset 9, -16
 3306              		.cfi_offset 10, -12
 3307              		.cfi_offset 11, -8
 3308              		.cfi_offset 14, -4
 3309 0004 83B0     		sub	sp, sp, #12
 3310              	.LCFI47:
 3311              		.cfi_def_cfa_offset 48
 3312 0006 0546     		mov	r5, r0
 3313 0008 0C46     		mov	r4, r1
 3314 000a 9046     		mov	r8, r2
 876:Core/Src/gui.c **** 	POINT_COLOR=color;
 3315              		.loc 1 876 2 is_stmt 1 view .LVU895
 3316              		.loc 1 876 13 is_stmt 0 view .LVU896
 3317 000c 274E     		ldr	r6, .L243
 3318 000e 3280     		strh	r2, [r6]	@ movhi
 877:Core/Src/gui.c **** 	LCD_DrawPoint(x-1,y-4);
ARM GAS  /tmp/ccWgdbjA.s 			page 84


 3319              		.loc 1 877 2 is_stmt 1 view .LVU897
 3320 0010 00F1FF39 		add	r9, r0, #-1
 3321 0014 1FFA89F9 		uxth	r9, r9
 3322 0018 0439     		subs	r1, r1, #4
 3323              	.LVL348:
 3324              		.loc 1 877 2 is_stmt 0 view .LVU898
 3325 001a 89B2     		uxth	r1, r1
 3326 001c 4846     		mov	r0, r9
 3327              	.LVL349:
 3328              		.loc 1 877 2 view .LVU899
 3329 001e FFF7FEFF 		bl	LCD_DrawPoint
 3330              	.LVL350:
 878:Core/Src/gui.c **** 	LCD_WR_DATA(POINT_COLOR);
 3331              		.loc 1 878 2 is_stmt 1 view .LVU900
 3332 0022 3088     		ldrh	r0, [r6]
 3333 0024 FFF7FEFF 		bl	LCD_WR_DATA
 3334              	.LVL351:
 879:Core/Src/gui.c **** 	LCD_WR_DATA(POINT_COLOR);
 3335              		.loc 1 879 2 view .LVU901
 3336 0028 3088     		ldrh	r0, [r6]
 3337 002a FFF7FEFF 		bl	LCD_WR_DATA
 3338              	.LVL352:
 880:Core/Src/gui.c **** 	LCD_DrawPoint(x-4,y-1);
 3339              		.loc 1 880 2 view .LVU902
 3340 002e 2F1F     		subs	r7, r5, #4
 3341 0030 BFB2     		uxth	r7, r7
 3342 0032 04F1FF3B 		add	fp, r4, #-1
 3343 0036 1FFA8BFB 		uxth	fp, fp
 3344 003a 5946     		mov	r1, fp
 3345 003c 3846     		mov	r0, r7
 3346 003e FFF7FEFF 		bl	LCD_DrawPoint
 3347              	.LVL353:
 881:Core/Src/gui.c **** 	LCD_DrawPoint(x-4,y);
 3348              		.loc 1 881 2 view .LVU903
 3349 0042 2146     		mov	r1, r4
 3350 0044 3846     		mov	r0, r7
 3351 0046 FFF7FEFF 		bl	LCD_DrawPoint
 3352              	.LVL354:
 882:Core/Src/gui.c **** 	LCD_DrawPoint(x-4,y+1);
 3353              		.loc 1 882 2 view .LVU904
 3354 004a 04F1010A 		add	r10, r4, #1
 3355 004e 1FFA8AFA 		uxth	r10, r10
 3356 0052 5146     		mov	r1, r10
 3357 0054 3846     		mov	r0, r7
 3358 0056 FFF7FEFF 		bl	LCD_DrawPoint
 3359              	.LVL355:
 883:Core/Src/gui.c **** 	LCD_DrawPoint(x+4,y-1);
 3360              		.loc 1 883 2 view .LVU905
 3361 005a 2F1D     		adds	r7, r5, #4
 3362 005c BFB2     		uxth	r7, r7
 3363 005e 5946     		mov	r1, fp
 3364 0060 3846     		mov	r0, r7
 3365 0062 FFF7FEFF 		bl	LCD_DrawPoint
 3366              	.LVL356:
 884:Core/Src/gui.c **** 	LCD_DrawPoint(x+4,y);
 3367              		.loc 1 884 2 view .LVU906
 3368 0066 2146     		mov	r1, r4
ARM GAS  /tmp/ccWgdbjA.s 			page 85


 3369 0068 3846     		mov	r0, r7
 3370 006a FFF7FEFF 		bl	LCD_DrawPoint
 3371              	.LVL357:
 885:Core/Src/gui.c **** 	LCD_DrawPoint(x+4,y+1);
 3372              		.loc 1 885 2 view .LVU907
 3373 006e 5146     		mov	r1, r10
 3374 0070 3846     		mov	r0, r7
 3375 0072 FFF7FEFF 		bl	LCD_DrawPoint
 3376              	.LVL358:
 886:Core/Src/gui.c **** 	LCD_DrawPoint(x-1,y+4);
 3377              		.loc 1 886 2 view .LVU908
 3378 0076 211D     		adds	r1, r4, #4
 3379 0078 89B2     		uxth	r1, r1
 3380 007a 4846     		mov	r0, r9
 3381 007c FFF7FEFF 		bl	LCD_DrawPoint
 3382              	.LVL359:
 887:Core/Src/gui.c **** 	LCD_WR_DATA(POINT_COLOR);
 3383              		.loc 1 887 2 view .LVU909
 3384 0080 3088     		ldrh	r0, [r6]
 3385 0082 FFF7FEFF 		bl	LCD_WR_DATA
 3386              	.LVL360:
 888:Core/Src/gui.c **** 	LCD_WR_DATA(POINT_COLOR);
 3387              		.loc 1 888 2 view .LVU910
 3388 0086 3088     		ldrh	r0, [r6]
 3389 0088 FFF7FEFF 		bl	LCD_WR_DATA
 3390              	.LVL361:
 889:Core/Src/gui.c **** 	LCD_Fill(x-3,y-3,x+3,y+3, color);
 3391              		.loc 1 889 2 view .LVU911
 3392 008c E31C     		adds	r3, r4, #3
 3393 008e EA1C     		adds	r2, r5, #3
 3394 0090 E11E     		subs	r1, r4, #3
 3395 0092 E81E     		subs	r0, r5, #3
 3396 0094 CDF80080 		str	r8, [sp]
 3397 0098 9BB2     		uxth	r3, r3
 3398 009a 92B2     		uxth	r2, r2
 3399 009c 89B2     		uxth	r1, r1
 3400 009e 80B2     		uxth	r0, r0
 3401 00a0 FFF7FEFF 		bl	LCD_Fill
 3402              	.LVL362:
 890:Core/Src/gui.c **** }
 3403              		.loc 1 890 1 is_stmt 0 view .LVU912
 3404 00a4 03B0     		add	sp, sp, #12
 3405              	.LCFI48:
 3406              		.cfi_def_cfa_offset 36
 3407              		@ sp needed
 3408 00a6 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3409              	.L244:
 3410 00aa 00BF     		.align	2
 3411              	.L243:
 3412 00ac 00000000 		.word	POINT_COLOR
 3413              		.cfi_endproc
 3414              	.LFE151:
 3416              		.section	.text.Draw_TextBox,"ax",%progbits
 3417              		.align	1
 3418              		.global	Draw_TextBox
 3419              		.syntax unified
 3420              		.thumb
ARM GAS  /tmp/ccWgdbjA.s 			page 86


 3421              		.thumb_func
 3422              		.fpu fpv4-sp-d16
 3424              	Draw_TextBox:
 3425              	.LVL363:
 3426              	.LFB152:
 891:Core/Src/gui.c **** 
 892:Core/Src/gui.c **** /*******************************************************************
 893:Core/Src/gui.c ****  * @name       :void Draw_TextBox(uint16_t xstart, uint16_t ystart, uint16_t xend, uint16_t yend)
 894:Core/Src/gui.c ****  * @date       :2018-12-29 
 895:Core/Src/gui.c ****  * @function   :Draw a text input box
 896:Core/Src/gui.c ****  * @parameters :xstart:the bebinning x coordinate of the specified area
 897:Core/Src/gui.c ****                 ystart:the bebinning y coordinate of the specified area
 898:Core/Src/gui.c **** 								xend:the ending x coordinate of the specified area
 899:Core/Src/gui.c **** 								yend:the ending y coordinate of the specified area
 900:Core/Src/gui.c ****  * @retvalue   :None
 901:Core/Src/gui.c **** ********************************************************************/
 902:Core/Src/gui.c **** void Draw_TextBox(uint16_t xstart, uint16_t ystart, uint16_t xend, uint16_t yend)
 903:Core/Src/gui.c **** {
 3427              		.loc 1 903 1 is_stmt 1 view -0
 3428              		.cfi_startproc
 3429              		@ args = 0, pretend = 0, frame = 8
 3430              		@ frame_needed = 0, uses_anonymous_args = 0
 3431              		.loc 1 903 1 is_stmt 0 view .LVU914
 3432 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3433              	.LCFI49:
 3434              		.cfi_def_cfa_offset 36
 3435              		.cfi_offset 4, -36
 3436              		.cfi_offset 5, -32
 3437              		.cfi_offset 6, -28
 3438              		.cfi_offset 7, -24
 3439              		.cfi_offset 8, -20
 3440              		.cfi_offset 9, -16
 3441              		.cfi_offset 10, -12
 3442              		.cfi_offset 11, -8
 3443              		.cfi_offset 14, -4
 3444 0004 85B0     		sub	sp, sp, #20
 3445              	.LCFI50:
 3446              		.cfi_def_cfa_offset 56
 3447 0006 8246     		mov	r10, r0
 3448 0008 0E46     		mov	r6, r1
 3449 000a 1546     		mov	r5, r2
 3450 000c 1C46     		mov	r4, r3
 904:Core/Src/gui.c **** 	POINT_COLOR=DARKGRAY;
 3451              		.loc 1 904 2 is_stmt 1 view .LVU915
 3452              		.loc 1 904 13 is_stmt 0 view .LVU916
 3453 000e DFF8BCB0 		ldr	fp, .L247
 3454 0012 48F21043 		movw	r3, #33808
 3455              	.LVL364:
 3456              		.loc 1 904 13 view .LVU917
 3457 0016 ABF80030 		strh	r3, [fp]	@ movhi
 905:Core/Src/gui.c **** 	LCD_DrawLine(xstart, ystart, xend, ystart);//ª≠∂•≤ø∫·œﬂ1
 3458              		.loc 1 905 2 is_stmt 1 view .LVU918
 3459 001a 0B46     		mov	r3, r1
 3460 001c FFF7FEFF 		bl	LCD_DrawLine
 3461              	.LVL365:
 906:Core/Src/gui.c **** 	LCD_DrawLine(xstart, ystart+1, xstart, yend);//ª≠◊Û√Ê ˙œﬂ1
 3462              		.loc 1 906 2 view .LVU919
ARM GAS  /tmp/ccWgdbjA.s 			page 87


 3463 0020 0296     		str	r6, [sp, #8]
 3464 0022 771C     		adds	r7, r6, #1
 3465 0024 BFB2     		uxth	r7, r7
 3466 0026 2346     		mov	r3, r4
 3467 0028 5246     		mov	r2, r10
 3468 002a 3946     		mov	r1, r7
 3469 002c 5046     		mov	r0, r10
 3470 002e FFF7FEFF 		bl	LCD_DrawLine
 3471              	.LVL366:
 907:Core/Src/gui.c **** 	POINT_COLOR=BLACK;
 3472              		.loc 1 907 2 view .LVU920
 3473              		.loc 1 907 13 is_stmt 0 view .LVU921
 3474 0032 0023     		movs	r3, #0
 3475 0034 ABF80030 		strh	r3, [fp]	@ movhi
 908:Core/Src/gui.c **** 	LCD_DrawLine(xstart+1, ystart+1, xend-1, ystart+1);//ª≠∂•≤ø∫·œﬂ2
 3476              		.loc 1 908 2 is_stmt 1 view .LVU922
 3477 0038 0AF10109 		add	r9, r10, #1
 3478 003c 1FFA89F9 		uxth	r9, r9
 3479 0040 6E1E     		subs	r6, r5, #1
 3480 0042 B6B2     		uxth	r6, r6
 3481 0044 3B46     		mov	r3, r7
 3482 0046 3246     		mov	r2, r6
 3483 0048 3946     		mov	r1, r7
 3484 004a 4846     		mov	r0, r9
 3485 004c FFF7FEFF 		bl	LCD_DrawLine
 3486              	.LVL367:
 909:Core/Src/gui.c **** 	LCD_DrawLine(xstart+1, ystart+2, xstart+1, yend-1);//ª≠◊Û√Ê ˙œﬂ2
 3487              		.loc 1 909 2 view .LVU923
 3488 0050 029B     		ldr	r3, [sp, #8]
 3489 0052 0233     		adds	r3, r3, #2
 3490 0054 98B2     		uxth	r0, r3
 3491 0056 04F1FF38 		add	r8, r4, #-1
 3492 005a 1FFA88F8 		uxth	r8, r8
 3493 005e 4346     		mov	r3, r8
 3494 0060 4A46     		mov	r2, r9
 3495 0062 0390     		str	r0, [sp, #12]
 3496 0064 0146     		mov	r1, r0
 3497 0066 4846     		mov	r0, r9
 3498 0068 FFF7FEFF 		bl	LCD_DrawLine
 3499              	.LVL368:
 910:Core/Src/gui.c **** 	POINT_COLOR=WHITE;
 3500              		.loc 1 910 2 view .LVU924
 3501              		.loc 1 910 13 is_stmt 0 view .LVU925
 3502 006c 4FF0FF32 		mov	r2, #-1	@ movhi
 3503 0070 ABF80020 		strh	r2, [fp]	@ movhi
 911:Core/Src/gui.c **** 	LCD_DrawLine(xstart, yend, xend, yend);//ª≠µ◊≤ø∫·œﬂ1
 3504              		.loc 1 911 2 is_stmt 1 view .LVU926
 3505 0074 2346     		mov	r3, r4
 3506 0076 2A46     		mov	r2, r5
 3507 0078 2146     		mov	r1, r4
 3508 007a 5046     		mov	r0, r10
 3509 007c FFF7FEFF 		bl	LCD_DrawLine
 3510              	.LVL369:
 912:Core/Src/gui.c **** 	LCD_DrawLine(xend, ystart, xend, yend);//ª≠”“√Ê ˙œﬂ1
 3511              		.loc 1 912 2 view .LVU927
 3512 0080 2346     		mov	r3, r4
 3513 0082 2A46     		mov	r2, r5
ARM GAS  /tmp/ccWgdbjA.s 			page 88


 3514 0084 0299     		ldr	r1, [sp, #8]
 3515 0086 2846     		mov	r0, r5
 3516 0088 FFF7FEFF 		bl	LCD_DrawLine
 3517              	.LVL370:
 913:Core/Src/gui.c **** 	POINT_COLOR=LGRAY;
 3518              		.loc 1 913 2 view .LVU928
 3519              		.loc 1 913 13 is_stmt 0 view .LVU929
 3520 008c 4CF21863 		movw	r3, #50712
 3521 0090 ABF80030 		strh	r3, [fp]	@ movhi
 914:Core/Src/gui.c **** 	LCD_DrawLine(xstart+1, yend-1, xend-1, yend-1);//ª≠µ◊≤ø∫·œﬂ2
 3522              		.loc 1 914 2 is_stmt 1 view .LVU930
 3523 0094 4346     		mov	r3, r8
 3524 0096 3246     		mov	r2, r6
 3525 0098 4146     		mov	r1, r8
 3526 009a 4846     		mov	r0, r9
 3527 009c FFF7FEFF 		bl	LCD_DrawLine
 3528              	.LVL371:
 915:Core/Src/gui.c **** 	LCD_DrawLine(xend-1, ystart+1, xend-1, yend-1);//ª≠”“√Ê ˙œﬂ2
 3529              		.loc 1 915 2 view .LVU931
 3530 00a0 4346     		mov	r3, r8
 3531 00a2 3246     		mov	r2, r6
 3532 00a4 3946     		mov	r1, r7
 3533 00a6 3046     		mov	r0, r6
 3534 00a8 FFF7FEFF 		bl	LCD_DrawLine
 3535              	.LVL372:
 916:Core/Src/gui.c **** 	LCD_Fill(xstart+2, ystart+2, xend-2, yend-2,WHITE);	
 3536              		.loc 1 916 2 view .LVU932
 3537 00ac A31E     		subs	r3, r4, #2
 3538 00ae AA1E     		subs	r2, r5, #2
 3539 00b0 0AF10200 		add	r0, r10, #2
 3540 00b4 4FF6FF74 		movw	r4, #65535
 3541 00b8 0094     		str	r4, [sp]
 3542 00ba 9BB2     		uxth	r3, r3
 3543 00bc 92B2     		uxth	r2, r2
 3544 00be 0399     		ldr	r1, [sp, #12]
 3545 00c0 80B2     		uxth	r0, r0
 3546 00c2 FFF7FEFF 		bl	LCD_Fill
 3547              	.LVL373:
 917:Core/Src/gui.c **** }
 3548              		.loc 1 917 1 is_stmt 0 view .LVU933
 3549 00c6 05B0     		add	sp, sp, #20
 3550              	.LCFI51:
 3551              		.cfi_def_cfa_offset 36
 3552              		@ sp needed
 3553 00c8 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3554              	.L248:
 3555              		.align	2
 3556              	.L247:
 3557 00cc 00000000 		.word	POINT_COLOR
 3558              		.cfi_endproc
 3559              	.LFE152:
 3561              		.section	.text.EscButton,"ax",%progbits
 3562              		.align	1
 3563              		.global	EscButton
 3564              		.syntax unified
 3565              		.thumb
 3566              		.thumb_func
ARM GAS  /tmp/ccWgdbjA.s 			page 89


 3567              		.fpu fpv4-sp-d16
 3569              	EscButton:
 3570              	.LVL374:
 3571              	.LFB154:
 918:Core/Src/gui.c **** 
 919:Core/Src/gui.c **** /*******************************************************************
 920:Core/Src/gui.c ****  * @name       :void Draw_Button(uint16_t xstart,uint16_t ystart,uint16_t xend,uint16_t yend)
 921:Core/Src/gui.c ****  * @date       :2018-12-29 
 922:Core/Src/gui.c ****  * @function   :Draw a button
 923:Core/Src/gui.c ****  * @parameters :xstart:the bebinning x coordinate of the button
 924:Core/Src/gui.c ****                 ystart:the bebinning y coordinate of the button
 925:Core/Src/gui.c **** 								xend:the ending x coordinate of the button
 926:Core/Src/gui.c **** 								yend:the ending y coordinate of the button
 927:Core/Src/gui.c ****  * @retvalue   :None
 928:Core/Src/gui.c **** ********************************************************************/
 929:Core/Src/gui.c **** void Draw_Button(uint16_t xstart,uint16_t ystart,uint16_t xend,uint16_t yend)
 930:Core/Src/gui.c **** {
 931:Core/Src/gui.c **** 	EscButton(xstart, ystart, xend, yend);
 932:Core/Src/gui.c **** 	LCD_Fill(xstart+2, ystart+2, xend-2, yend-2,LGRAY);//ÃÓ≥‰÷–º‰—’…´
 933:Core/Src/gui.c **** }
 934:Core/Src/gui.c **** 
 935:Core/Src/gui.c **** /*******************************************************************
 936:Core/Src/gui.c ****  * @name       :void EscButton(uint16_t xstart,uint16_t ystart,uint8_t xend,uint16_t yend)
 937:Core/Src/gui.c ****  * @date       :2018-12-29 
 938:Core/Src/gui.c ****  * @function   :Draw a Esc button
 939:Core/Src/gui.c ****  * @parameters :xstart:the bebinning x coordinate of the button
 940:Core/Src/gui.c ****                 ystart:the bebinning y coordinate of the button
 941:Core/Src/gui.c **** 								xend:the ending x coordinate of the button
 942:Core/Src/gui.c **** 								yend:the ending y coordinate of the button
 943:Core/Src/gui.c ****  * @retvalue   :None
 944:Core/Src/gui.c **** ********************************************************************/
 945:Core/Src/gui.c **** void EscButton(uint16_t xstart,uint16_t ystart,uint8_t xend,uint16_t yend)
 946:Core/Src/gui.c **** {
 3572              		.loc 1 946 1 is_stmt 1 view -0
 3573              		.cfi_startproc
 3574              		@ args = 0, pretend = 0, frame = 8
 3575              		@ frame_needed = 0, uses_anonymous_args = 0
 3576              		.loc 1 946 1 is_stmt 0 view .LVU935
 3577 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3578              	.LCFI52:
 3579              		.cfi_def_cfa_offset 36
 3580              		.cfi_offset 4, -36
 3581              		.cfi_offset 5, -32
 3582              		.cfi_offset 6, -28
 3583              		.cfi_offset 7, -24
 3584              		.cfi_offset 8, -20
 3585              		.cfi_offset 9, -16
 3586              		.cfi_offset 10, -12
 3587              		.cfi_offset 11, -8
 3588              		.cfi_offset 14, -4
 3589 0004 83B0     		sub	sp, sp, #12
 3590              	.LCFI53:
 3591              		.cfi_def_cfa_offset 48
 3592 0006 8246     		mov	r10, r0
 3593 0008 0E46     		mov	r6, r1
 3594 000a 1D46     		mov	r5, r3
 947:Core/Src/gui.c **** 	POINT_COLOR=LGRAY;
ARM GAS  /tmp/ccWgdbjA.s 			page 90


 3595              		.loc 1 947 2 is_stmt 1 view .LVU936
 3596              		.loc 1 947 13 is_stmt 0 view .LVU937
 3597 000c DFF89CB0 		ldr	fp, .L251
 3598 0010 4CF21863 		movw	r3, #50712
 3599              	.LVL375:
 3600              		.loc 1 947 13 view .LVU938
 3601 0014 ABF80030 		strh	r3, [fp]	@ movhi
 948:Core/Src/gui.c **** 	LCD_DrawLine(xstart, ystart, xend, ystart);//ª≠∂•≤ø∫·œﬂ1
 3602              		.loc 1 948 2 is_stmt 1 view .LVU939
 3603 0018 1446     		mov	r4, r2
 3604 001a 0B46     		mov	r3, r1
 3605 001c FFF7FEFF 		bl	LCD_DrawLine
 3606              	.LVL376:
 949:Core/Src/gui.c **** 	LCD_DrawLine(xstart, ystart, xstart, yend);//ª≠◊Û±ﬂ ˙œﬂ1
 3607              		.loc 1 949 2 view .LVU940
 3608 0020 2B46     		mov	r3, r5
 3609 0022 5246     		mov	r2, r10
 3610 0024 3146     		mov	r1, r6
 3611 0026 5046     		mov	r0, r10
 3612 0028 FFF7FEFF 		bl	LCD_DrawLine
 3613              	.LVL377:
 950:Core/Src/gui.c **** 	POINT_COLOR=WHITE;
 3614              		.loc 1 950 2 view .LVU941
 3615              		.loc 1 950 13 is_stmt 0 view .LVU942
 3616 002c 4FF6FF73 		movw	r3, #65535
 3617 0030 ABF80030 		strh	r3, [fp]	@ movhi
 951:Core/Src/gui.c **** 	LCD_DrawLine(xstart+1, ystart+1, xend-1, ystart+1);//ª≠∂•≤ø∫·œﬂ2
 3618              		.loc 1 951 2 is_stmt 1 view .LVU943
 3619 0034 0AF10109 		add	r9, r10, #1
 3620 0038 1FFA89F9 		uxth	r9, r9
 3621 003c 0196     		str	r6, [sp, #4]
 3622 003e 771C     		adds	r7, r6, #1
 3623 0040 BFB2     		uxth	r7, r7
 3624 0042 661E     		subs	r6, r4, #1
 3625 0044 B6B2     		uxth	r6, r6
 3626 0046 3B46     		mov	r3, r7
 3627 0048 3246     		mov	r2, r6
 3628 004a 3946     		mov	r1, r7
 3629 004c 4846     		mov	r0, r9
 3630 004e FFF7FEFF 		bl	LCD_DrawLine
 3631              	.LVL378:
 952:Core/Src/gui.c **** 	LCD_DrawLine(xstart+1, ystart+1, xstart+1, yend-1);//ª≠◊Û±ﬂ ˙œﬂ2
 3632              		.loc 1 952 2 view .LVU944
 3633 0052 05F1FF38 		add	r8, r5, #-1
 3634 0056 1FFA88F8 		uxth	r8, r8
 3635 005a 4346     		mov	r3, r8
 3636 005c 4A46     		mov	r2, r9
 3637 005e 3946     		mov	r1, r7
 3638 0060 4846     		mov	r0, r9
 3639 0062 FFF7FEFF 		bl	LCD_DrawLine
 3640              	.LVL379:
 953:Core/Src/gui.c **** 	POINT_COLOR=BLACK;
 3641              		.loc 1 953 2 view .LVU945
 3642              		.loc 1 953 13 is_stmt 0 view .LVU946
 3643 0066 0023     		movs	r3, #0
 3644 0068 ABF80030 		strh	r3, [fp]	@ movhi
 954:Core/Src/gui.c **** 	LCD_DrawLine(xstart, yend, xend, yend);//ª≠µ◊≤ø∫·œﬂ1
ARM GAS  /tmp/ccWgdbjA.s 			page 91


 3645              		.loc 1 954 2 is_stmt 1 view .LVU947
 3646 006c 2B46     		mov	r3, r5
 3647 006e 2246     		mov	r2, r4
 3648 0070 2946     		mov	r1, r5
 3649 0072 5046     		mov	r0, r10
 3650 0074 FFF7FEFF 		bl	LCD_DrawLine
 3651              	.LVL380:
 955:Core/Src/gui.c **** 	LCD_DrawLine(xend, ystart, xend, yend);//ª≠”“±ﬂ ˙œﬂ1
 3652              		.loc 1 955 2 view .LVU948
 3653 0078 2B46     		mov	r3, r5
 3654 007a 2246     		mov	r2, r4
 3655 007c 0199     		ldr	r1, [sp, #4]
 3656 007e 2046     		mov	r0, r4
 3657 0080 FFF7FEFF 		bl	LCD_DrawLine
 3658              	.LVL381:
 956:Core/Src/gui.c **** 	POINT_COLOR=DARKGRAY;
 3659              		.loc 1 956 2 view .LVU949
 3660              		.loc 1 956 13 is_stmt 0 view .LVU950
 3661 0084 48F21043 		movw	r3, #33808
 3662 0088 ABF80030 		strh	r3, [fp]	@ movhi
 957:Core/Src/gui.c **** 	LCD_DrawLine(xstart+1, yend-1, xend-1, yend-1);//ª≠µ◊≤ø∫·œﬂ2
 3663              		.loc 1 957 2 is_stmt 1 view .LVU951
 3664 008c 4346     		mov	r3, r8
 3665 008e 3246     		mov	r2, r6
 3666 0090 4146     		mov	r1, r8
 3667 0092 4846     		mov	r0, r9
 3668 0094 FFF7FEFF 		bl	LCD_DrawLine
 3669              	.LVL382:
 958:Core/Src/gui.c **** 	LCD_DrawLine(xend-1, ystart+1, xend-1, yend-1);//ª≠”“±ﬂ ˙œﬂ2
 3670              		.loc 1 958 2 view .LVU952
 3671 0098 4346     		mov	r3, r8
 3672 009a 3246     		mov	r2, r6
 3673 009c 3946     		mov	r1, r7
 3674 009e 3046     		mov	r0, r6
 3675 00a0 FFF7FEFF 		bl	LCD_DrawLine
 3676              	.LVL383:
 959:Core/Src/gui.c **** }
 3677              		.loc 1 959 1 is_stmt 0 view .LVU953
 3678 00a4 03B0     		add	sp, sp, #12
 3679              	.LCFI54:
 3680              		.cfi_def_cfa_offset 36
 3681              		@ sp needed
 3682 00a6 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3683              	.L252:
 3684 00aa 00BF     		.align	2
 3685              	.L251:
 3686 00ac 00000000 		.word	POINT_COLOR
 3687              		.cfi_endproc
 3688              	.LFE154:
 3690              		.section	.text.Draw_Button,"ax",%progbits
 3691              		.align	1
 3692              		.global	Draw_Button
 3693              		.syntax unified
 3694              		.thumb
 3695              		.thumb_func
 3696              		.fpu fpv4-sp-d16
 3698              	Draw_Button:
ARM GAS  /tmp/ccWgdbjA.s 			page 92


 3699              	.LVL384:
 3700              	.LFB153:
 930:Core/Src/gui.c **** 	EscButton(xstart, ystart, xend, yend);
 3701              		.loc 1 930 1 is_stmt 1 view -0
 3702              		.cfi_startproc
 3703              		@ args = 0, pretend = 0, frame = 0
 3704              		@ frame_needed = 0, uses_anonymous_args = 0
 930:Core/Src/gui.c **** 	EscButton(xstart, ystart, xend, yend);
 3705              		.loc 1 930 1 is_stmt 0 view .LVU955
 3706 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 3707              	.LCFI55:
 3708              		.cfi_def_cfa_offset 20
 3709              		.cfi_offset 4, -20
 3710              		.cfi_offset 5, -16
 3711              		.cfi_offset 6, -12
 3712              		.cfi_offset 7, -8
 3713              		.cfi_offset 14, -4
 3714 0002 83B0     		sub	sp, sp, #12
 3715              	.LCFI56:
 3716              		.cfi_def_cfa_offset 32
 3717 0004 0546     		mov	r5, r0
 3718 0006 0E46     		mov	r6, r1
 3719 0008 1446     		mov	r4, r2
 3720 000a 1F46     		mov	r7, r3
 931:Core/Src/gui.c **** 	LCD_Fill(xstart+2, ystart+2, xend-2, yend-2,LGRAY);//ÃÓ≥‰÷–º‰—’…´
 3721              		.loc 1 931 2 is_stmt 1 view .LVU956
 3722 000c D2B2     		uxtb	r2, r2
 3723              	.LVL385:
 931:Core/Src/gui.c **** 	LCD_Fill(xstart+2, ystart+2, xend-2, yend-2,LGRAY);//ÃÓ≥‰÷–º‰—’…´
 3724              		.loc 1 931 2 is_stmt 0 view .LVU957
 3725 000e FFF7FEFF 		bl	EscButton
 3726              	.LVL386:
 932:Core/Src/gui.c **** }
 3727              		.loc 1 932 2 is_stmt 1 view .LVU958
 3728 0012 BB1E     		subs	r3, r7, #2
 3729 0014 A21E     		subs	r2, r4, #2
 3730 0016 B11C     		adds	r1, r6, #2
 3731 0018 A81C     		adds	r0, r5, #2
 3732 001a 4CF21864 		movw	r4, #50712
 3733 001e 0094     		str	r4, [sp]
 3734 0020 9BB2     		uxth	r3, r3
 3735 0022 92B2     		uxth	r2, r2
 3736 0024 89B2     		uxth	r1, r1
 3737 0026 80B2     		uxth	r0, r0
 3738 0028 FFF7FEFF 		bl	LCD_Fill
 3739              	.LVL387:
 933:Core/Src/gui.c **** 
 3740              		.loc 1 933 1 is_stmt 0 view .LVU959
 3741 002c 03B0     		add	sp, sp, #12
 3742              	.LCFI57:
 3743              		.cfi_def_cfa_offset 20
 3744              		@ sp needed
 3745 002e F0BD     		pop	{r4, r5, r6, r7, pc}
 3746              		.cfi_endproc
 3747              	.LFE153:
 3749              		.section	.text.SetButton,"ax",%progbits
 3750              		.align	1
ARM GAS  /tmp/ccWgdbjA.s 			page 93


 3751              		.global	SetButton
 3752              		.syntax unified
 3753              		.thumb
 3754              		.thumb_func
 3755              		.fpu fpv4-sp-d16
 3757              	SetButton:
 3758              	.LVL388:
 3759              	.LFB155:
 960:Core/Src/gui.c **** 
 961:Core/Src/gui.c **** /*******************************************************************
 962:Core/Src/gui.c ****  * @name       :void SetButton(uint8_t xstart,uint16_t ystart,uint8_t xend,uint16_t yend)
 963:Core/Src/gui.c ****  * @date       :2018-12-29 
 964:Core/Src/gui.c ****  * @function   :Set a button
 965:Core/Src/gui.c ****  * @parameters :xstart:the bebinning x coordinate of the button
 966:Core/Src/gui.c ****                 ystart:the bebinning y coordinate of the button
 967:Core/Src/gui.c **** 								xend:the ending x coordinate of the button
 968:Core/Src/gui.c **** 								yend:the ending y coordinate of the button
 969:Core/Src/gui.c ****  * @retvalue   :None
 970:Core/Src/gui.c **** ********************************************************************/
 971:Core/Src/gui.c **** void SetButton(uint8_t xstart,uint16_t ystart,uint8_t xend,uint16_t yend)
 972:Core/Src/gui.c **** {
 3760              		.loc 1 972 1 is_stmt 1 view -0
 3761              		.cfi_startproc
 3762              		@ args = 0, pretend = 0, frame = 8
 3763              		@ frame_needed = 0, uses_anonymous_args = 0
 3764              		.loc 1 972 1 is_stmt 0 view .LVU961
 3765 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3766              	.LCFI58:
 3767              		.cfi_def_cfa_offset 36
 3768              		.cfi_offset 4, -36
 3769              		.cfi_offset 5, -32
 3770              		.cfi_offset 6, -28
 3771              		.cfi_offset 7, -24
 3772              		.cfi_offset 8, -20
 3773              		.cfi_offset 9, -16
 3774              		.cfi_offset 10, -12
 3775              		.cfi_offset 11, -8
 3776              		.cfi_offset 14, -4
 3777 0004 83B0     		sub	sp, sp, #12
 3778              	.LCFI59:
 3779              		.cfi_def_cfa_offset 48
 3780 0006 0F46     		mov	r7, r1
 3781 0008 1D46     		mov	r5, r3
 973:Core/Src/gui.c **** 	POINT_COLOR=BLACK;
 3782              		.loc 1 973 2 is_stmt 1 view .LVU962
 3783              		.loc 1 973 13 is_stmt 0 view .LVU963
 3784 000a DFF8A0A0 		ldr	r10, .L257
 3785 000e 0023     		movs	r3, #0
 3786              	.LVL389:
 3787              		.loc 1 973 13 view .LVU964
 3788 0010 AAF80030 		strh	r3, [r10]	@ movhi
 974:Core/Src/gui.c **** 	LCD_DrawLine(xstart, ystart, xend, ystart);//ª≠∂•≤ø∫·œﬂ1
 3789              		.loc 1 974 2 is_stmt 1 view .LVU965
 3790 0014 0646     		mov	r6, r0
 3791 0016 1446     		mov	r4, r2
 3792 0018 0B46     		mov	r3, r1
 3793 001a FFF7FEFF 		bl	LCD_DrawLine
ARM GAS  /tmp/ccWgdbjA.s 			page 94


 3794              	.LVL390:
 975:Core/Src/gui.c **** 	LCD_DrawLine(xstart, ystart, xstart, yend);//ª≠◊Û±ﬂ ˙œﬂ1
 3795              		.loc 1 975 2 view .LVU966
 3796 001e 2B46     		mov	r3, r5
 3797 0020 3246     		mov	r2, r6
 3798 0022 3946     		mov	r1, r7
 3799 0024 3046     		mov	r0, r6
 3800 0026 FFF7FEFF 		bl	LCD_DrawLine
 3801              	.LVL391:
 976:Core/Src/gui.c **** 	POINT_COLOR=DARKGRAY;
 3802              		.loc 1 976 2 view .LVU967
 3803              		.loc 1 976 13 is_stmt 0 view .LVU968
 3804 002a 48F21043 		movw	r3, #33808
 3805 002e AAF80030 		strh	r3, [r10]	@ movhi
 977:Core/Src/gui.c **** 	LCD_DrawLine(xstart+1, ystart+1, xend-1, ystart+1);//ª≠∂•≤ø∫·œﬂ2
 3806              		.loc 1 977 2 is_stmt 1 view .LVU969
 3807 0032 06F1010B 		add	fp, r6, #1
 3808 0036 0197     		str	r7, [sp, #4]
 3809 0038 07F10108 		add	r8, r7, #1
 3810 003c 1FFA88F8 		uxth	r8, r8
 3811 0040 671E     		subs	r7, r4, #1
 3812 0042 BFB2     		uxth	r7, r7
 3813 0044 4346     		mov	r3, r8
 3814 0046 3A46     		mov	r2, r7
 3815 0048 4146     		mov	r1, r8
 3816 004a 5846     		mov	r0, fp
 3817 004c FFF7FEFF 		bl	LCD_DrawLine
 3818              	.LVL392:
 978:Core/Src/gui.c **** 	LCD_DrawLine(xstart+1, ystart+1, xstart+1, yend-1);//ª≠◊Û±ﬂ ˙œﬂ2
 3819              		.loc 1 978 2 view .LVU970
 3820 0050 05F1FF39 		add	r9, r5, #-1
 3821 0054 1FFA89F9 		uxth	r9, r9
 3822 0058 4B46     		mov	r3, r9
 3823 005a 5A46     		mov	r2, fp
 3824 005c 4146     		mov	r1, r8
 3825 005e 5846     		mov	r0, fp
 3826 0060 FFF7FEFF 		bl	LCD_DrawLine
 3827              	.LVL393:
 979:Core/Src/gui.c **** 	POINT_COLOR=LGRAY;
 3828              		.loc 1 979 2 view .LVU971
 3829              		.loc 1 979 13 is_stmt 0 view .LVU972
 3830 0064 4CF21863 		movw	r3, #50712
 3831 0068 AAF80030 		strh	r3, [r10]	@ movhi
 980:Core/Src/gui.c **** 	LCD_DrawLine(xstart+1, yend-1, xend-1, yend-1);//ª≠µ◊≤ø∫·œﬂ1
 3832              		.loc 1 980 2 is_stmt 1 view .LVU973
 3833 006c 4B46     		mov	r3, r9
 3834 006e 3A46     		mov	r2, r7
 3835 0070 4946     		mov	r1, r9
 3836 0072 5846     		mov	r0, fp
 3837 0074 FFF7FEFF 		bl	LCD_DrawLine
 3838              	.LVL394:
 981:Core/Src/gui.c **** 	LCD_DrawLine(xend-1, ystart+1, xend-1, yend-1);//ª≠”“±ﬂ ˙œﬂ1	
 3839              		.loc 1 981 2 view .LVU974
 3840 0078 4B46     		mov	r3, r9
 3841 007a 3A46     		mov	r2, r7
 3842 007c 4146     		mov	r1, r8
 3843 007e 3846     		mov	r0, r7
ARM GAS  /tmp/ccWgdbjA.s 			page 95


 3844 0080 FFF7FEFF 		bl	LCD_DrawLine
 3845              	.LVL395:
 982:Core/Src/gui.c **** 	POINT_COLOR=WHITE;
 3846              		.loc 1 982 2 view .LVU975
 3847              		.loc 1 982 13 is_stmt 0 view .LVU976
 3848 0084 4FF6FF73 		movw	r3, #65535
 3849 0088 AAF80030 		strh	r3, [r10]	@ movhi
 983:Core/Src/gui.c **** 	LCD_DrawLine(xstart, yend, xend, yend);//ª≠µ◊≤ø∫·œﬂ2
 3850              		.loc 1 983 2 is_stmt 1 view .LVU977
 3851 008c 2B46     		mov	r3, r5
 3852 008e 2246     		mov	r2, r4
 3853 0090 2946     		mov	r1, r5
 3854 0092 3046     		mov	r0, r6
 3855 0094 FFF7FEFF 		bl	LCD_DrawLine
 3856              	.LVL396:
 984:Core/Src/gui.c **** 	LCD_DrawLine(xend, ystart, xend, yend);//ª≠”“±ﬂ ˙œﬂ2
 3857              		.loc 1 984 2 view .LVU978
 3858 0098 2B46     		mov	r3, r5
 3859 009a 2246     		mov	r2, r4
 3860 009c 0199     		ldr	r1, [sp, #4]
 3861 009e 2046     		mov	r0, r4
 3862 00a0 FFF7FEFF 		bl	LCD_DrawLine
 3863              	.LVL397:
 985:Core/Src/gui.c **** }
 3864              		.loc 1 985 1 is_stmt 0 view .LVU979
 3865 00a4 03B0     		add	sp, sp, #12
 3866              	.LCFI60:
 3867              		.cfi_def_cfa_offset 36
 3868              		@ sp needed
 3869 00a6 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3870              	.L258:
 3871 00aa 00BF     		.align	2
 3872              	.L257:
 3873 00ac 00000000 		.word	POINT_COLOR
 3874              		.cfi_endproc
 3875              	.LFE155:
 3877              		.section	.text.Draw_DirectButton,"ax",%progbits
 3878              		.align	1
 3879              		.global	Draw_DirectButton
 3880              		.syntax unified
 3881              		.thumb
 3882              		.thumb_func
 3883              		.fpu fpv4-sp-d16
 3885              	Draw_DirectButton:
 3886              	.LVL398:
 3887              	.LFB156:
 986:Core/Src/gui.c **** 
 987:Core/Src/gui.c **** /*******************************************************************
 988:Core/Src/gui.c ****  * @name       :void Draw_DirectButton(uint16_t xstart, uint16_t ystart)
 989:Core/Src/gui.c ****  * @date       :2018-12-29 
 990:Core/Src/gui.c ****  * @function   :Set a direct button
 991:Core/Src/gui.c ****  * @parameters :xstart:the bebinning x coordinate of the button
 992:Core/Src/gui.c ****                 ystart:the bebinning y coordinate of the button
 993:Core/Src/gui.c ****  * @retvalue   :None
 994:Core/Src/gui.c **** ********************************************************************/
 995:Core/Src/gui.c **** void Draw_DirectButton(uint16_t xstart, uint16_t ystart)
 996:Core/Src/gui.c **** {
ARM GAS  /tmp/ccWgdbjA.s 			page 96


 3888              		.loc 1 996 1 is_stmt 1 view -0
 3889              		.cfi_startproc
 3890              		@ args = 0, pretend = 0, frame = 0
 3891              		@ frame_needed = 0, uses_anonymous_args = 0
 3892              		.loc 1 996 1 is_stmt 0 view .LVU981
 3893 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3894              	.LCFI61:
 3895              		.cfi_def_cfa_offset 24
 3896              		.cfi_offset 3, -24
 3897              		.cfi_offset 4, -20
 3898              		.cfi_offset 5, -16
 3899              		.cfi_offset 6, -12
 3900              		.cfi_offset 7, -8
 3901              		.cfi_offset 14, -4
 3902 0002 0446     		mov	r4, r0
 3903 0004 0D46     		mov	r5, r1
 997:Core/Src/gui.c **** 	POINT_COLOR=BLACK;
 3904              		.loc 1 997 2 is_stmt 1 view .LVU982
 3905              		.loc 1 997 13 is_stmt 0 view .LVU983
 3906 0006 204B     		ldr	r3, .L261
 3907 0008 0022     		movs	r2, #0
 3908 000a 1A80     		strh	r2, [r3]	@ movhi
 998:Core/Src/gui.c **** 	LCD_DrawLine(xstart+6, ystart+8, xstart+14, ystart+8);
 3909              		.loc 1 998 2 is_stmt 1 view .LVU984
 3910 000c 0831     		adds	r1, r1, #8
 3911              	.LVL399:
 3912              		.loc 1 998 2 is_stmt 0 view .LVU985
 3913 000e 89B2     		uxth	r1, r1
 3914 0010 00F10E02 		add	r2, r0, #14
 3915 0014 0630     		adds	r0, r0, #6
 3916              	.LVL400:
 3917              		.loc 1 998 2 view .LVU986
 3918 0016 0B46     		mov	r3, r1
 3919 0018 92B2     		uxth	r2, r2
 3920 001a 80B2     		uxth	r0, r0
 3921 001c FFF7FEFF 		bl	LCD_DrawLine
 3922              	.LVL401:
 999:Core/Src/gui.c **** 	LCD_DrawLine(xstart+7, ystart+9, xstart+13, ystart+9);
 3923              		.loc 1 999 2 is_stmt 1 view .LVU987
 3924 0020 05F10901 		add	r1, r5, #9
 3925 0024 89B2     		uxth	r1, r1
 3926 0026 04F10D02 		add	r2, r4, #13
 3927 002a E01D     		adds	r0, r4, #7
 3928 002c 0B46     		mov	r3, r1
 3929 002e 92B2     		uxth	r2, r2
 3930 0030 80B2     		uxth	r0, r0
 3931 0032 FFF7FEFF 		bl	LCD_DrawLine
 3932              	.LVL402:
1000:Core/Src/gui.c **** 	LCD_DrawLine(xstart+8, ystart+10, xstart+12, ystart+10);
 3933              		.loc 1 1000 2 view .LVU988
 3934 0036 05F10A01 		add	r1, r5, #10
 3935 003a 89B2     		uxth	r1, r1
 3936 003c 04F10C02 		add	r2, r4, #12
 3937 0040 04F10800 		add	r0, r4, #8
 3938 0044 0B46     		mov	r3, r1
 3939 0046 92B2     		uxth	r2, r2
 3940 0048 80B2     		uxth	r0, r0
ARM GAS  /tmp/ccWgdbjA.s 			page 97


 3941 004a FFF7FEFF 		bl	LCD_DrawLine
 3942              	.LVL403:
1001:Core/Src/gui.c **** 	LCD_DrawPoint(xstart+9,ystart+11);LCD_DrawPoint(xstart+10,ystart+11);LCD_DrawPoint(xstart+11,ystar
 3943              		.loc 1 1001 2 view .LVU989
 3944 004e 05F10B06 		add	r6, r5, #11
 3945 0052 B6B2     		uxth	r6, r6
 3946 0054 04F10900 		add	r0, r4, #9
 3947 0058 3146     		mov	r1, r6
 3948 005a 80B2     		uxth	r0, r0
 3949 005c FFF7FEFF 		bl	LCD_DrawPoint
 3950              	.LVL404:
 3951              		.loc 1 1001 36 view .LVU990
 3952 0060 04F10A07 		add	r7, r4, #10
 3953 0064 BFB2     		uxth	r7, r7
 3954 0066 3146     		mov	r1, r6
 3955 0068 3846     		mov	r0, r7
 3956 006a FFF7FEFF 		bl	LCD_DrawPoint
 3957              	.LVL405:
 3958              		.loc 1 1001 71 view .LVU991
 3959 006e 04F10B00 		add	r0, r4, #11
 3960 0072 3146     		mov	r1, r6
 3961 0074 80B2     		uxth	r0, r0
 3962 0076 FFF7FEFF 		bl	LCD_DrawPoint
 3963              	.LVL406:
1002:Core/Src/gui.c **** 	LCD_DrawPoint(xstart+10,ystart+12);
 3964              		.loc 1 1002 2 view .LVU992
 3965 007a 05F10C01 		add	r1, r5, #12
 3966 007e 89B2     		uxth	r1, r1
 3967 0080 3846     		mov	r0, r7
 3968 0082 FFF7FEFF 		bl	LCD_DrawPoint
 3969              	.LVL407:
1003:Core/Src/gui.c **** }
 3970              		.loc 1 1003 1 is_stmt 0 view .LVU993
 3971 0086 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3972              	.L262:
 3973              		.align	2
 3974              	.L261:
 3975 0088 00000000 		.word	POINT_COLOR
 3976              		.cfi_endproc
 3977              	.LFE156:
 3979              		.section	.text.Draw_Window,"ax",%progbits
 3980              		.align	1
 3981              		.global	Draw_Window
 3982              		.syntax unified
 3983              		.thumb
 3984              		.thumb_func
 3985              		.fpu fpv4-sp-d16
 3987              	Draw_Window:
 3988              	.LVL408:
 3989              	.LFB157:
1004:Core/Src/gui.c **** 
1005:Core/Src/gui.c **** /*******************************************************************
1006:Core/Src/gui.c ****  * @name       :void Draw_Window(uint16_t xstart,uint16_t ystart,uint16_t xend,uint16_t yend,uint8_
1007:Core/Src/gui.c ****  * @date       :2018-12-29 
1008:Core/Src/gui.c ****  * @function   :Set a window
1009:Core/Src/gui.c ****  * @parameters :xstart:the bebinning x coordinate of the window
1010:Core/Src/gui.c ****                 ystart:the bebinning y coordinate of the window
ARM GAS  /tmp/ccWgdbjA.s 			page 98


1011:Core/Src/gui.c **** 								xend:the ending x coordinate of the window
1012:Core/Src/gui.c **** 								yend:the ending y coordinate of the window
1013:Core/Src/gui.c **** 								caption:the text of the window
1014:Core/Src/gui.c ****  * @retvalue   :None
1015:Core/Src/gui.c **** ********************************************************************/
1016:Core/Src/gui.c **** void Draw_Window(uint16_t xstart,uint16_t ystart,uint16_t xend,uint16_t yend,uint8_t* caption)
1017:Core/Src/gui.c **** {
 3990              		.loc 1 1017 1 is_stmt 1 view -0
 3991              		.cfi_startproc
 3992              		@ args = 4, pretend = 0, frame = 0
 3993              		@ frame_needed = 0, uses_anonymous_args = 0
 3994              		.loc 1 1017 1 is_stmt 0 view .LVU995
 3995 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 3996              	.LCFI62:
 3997              		.cfi_def_cfa_offset 28
 3998              		.cfi_offset 4, -28
 3999              		.cfi_offset 5, -24
 4000              		.cfi_offset 6, -20
 4001              		.cfi_offset 7, -16
 4002              		.cfi_offset 8, -12
 4003              		.cfi_offset 9, -8
 4004              		.cfi_offset 14, -4
 4005 0004 85B0     		sub	sp, sp, #20
 4006              	.LCFI63:
 4007              		.cfi_def_cfa_offset 48
 4008 0006 0646     		mov	r6, r0
 4009 0008 0C46     		mov	r4, r1
 4010 000a 1546     		mov	r5, r2
 4011 000c 1F46     		mov	r7, r3
1018:Core/Src/gui.c **** 	Draw_Button(xstart, ystart, xend, yend);   // œ‘ æ÷˜ÃÂ¥∞ø⁄
 4012              		.loc 1 1018 2 is_stmt 1 view .LVU996
 4013 000e FFF7FEFF 		bl	Draw_Button
 4014              	.LVL409:
1019:Core/Src/gui.c **** 	LCD_Fill(xstart+3, ystart+3, xend-3, ystart+25, DARKBLUE);	 // œ‘ æ±ÍÃ‚¿∏
 4015              		.loc 1 1019 2 view .LVU997
 4016 0012 06F10308 		add	r8, r6, #3
 4017 0016 1FFA88F8 		uxth	r8, r8
 4018 001a 033D     		subs	r5, r5, #3
 4019 001c ADB2     		uxth	r5, r5
 4020 001e 04F11903 		add	r3, r4, #25
 4021 0022 E11C     		adds	r1, r4, #3
 4022 0024 40F2CF19 		movw	r9, #463
 4023 0028 CDF80090 		str	r9, [sp]
 4024 002c 9BB2     		uxth	r3, r3
 4025 002e 2A46     		mov	r2, r5
 4026 0030 89B2     		uxth	r1, r1
 4027 0032 4046     		mov	r0, r8
 4028 0034 FFF7FEFF 		bl	LCD_Fill
 4029              	.LVL410:
1020:Core/Src/gui.c **** 	Draw_TextBox(xstart+3, ystart+29, xend-3, yend-3); // œ‘ æŒƒ±æ ‰»Î«¯
 4030              		.loc 1 1020 2 view .LVU998
 4031 0038 FB1E     		subs	r3, r7, #3
 4032 003a 04F11D01 		add	r1, r4, #29
 4033 003e 9BB2     		uxth	r3, r3
 4034 0040 2A46     		mov	r2, r5
 4035 0042 89B2     		uxth	r1, r1
 4036 0044 4046     		mov	r0, r8
ARM GAS  /tmp/ccWgdbjA.s 			page 99


 4037 0046 FFF7FEFF 		bl	Draw_TextBox
 4038              	.LVL411:
1021:Core/Src/gui.c **** 	POINT_COLOR = WHITE;
 4039              		.loc 1 1021 2 view .LVU999
 4040              		.loc 1 1021 14 is_stmt 0 view .LVU1000
 4041 004a 4FF6FF72 		movw	r2, #65535
 4042 004e 0A4B     		ldr	r3, .L265
 4043 0050 1A80     		strh	r2, [r3]	@ movhi
1022:Core/Src/gui.c **** 	BACK_COLOR = DARKBLUE;
 4044              		.loc 1 1022 2 is_stmt 1 view .LVU1001
 4045              		.loc 1 1022 13 is_stmt 0 view .LVU1002
 4046 0052 0A4B     		ldr	r3, .L265+4
 4047 0054 A3F80090 		strh	r9, [r3]	@ movhi
1023:Core/Src/gui.c **** 	Show_Str(xstart+5, ystart+6,POINT_COLOR,BACK_COLOR,caption,16,1);
 4048              		.loc 1 1023 2 is_stmt 1 view .LVU1003
 4049 0058 A11D     		adds	r1, r4, #6
 4050 005a 701D     		adds	r0, r6, #5
 4051 005c 0123     		movs	r3, #1
 4052 005e 0293     		str	r3, [sp, #8]
 4053 0060 1023     		movs	r3, #16
 4054 0062 0193     		str	r3, [sp, #4]
 4055 0064 0C9B     		ldr	r3, [sp, #48]
 4056 0066 0093     		str	r3, [sp]
 4057 0068 4B46     		mov	r3, r9
 4058 006a 89B2     		uxth	r1, r1
 4059 006c 80B2     		uxth	r0, r0
 4060 006e FFF7FEFF 		bl	Show_Str
 4061              	.LVL412:
1024:Core/Src/gui.c **** 
1025:Core/Src/gui.c **** }
 4062              		.loc 1 1025 1 is_stmt 0 view .LVU1004
 4063 0072 05B0     		add	sp, sp, #20
 4064              	.LCFI64:
 4065              		.cfi_def_cfa_offset 28
 4066              		@ sp needed
 4067 0074 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 4068              	.LVL413:
 4069              	.L266:
 4070              		.loc 1 1025 1 view .LVU1005
 4071              		.align	2
 4072              	.L265:
 4073 0078 00000000 		.word	POINT_COLOR
 4074 007c 00000000 		.word	BACK_COLOR
 4075              		.cfi_endproc
 4076              	.LFE157:
 4078              		.global	tfont32
 4079              		.global	tfont24
 4080              		.global	tfont16
 4081              		.global	asc2_1608
 4082              		.global	asc2_1206
 4083              		.section	.rodata.asc2_1206,"a"
 4084              		.align	2
 4085              		.set	.LANCHOR0,. + 0
 4088              	asc2_1206:
 4089 0000 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000"
 4089      00000000 
 4089      00000000 
ARM GAS  /tmp/ccWgdbjA.s 			page 100


 4090 000c 00002020 		.ascii	"\000\000      \000 \000\000"
 4090      20202020 
 4090      00200000 
 4091 0018 00285050 		.ascii	"\000(PP\000\000\000\000\000\000\000\000"
 4091      00000000 
 4091      00000000 
 4092 0024 00002828 		.ascii	"\000\000((\374(P\374PP\000\000"
 4092      FC2850FC 
 4092      50500000 
 4093 0030 002078A8 		.ascii	"\000 x\250\240`0(\250\360 \000"
 4093      A0603028 
 4093      A8F02000 
 4094 003c 000048A8 		.ascii	"\000\000H\250\260P(4TH\000\000"
 4094      B0502834 
 4094      54480000 
 4095 0048 00002050 		.ascii	"\000\000 PPx\250\250\220l\000\000"
 4095      5078A8A8 
 4095      906C0000 
 4096 0054 00404080 		.ascii	"\000@@\200\000\000\000\000\000\000\000\000"
 4096      00000000 
 4096      00000000 
 4097 0060 00040810 		.ascii	"\000\004\010\020\020\020\020\020\020\010\004\000"
 4097      10101010 
 4097      10080400 
 4098 006c 00402010 		.ascii	"\000@ \020\020\020\020\020\020 @\000"
 4098      10101010 
 4098      10204000 
 4099 0078 00000020 		.ascii	"\000\000\000 \250pp\250 \000\000\000"
 4099      A87070A8 
 4099      20000000 
 4100 0084 00002020 		.ascii	"\000\000   \370   \000\000\000"
 4100      20F82020 
 4100      20000000 
 4101 0090 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000@@\200"
 4101      00000000 
 4101      00404080 
 4102 009c 00000000 		.ascii	"\000\000\000\000\000\370\000\000\000\000\000\000"
 4102      00F80000 
 4102      00000000 
 4103 00a8 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000@\000\000"
 4103      00000000 
 4103      00400000 
 4104 00b4 00081010 		.ascii	"\000\010\020\020\020  @@@\200\000"
 4104      10202040 
 4104      40408000 
 4105 00c0 00007088 		.ascii	"\000\000p\210\210\210\210\210\210p\000\000"
 4105      88888888 
 4105      88700000 
 4106 00cc 00002060 		.ascii	"\000\000 `     p\000\000"
 4106      20202020 
 4106      20700000 
 4107 00d8 00007088 		.ascii	"\000\000p\210\210\020 @\200\370\000\000"
 4107      88102040 
 4107      80F80000 
 4108 00e4 00007088 		.ascii	"\000\000p\210\0100\010\010\210p\000\000"
 4108      08300808 
 4108      88700000 
ARM GAS  /tmp/ccWgdbjA.s 			page 101


 4109 00f0 00001030 		.ascii	"\000\000\0200PP\220x\020\030\000\000"
 4109      50509078 
 4109      10180000 
 4110 00fc 0000F880 		.ascii	"\000\000\370\200\200\360\010\010\210p\000\000"
 4110      80F00808 
 4110      88700000 
 4111 0108 00007090 		.ascii	"\000\000p\220\200\360\210\210\210p\000\000"
 4111      80F08888 
 4111      88700000 
 4112 0114 0000F890 		.ascii	"\000\000\370\220\020     \000\000"
 4112      10202020 
 4112      20200000 
 4113 0120 00007088 		.ascii	"\000\000p\210\210p\210\210\210p\000\000"
 4113      88708888 
 4113      88700000 
 4114 012c 00007088 		.ascii	"\000\000p\210\210\210x\010Hp\000\000"
 4114      88887808 
 4114      48700000 
 4115 0138 00000000 		.ascii	"\000\000\000\000 \000\000\000\000 \000\000"
 4115      20000000 
 4115      00200000 
 4116 0144 00000000 		.ascii	"\000\000\000\000\000 \000\000\000  \000"
 4116      00200000 
 4116      00202000 
 4117 0150 00040810 		.ascii	"\000\004\010\020 @ \020\010\004\000\000"
 4117      20402010 
 4117      08040000 
 4118 015c 00000000 		.ascii	"\000\000\000\000\370\000\000\370\000\000\000\000"
 4118      F80000F8 
 4118      00000000 
 4119 0168 00402010 		.ascii	"\000@ \020\010\004\010\020 @\000\000"
 4119      08040810 
 4119      20400000 
 4120 0174 00007088 		.ascii	"\000\000p\210\210\020  \000 \000\000"
 4120      88102020 
 4120      00200000 
 4121 0180 00007088 		.ascii	"\000\000p\210\230\250\250\270\200x\000\000"
 4121      98A8A8B8 
 4121      80780000 
 4122 018c 00002020 		.ascii	"\000\000  0PPxH\314\000\000"
 4122      30505078 
 4122      48CC0000 
 4123 0198 0000F048 		.ascii	"\000\000\360HHpHHH\360\000\000"
 4123      48704848 
 4123      48F00000 
 4124 01a4 00007888 		.ascii	"\000\000x\210\200\200\200\200\210p\000\000"
 4124      80808080 
 4124      88700000 
 4125 01b0 0000F048 		.ascii	"\000\000\360HHHHHH\360\000\000"
 4125      48484848 
 4125      48F00000 
 4126 01bc 0000F848 		.ascii	"\000\000\370HPpP@H\370\000\000"
 4126      50705040 
 4126      48F80000 
 4127 01c8 0000F848 		.ascii	"\000\000\370HPpP@@\340\000\000"
 4127      50705040 
 4127      40E00000 
ARM GAS  /tmp/ccWgdbjA.s 			page 102


 4128 01d4 00003848 		.ascii	"\000\0008H\200\200\234\210H0\000\000"
 4128      80809C88 
 4128      48300000 
 4129 01e0 0000CC48 		.ascii	"\000\000\314HHxHHH\314\000\000"
 4129      48784848 
 4129      48CC0000 
 4130 01ec 0000F820 		.ascii	"\000\000\370      \370\000\000"
 4130      20202020 
 4130      20F80000 
 4131 01f8 00007C10 		.ascii	"\000\000|\020\020\020\020\020\020\220\340\000"
 4131      10101010 
 4131      1090E000 
 4132 0204 0000EC48 		.ascii	"\000\000\354HP`PPH\354\000\000"
 4132      50605050 
 4132      48EC0000 
 4133 0210 0000E040 		.ascii	"\000\000\340@@@@@D\374\000\000"
 4133      40404040 
 4133      44FC0000 
 4134 021c 0000D8D8 		.ascii	"\000\000\330\330\330\330\250\250\250\250\000\000"
 4134      D8D8A8A8 
 4134      A8A80000 
 4135 0228 0000DC48 		.ascii	"\000\000\334HhhXXH\350\000\000"
 4135      68685858 
 4135      48E80000 
 4136 0234 00007088 		.ascii	"\000\000p\210\210\210\210\210\210p\000\000"
 4136      88888888 
 4136      88700000 
 4137 0240 0000F048 		.ascii	"\000\000\360HHp@@@\340\000\000"
 4137      48704040 
 4137      40E00000 
 4138 024c 00007088 		.ascii	"\000\000p\210\210\210\210\350\230p\030\000"
 4138      888888E8 
 4138      98701800 
 4139 0258 0000F048 		.ascii	"\000\000\360HHpPHH\354\000\000"
 4139      48705048 
 4139      48EC0000 
 4140 0264 00007888 		.ascii	"\000\000x\210\200`\020\010\210\360\000\000"
 4140      80601008 
 4140      88F00000 
 4141 0270 0000F8A8 		.ascii	"\000\000\370\250     p\000\000"
 4141      20202020 
 4141      20700000 
 4142 027c 0000CC48 		.ascii	"\000\000\314HHHHHH0\000\000"
 4142      48484848 
 4142      48300000 
 4143 0288 0000CC48 		.ascii	"\000\000\314HHPP0  \000\000"
 4143      48505030 
 4143      20200000 
 4144 0294 0000A8A8 		.ascii	"\000\000\250\250\250pPPPP\000\000"
 4144      A8705050 
 4144      50500000 
 4145 02a0 0000D850 		.ascii	"\000\000\330PP  PP\330\000\000"
 4145      50202050 
 4145      50D80000 
 4146 02ac 0000D850 		.ascii	"\000\000\330PP    p\000\000"
 4146      50202020 
 4146      20700000 
ARM GAS  /tmp/ccWgdbjA.s 			page 103


 4147 02b8 0000F890 		.ascii	"\000\000\370\220\020  @H\370\000\000"
 4147      10202040 
 4147      48F80000 
 4148 02c4 00382020 		.ascii	"\0008        8\000"
 4148      20202020 
 4148      20203800 
 4149 02d0 00404040 		.ascii	"\000@@@  \020\020\020\010\000\000"
 4149      20201010 
 4149      10080000 
 4150 02dc 00701010 		.ascii	"\000p\020\020\020\020\020\020\020\020p\000"
 4150      10101010 
 4150      10107000 
 4151 02e8 00205000 		.ascii	"\000 P\000\000\000\000\000\000\000\000\000"
 4151      00000000 
 4151      00000000 
 4152 02f4 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\374"
 4152      00000000 
 4152      000000FC 
 4153 0300 00200000 		.ascii	"\000 \000\000\000\000\000\000\000\000\000\000"
 4153      00000000 
 4153      00000000 
 4154 030c 00000000 		.ascii	"\000\000\000\000\0000H8H<\000\000"
 4154      00304838 
 4154      483C0000 
 4155 0318 0000C040 		.ascii	"\000\000\300@@pHHHp\000\000"
 4155      40704848 
 4155      48700000 
 4156 0324 00000000 		.ascii	"\000\000\000\000\0008H@@8\000\000"
 4156      00384840 
 4156      40380000 
 4157 0330 00001808 		.ascii	"\000\000\030\010\0108HHH<\000\000"
 4157      08384848 
 4157      483C0000 
 4158 033c 00000000 		.ascii	"\000\000\000\000\0000Hx@8\000\000"
 4158      00304878 
 4158      40380000 
 4159 0348 00001C20 		.ascii	"\000\000\034  x   x\000\000"
 4159      20782020 
 4159      20780000 
 4160 0354 00000000 		.ascii	"\000\000\000\000\000<H0@xD8"
 4160      003C4830 
 4160      40784438 
 4161 0360 0000C040 		.ascii	"\000\000\300@@pHHH\354\000\000"
 4161      40704848 
 4161      48EC0000 
 4162 036c 00002000 		.ascii	"\000\000 \000\000`   p\000\000"
 4162      00602020 
 4162      20700000 
 4163 0378 00001000 		.ascii	"\000\000\020\000\0000\020\020\020\020\020\340"
 4163      00301010 
 4163      101010E0 
 4164 0384 0000C040 		.ascii	"\000\000\300@@\\PpH\354\000\000"
 4164      405C5070 
 4164      48EC0000 
 4165 0390 0000E020 		.ascii	"\000\000\340      \370\000\000"
 4165      20202020 
 4165      20F80000 
ARM GAS  /tmp/ccWgdbjA.s 			page 104


 4166 039c 00000000 		.ascii	"\000\000\000\000\000\360\250\250\250\250\000\000"
 4166      00F0A8A8 
 4166      A8A80000 
 4167 03a8 00000000 		.ascii	"\000\000\000\000\000\360HHH\354\000\000"
 4167      00F04848 
 4167      48EC0000 
 4168 03b4 00000000 		.ascii	"\000\000\000\000\0000HHH0\000\000"
 4168      00304848 
 4168      48300000 
 4169 03c0 00000000 		.ascii	"\000\000\000\000\000\360HHHp@\340"
 4169      00F04848 
 4169      487040E0 
 4170 03cc 00000000 		.ascii	"\000\000\000\000\0008HHH8\010\034"
 4170      00384848 
 4170      4838081C 
 4171 03d8 00000000 		.ascii	"\000\000\000\000\000\330`@@\340\000\000"
 4171      00D86040 
 4171      40E00000 
 4172 03e4 00000000 		.ascii	"\000\000\000\000\000x@0\010x\000\000"
 4172      00784030 
 4172      08780000 
 4173 03f0 00000020 		.ascii	"\000\000\000  p   \030\000\000"
 4173      20702020 
 4173      20180000 
 4174 03fc 00000000 		.ascii	"\000\000\000\000\000\330HHH<\000\000"
 4174      00D84848 
 4174      483C0000 
 4175 0408 00000000 		.ascii	"\000\000\000\000\000\354HP0 \000\000"
 4175      00EC4850 
 4175      30200000 
 4176 0414 00000000 		.ascii	"\000\000\000\000\000\250\250pPP\000\000"
 4176      00A8A870 
 4176      50500000 
 4177 0420 00000000 		.ascii	"\000\000\000\000\000\330P P\330\000\000"
 4177      00D85020 
 4177      50D80000 
 4178 042c 00000000 		.ascii	"\000\000\000\000\000\354HP0  \300"
 4178      00EC4850 
 4178      302020C0 
 4179 0438 00000000 		.ascii	"\000\000\000\000\000x\020  x\000\000"
 4179      00781020 
 4179      20780000 
 4180 0444 00181010 		.ascii	"\000\030\020\020\020 \020\020\020\020\030\000"
 4180      10201010 
 4180      10101800 
 4181 0450 10101010 		.ascii	"\020\020\020\020\020\020\020\020\020\020\020\020"
 4181      10101010 
 4181      10101010 
 4182 045c 00602020 		.ascii	"\000`   \020    `\000"
 4182      20102020 
 4182      20206000 
 4183 0468 40A41800 		.ascii	"@\244\030\000\000\000\000\000\000\000\000\000"
 4183      00000000 
 4183      00000000 
 4184              		.section	.rodata.asc2_1608,"a"
 4185              		.align	2
 4186              		.set	.LANCHOR1,. + 0
ARM GAS  /tmp/ccWgdbjA.s 			page 105


 4189              	asc2_1608:
 4190 0000 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 4190      00000000 
 4190      00000000 
 4190      00
 4191 000d 000000   		.ascii	"\000\000\000"
 4192 0010 00000010 		.ascii	"\000\000\000\020\020\020\020\020\020\020\000\000\030"
 4192      10101010 
 4192      10100000 
 4192      18
 4193 001d 180000   		.ascii	"\030\000\000"
 4194 0020 00123624 		.ascii	"\000\0226$H\000\000\000\000\000\000\000\000\000\000"
 4194      48000000 
 4194      00000000 
 4194      000000
 4195 002f 00       		.ascii	"\000"
 4196 0030 00000024 		.ascii	"\000\000\000$$$\376HHH\376HHH\000\000"
 4196      2424FE48 
 4196      4848FE48 
 4196      48480000 
 4197 0040 00001038 		.ascii	"\000\000\0208TTP0\030\024\024TT8\020\020"
 4197      54545030 
 4197      18141454 
 4197      54381010 
 4198 0050 00000044 		.ascii	"\000\000\000D\244\250\250\250T\032***D\000\000"
 4198      A4A8A8A8 
 4198      541A2A2A 
 4198      2A440000 
 4199 0060 00000030 		.ascii	"\000\000\0000HHHPn\244\224\210\211v\000\000"
 4199      48484850 
 4199      6EA49488 
 4199      89760000 
 4200 0070 00606020 		.ascii	"\000`` \300\000\000\000\000\000\000\000\000\000\000"
 4200      C0000000 
 4200      00000000 
 4200      000000
 4201 007f 00       		.ascii	"\000"
 4202 0080 00020408 		.ascii	"\000\002\004\010\010\020\020\020\020\020\020\010\010"
 4202      08101010 
 4202      10101008 
 4202      08
 4203 008d 040200   		.ascii	"\004\002\000"
 4204 0090 00402010 		.ascii	"\000@ \020\020\010\010\010\010\010\010\020\020 @\000"
 4204      10080808 
 4204      08080810 
 4204      10204000 
 4205 00a0 00000000 		.ascii	"\000\000\000\000\020\020\32688\326\020\020\000\000\000"
 4205      1010D638 
 4205      38D61010 
 4205      000000
 4206 00af 00       		.ascii	"\000"
 4207 00b0 00000000 		.ascii	"\000\000\000\000\020\020\020\020\376\020\020\020\020"
 4207      10101010 
 4207      FE101010 
 4207      10
 4208 00bd 000000   		.ascii	"\000\000\000"
 4209 00c0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000`` "
ARM GAS  /tmp/ccWgdbjA.s 			page 106


 4209      00000000 
 4209      00000000 
 4209      606020
 4210 00cf C0       		.ascii	"\300"
 4211 00d0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\177\000\000\000\000"
 4211      00000000 
 4211      7F000000 
 4211      00
 4212 00dd 000000   		.ascii	"\000\000\000"
 4213 00e0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000``\000"
 4213      00000000 
 4213      00000000 
 4213      606000
 4214 00ef 00       		.ascii	"\000"
 4215 00f0 00000102 		.ascii	"\000\000\001\002\002\004\004\010\010\020\020  @@\000"
 4215      02040408 
 4215      08101020 
 4215      20404000 
 4216 0100 00000018 		.ascii	"\000\000\000\030$BBBBBBB$\030\000\000"
 4216      24424242 
 4216      42424242 
 4216      24180000 
 4217 0110 00000010 		.ascii	"\000\000\000\020p\020\020\020\020\020\020\020\020|\000"
 4217      70101010 
 4217      10101010 
 4217      107C00
 4218 011f 00       		.ascii	"\000"
 4219 0120 0000003C 		.ascii	"\000\000\000<BBB\004\004\010\020 B~\000\000"
 4219      42424204 
 4219      04081020 
 4219      427E0000 
 4220 0130 0000003C 		.ascii	"\000\000\000<BB\004\030\004\002\002BD8\000\000"
 4220      42420418 
 4220      04020242 
 4220      44380000 
 4221 0140 00000004 		.ascii	"\000\000\000\004\014\024$$DD~\004\004\036\000\000"
 4221      0C142424 
 4221      44447E04 
 4221      041E0000 
 4222 0150 0000007E 		.ascii	"\000\000\000~@@@Xd\002\002BD8\000\000"
 4222      40404058 
 4222      64020242 
 4222      44380000 
 4223 0160 0000001C 		.ascii	"\000\000\000\034$@@XdBBB$\030\000\000"
 4223      24404058 
 4223      64424242 
 4223      24180000 
 4224 0170 0000007E 		.ascii	"\000\000\000~DD\010\010\020\020\020\020\020\020\000"
 4224      44440808 
 4224      10101010 
 4224      101000
 4225 017f 00       		.ascii	"\000"
 4226 0180 0000003C 		.ascii	"\000\000\000<BBB$\030$BBB<\000\000"
 4226      42424224 
 4226      18244242 
 4226      423C0000 
 4227 0190 00000018 		.ascii	"\000\000\000\030$BBB&\032\002\002$8\000\000"
ARM GAS  /tmp/ccWgdbjA.s 			page 107


 4227      24424242 
 4227      261A0202 
 4227      24380000 
 4228 01a0 00000000 		.ascii	"\000\000\000\000\000\000\030\030\000\000\000\000\030"
 4228      00001818 
 4228      00000000 
 4228      18
 4229 01ad 180000   		.ascii	"\030\000\000"
 4230 01b0 00000000 		.ascii	"\000\000\000\000\000\000\000\020\000\000\000\000\000"
 4230      00000010 
 4230      00000000 
 4230      00
 4231 01bd 101020   		.ascii	"\020\020 "
 4232 01c0 00000002 		.ascii	"\000\000\000\002\004\010\020 @ \020\010\004\002\000"
 4232      04081020 
 4232      40201008 
 4232      040200
 4233 01cf 00       		.ascii	"\000"
 4234 01d0 00000000 		.ascii	"\000\000\000\000\000\000\376\000\000\000\376\000\000"
 4234      0000FE00 
 4234      0000FE00 
 4234      00
 4235 01dd 000000   		.ascii	"\000\000\000"
 4236 01e0 00000040 		.ascii	"\000\000\000@ \020\010\004\002\004\010\020 @\000\000"
 4236      20100804 
 4236      02040810 
 4236      20400000 
 4237 01f0 0000003C 		.ascii	"\000\000\000<BBb\002\004\010\010\000\030\030\000\000"
 4237      42426202 
 4237      04080800 
 4237      18180000 
 4238 0200 00000038 		.ascii	"\000\000\0008DZ\252\252\252\252\264BD8\000\000"
 4238      445AAAAA 
 4238      AAAAB442 
 4238      44380000 
 4239 0210 00000010 		.ascii	"\000\000\000\020\020\030(($<DBB\347\000\000"
 4239      10182828 
 4239      243C4442 
 4239      42E70000 
 4240 0220 000000F8 		.ascii	"\000\000\000\370DDDxDBBBD\370\000\000"
 4240      44444478 
 4240      44424242 
 4240      44F80000 
 4241 0230 0000003E 		.ascii	"\000\000\000>BB\200\200\200\200\200BD8\000\000"
 4241      42428080 
 4241      80808042 
 4241      44380000 
 4242 0240 000000F8 		.ascii	"\000\000\000\370DBBBBBBBD\370\000\000"
 4242      44424242 
 4242      42424242 
 4242      44F80000 
 4243 0250 000000FC 		.ascii	"\000\000\000\374BHHxHH@BB\374\000\000"
 4243      42484878 
 4243      48484042 
 4243      42FC0000 
 4244 0260 000000FC 		.ascii	"\000\000\000\374BHHxHH@@@\340\000\000"
 4244      42484878 
ARM GAS  /tmp/ccWgdbjA.s 			page 108


 4244      48484040 
 4244      40E00000 
 4245 0270 0000003C 		.ascii	"\000\000\000<DD\200\200\200\216\204DD8\000\000"
 4245      44448080 
 4245      808E8444 
 4245      44380000 
 4246 0280 000000E7 		.ascii	"\000\000\000\347BBBB~BBBB\347\000\000"
 4246      42424242 
 4246      7E424242 
 4246      42E70000 
 4247 0290 0000007C 		.ascii	"\000\000\000|\020\020\020\020\020\020\020\020\020|\000"
 4247      10101010 
 4247      10101010 
 4247      107C00
 4248 029f 00       		.ascii	"\000"
 4249 02a0 0000003E 		.ascii	"\000\000\000>\010\010\010\010\010\010\010\010\010\010"
 4249      08080808 
 4249      08080808 
 4249      0808
 4250 02ae 88F0     		.ascii	"\210\360"
 4251 02b0 000000EE 		.ascii	"\000\000\000\356DHPpPHHDD\356\000\000"
 4251      44485070 
 4251      50484844 
 4251      44EE0000 
 4252 02c0 000000E0 		.ascii	"\000\000\000\340@@@@@@@@B\376\000\000"
 4252      40404040 
 4252      40404040 
 4252      42FE0000 
 4253 02d0 000000EE 		.ascii	"\000\000\000\356llllTTTTT\326\000\000"
 4253      6C6C6C6C 
 4253      54545454 
 4253      54D60000 
 4254 02e0 000000C7 		.ascii	"\000\000\000\307bbRRJJJFF\342\000\000"
 4254      62625252 
 4254      4A4A4A46 
 4254      46E20000 
 4255 02f0 00000038 		.ascii	"\000\000\0008D\202\202\202\202\202\202\202D8\000\000"
 4255      44828282 
 4255      82828282 
 4255      44380000 
 4256 0300 000000FC 		.ascii	"\000\000\000\374BBBB|@@@@\340\000\000"
 4256      42424242 
 4256      7C404040 
 4256      40E00000 
 4257 0310 00000038 		.ascii	"\000\000\0008D\202\202\202\202\202\262\312L8\006\000"
 4257      44828282 
 4257      8282B2CA 
 4257      4C380600 
 4258 0320 000000FC 		.ascii	"\000\000\000\374BBB|HHDDB\343\000\000"
 4258      4242427C 
 4258      48484444 
 4258      42E30000 
 4259 0330 0000003E 		.ascii	"\000\000\000>BB@ \030\004\002BB|\000\000"
 4259      42424020 
 4259      18040242 
 4259      427C0000 
 4260 0340 000000FE 		.ascii	"\000\000\000\376\222\020\020\020\020\020\020\020\020"
ARM GAS  /tmp/ccWgdbjA.s 			page 109


 4260      92101010 
 4260      10101010 
 4260      10
 4261 034d 380000   		.ascii	"8\000\000"
 4262 0350 000000E7 		.ascii	"\000\000\000\347BBBBBBBBB<\000\000"
 4262      42424242 
 4262      42424242 
 4262      423C0000 
 4263 0360 000000E7 		.ascii	"\000\000\000\347BBD$$((\030\020\020\000\000"
 4263      42424424 
 4263      24282818 
 4263      10100000 
 4264 0370 000000D6 		.ascii	"\000\000\000\326\222\222\222\222\252\252lDDD\000\000"
 4264      92929292 
 4264      AAAA6C44 
 4264      44440000 
 4265 0380 000000E7 		.ascii	"\000\000\000\347B$$\030\030\030$$B\347\000\000"
 4265      42242418 
 4265      18182424 
 4265      42E70000 
 4266 0390 000000EE 		.ascii	"\000\000\000\356DD((\020\020\020\020\0208\000\000"
 4266      44442828 
 4266      10101010 
 4266      10380000 
 4267 03a0 0000007E 		.ascii	"\000\000\000~\204\004\010\010\020  BB\374\000\000"
 4267      84040808 
 4267      10202042 
 4267      42FC0000 
 4268 03b0 001E1010 		.ascii	"\000\036\020\020\020\020\020\020\020\020\020\020\020"
 4268      10101010 
 4268      10101010 
 4268      10
 4269 03bd 101E00   		.ascii	"\020\036\000"
 4270 03c0 00004040 		.ascii	"\000\000@@  \020\020\020\010\010\004\004\004\002\002"
 4270      20201010 
 4270      10080804 
 4270      04040202 
 4271 03d0 00780808 		.ascii	"\000x\010\010\010\010\010\010\010\010\010\010\010\010"
 4271      08080808 
 4271      08080808 
 4271      0808
 4272 03de 7800     		.ascii	"x\000"
 4273 03e0 001C2200 		.ascii	"\000\034\"\000\000\000\000\000\000\000\000\000\000\000"
 4273      00000000 
 4273      00000000 
 4273      0000
 4274 03ee 0000     		.ascii	"\000\000"
 4275 03f0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 4275      00000000 
 4275      00000000 
 4275      00
 4276 03fd 0000FF   		.ascii	"\000\000\377"
 4277 0400 00601000 		.ascii	"\000`\020\000\000\000\000\000\000\000\000\000\000\000"
 4277      00000000 
 4277      00000000 
 4277      0000
 4278 040e 0000     		.ascii	"\000\000"
ARM GAS  /tmp/ccWgdbjA.s 			page 110


 4279 0410 00000000 		.ascii	"\000\000\000\000\000\000\000<B\036\"BB?\000\000"
 4279      0000003C 
 4279      421E2242 
 4279      423F0000 
 4280 0420 000000C0 		.ascii	"\000\000\000\300@@@XdBBBdX\000\000"
 4280      40404058 
 4280      64424242 
 4280      64580000 
 4281 0430 00000000 		.ascii	"\000\000\000\000\000\000\000\034\"@@@\"\034\000\000"
 4281      0000001C 
 4281      22404040 
 4281      221C0000 
 4282 0440 00000006 		.ascii	"\000\000\000\006\002\002\002\036\"BBB&\033\000\000"
 4282      0202021E 
 4282      22424242 
 4282      261B0000 
 4283 0450 00000000 		.ascii	"\000\000\000\000\000\000\000<B~@@B<\000\000"
 4283      0000003C 
 4283      427E4040 
 4283      423C0000 
 4284 0460 0000000F 		.ascii	"\000\000\000\017\021\020\020~\020\020\020\020\020|\000"
 4284      1110107E 
 4284      10101010 
 4284      107C00
 4285 046f 00       		.ascii	"\000"
 4286 0470 00000000 		.ascii	"\000\000\000\000\000\000\000>DD8@<BB<"
 4286      0000003E 
 4286      44443840 
 4286      3C42423C 
 4287 0480 000000C0 		.ascii	"\000\000\000\300@@@\\bBBBB\347\000\000"
 4287      4040405C 
 4287      62424242 
 4287      42E70000 
 4288 0490 00000030 		.ascii	"\000\000\00000\000\000p\020\020\020\020\020|\000\000"
 4288      30000070 
 4288      10101010 
 4288      107C0000 
 4289 04a0 0000000C 		.ascii	"\000\000\000\014\014\000\000\034\004\004\004\004\004"
 4289      0C00001C 
 4289      04040404 
 4289      04
 4290 04ad 044478   		.ascii	"\004Dx"
 4291 04b0 000000C0 		.ascii	"\000\000\000\300@@@NHPhHD\356\000\000"
 4291      4040404E 
 4291      48506848 
 4291      44EE0000 
 4292 04c0 00000070 		.ascii	"\000\000\000p\020\020\020\020\020\020\020\020\020|\000"
 4292      10101010 
 4292      10101010 
 4292      107C00
 4293 04cf 00       		.ascii	"\000"
 4294 04d0 00000000 		.ascii	"\000\000\000\000\000\000\000\376IIIII\355\000\000"
 4294      000000FE 
 4294      49494949 
 4294      49ED0000 
 4295 04e0 00000000 		.ascii	"\000\000\000\000\000\000\000\334bBBBB\347\000\000"
 4295      000000DC 
ARM GAS  /tmp/ccWgdbjA.s 			page 111


 4295      62424242 
 4295      42E70000 
 4296 04f0 00000000 		.ascii	"\000\000\000\000\000\000\000<BBBBB<\000\000"
 4296      0000003C 
 4296      42424242 
 4296      423C0000 
 4297 0500 00000000 		.ascii	"\000\000\000\000\000\000\000\330dBBBDx@\340"
 4297      000000D8 
 4297      64424242 
 4297      447840E0 
 4298 0510 00000000 		.ascii	"\000\000\000\000\000\000\000\036\"BBB\"\036\002\007"
 4298      0000001E 
 4298      22424242 
 4298      221E0207 
 4299 0520 00000000 		.ascii	"\000\000\000\000\000\000\000\3562    \370\000\000"
 4299      000000EE 
 4299      32202020 
 4299      20F80000 
 4300 0530 00000000 		.ascii	"\000\000\000\000\000\000\000>B@<\002B|\000\000"
 4300      0000003E 
 4300      42403C02 
 4300      427C0000 
 4301 0540 00000000 		.ascii	"\000\000\000\000\000\020\020|\020\020\020\020\020\014"
 4301      0010107C 
 4301      10101010 
 4301      100C
 4302 054e 0000     		.ascii	"\000\000"
 4303 0550 00000000 		.ascii	"\000\000\000\000\000\000\000\306BBBBF;\000\000"
 4303      000000C6 
 4303      42424242 
 4303      463B0000 
 4304 0560 00000000 		.ascii	"\000\000\000\000\000\000\000\347B$$(\020\020\000\000"
 4304      000000E7 
 4304      42242428 
 4304      10100000 
 4305 0570 00000000 		.ascii	"\000\000\000\000\000\000\000\327\222\222\252\252DD\000"
 4305      000000D7 
 4305      9292AAAA 
 4305      444400
 4306 057f 00       		.ascii	"\000"
 4307 0580 00000000 		.ascii	"\000\000\000\000\000\000\000n$\030\030\030$v\000\000"
 4307      0000006E 
 4307      24181818 
 4307      24760000 
 4308 0590 00000000 		.ascii	"\000\000\000\000\000\000\000\347B$$(\030\020\020\340"
 4308      000000E7 
 4308      42242428 
 4308      181010E0 
 4309 05a0 00000000 		.ascii	"\000\000\000\000\000\000\000~D\010\020\020\"~\000\000"
 4309      0000007E 
 4309      44081010 
 4309      227E0000 
 4310 05b0 00030404 		.ascii	"\000\003\004\004\004\004\004\010\004\004\004\004\004"
 4310      04040408 
 4310      04040404 
 4310      04
 4311 05bd 040300   		.ascii	"\004\003\000"
ARM GAS  /tmp/ccWgdbjA.s 			page 112


 4312 05c0 08080808 		.ascii	"\010\010\010\010\010\010\010\010\010\010\010\010\010"
 4312      08080808 
 4312      08080808 
 4312      08
 4313 05cd 080808   		.ascii	"\010\010\010"
 4314 05d0 00601010 		.ascii	"\000`\020\020\020\020\020\010\020\020\020\020\020\020"
 4314      10101008 
 4314      10101010 
 4314      1010
 4315 05de 6000     		.ascii	"`\000"
 4316 05e0 304C4300 		.ascii	"0LC\000\000\000\000\000\000\000\000\000\000\000\000"
 4316      00000000 
 4316      00000000 
 4316      000000
 4317 05ef 00       		.ascii	"\000"
 4318              		.section	.rodata.tfont16,"a"
 4319              		.align	2
 4320              		.set	.LANCHOR2,. + 0
 4323              	tfont16:
 4324 0000 C9EE     		.ascii	"\311\356"
 4325 0002 000027FC 		.ascii	"\000\000'\374\024\004\024\244\201\020B\010@@\020@\027"
 4325      140414A4 
 4325      81104208 
 4325      40401040 
 4325      17
 4326 0013 FC2040E0 		.ascii	"\374 @\340\340!P\"H,F @\000@"
 4326      E0215022 
 4326      482C4620 
 4326      400040
 4327 0022 DBDA     		.ascii	"\333\332"
 4328 0024 11041124 		.ascii	"\021\004\021$\021$\021$\021$\375$\021$\021$\021$\021"
 4328      11241124 
 4328      1124FD24 
 4328      11241124 
 4328      112411
 4329 0037 2411241D 		.ascii	"$\021$\035$\341$B$\002\004\004\004"
 4329      24E12442 
 4329      24020404 
 4329      04
 4330 0044 CAD0     		.ascii	"\312\320"
 4331 0046 02000100 		.ascii	"\002\000\001\000\000\000\177\374\001\000\001\000\001"
 4331      00007FFC 
 4331      01000100 
 4331      01
 4332 0053 003FF821 		.ascii	"\000?\370!\010!\010!\010!\010!(!\020\001\000\001\000"
 4332      08210821 
 4332      08210821 
 4332      28211001 
 4332      000100
 4333 0066 B5E7     		.ascii	"\265\347"
 4334 0068 00000100 		.ascii	"\000\000\001\000\001\000\037\360a\014A\004A\004\177"
 4334      01001FF0 
 4334      610C4104 
 4334      41047F
 4335 0077 FC410441 		.ascii	"\374A\004A\004A\004\177\374\001\000\001\002\001\002"
 4335      0441047F 
 4335      FC010001 
ARM GAS  /tmp/ccWgdbjA.s 			page 113


 4335      020102
 4336 0086 01FC     		.ascii	"\001\374"
 4337 0088 D7D3     		.ascii	"\327\323"
 4338 008a 00000000 		.ascii	"\000\000\000\000?\370\000\020\000`\000\200\001\000\000"
 4338      3FF80010 
 4338      00600080 
 4338      010000
 4339 0099 807FFE00 		.ascii	"\200\177\376\000@\000@\000 \000 \000 \030@\007\200"
 4339      40004000 
 4339      20002000 
 4339      20184007 
 4339      80
 4340 00aa B6AF     		.ascii	"\266\257"
 4341 00ac 00400040 		.ascii	"\000@\000@|@\000@\001\374\000D\376D D D \204H\204D\204"
 4341      7C400040 
 4341      01FC0044 
 4341      FE442044 
 4341      20442084 
 4342 00c4 FD044504 		.ascii	"\375\004E\004\002(\004\020"
 4342      02280410 
 4343 00cc BBB6     		.ascii	"\273\266"
 4344 00ce 00800080 		.ascii	"\000\200\000\200\374\200\004\374\005\004I\010*@\024"
 4344      FC8004FC 
 4344      05044908 
 4344      2A4014
 4345 00dd 40104028 		.ascii	"@\020@(\240$\240E\020\201\020\002\010\004\004\010\002"
 4345      A024A045 
 4345      10811002 
 4345      08040408 
 4345      02
 4346 00ee D3AD     		.ascii	"\323\255"
 4347 00f0 00002080 		.ascii	"\000\000 \200\023<\022$\002$\002$\362$\022$\022$\022"
 4347      133C1224 
 4347      02240224 
 4347      F2241224 
 4347      122412
 4348 0103 B4132812 		.ascii	"\264\023(\022 \020 ( G\376\000\000"
 4348      20102028 
 4348      2047FE00 
 4348      00
 4349 0110 C4FA     		.ascii	"\304\372"
 4350 0112 09000900 		.ascii	"\011\000\011\000\021\3742\004TH\231P\021H\022D\024D"
 4350      11FC3204 
 4350      54489950 
 4350      11481244 
 4350      1444
 4351 0124 11401080 		.ascii	"\021@\020\200\002\000Q\004Q\022\220\022\017\360"
 4351      02005104 
 4351      51129012 
 4351      0FF0
 4352 0132 B4BF     		.ascii	"\264\277"
 4353 0134 00000020 		.ascii	"\000\000\000 \020 \023\376  &$J$z$\022$\"$#\374| \000"
 4353      102013FE 
 4353      20202624 
 4353      4A247A24 
 4353      12242224 
 4354 014d 22042278 		.ascii	"\"\004\"x\"\000<"
ARM GAS  /tmp/ccWgdbjA.s 			page 114


 4354      22003C
 4355 0154 C9AB     		.ascii	"\311\253"
 4356 0156 00000000 		.ascii	"\000\000\000\000\004\000\017\360\020   \177\374 \204"
 4356      04000FF0 
 4356      10202020 
 4356      7FFC2084 
 4357 0166 20842084 		.ascii	" \204 \204 \204?\370 \000 \002 \002\037\376"
 4357      20843FF8 
 4357      20002002 
 4357      20021FFE 
 4358 0176 CCEE     		.ascii	"\314\356"
 4359 0178 00000000 		.ascii	"\000\000\000\000 @#\376 @y\374\"\004#\374\"\004#\374"
 4359      204023FE 
 4359      204079FC 
 4359      220423FC 
 4359      220423FC 
 4360 018c 220423FC 		.ascii	"\"\004#\374:\004e\372\001\230\002\004"
 4360      3A0465FA 
 4360      01980204 
 4361 0198 B3E4     		.ascii	"\263\344"
 4362 019a 00000100 		.ascii	"\000\000\001\000\001\000\177\376\002 \004\020\004\010"
 4362      01007FFE 
 4362      02200410 
 4362      0408
 4363 01a8 08043FFC 		.ascii	"\010\004?\374\004B\004@\004@\004B\010B\020B`~"
 4363      04420440 
 4363      04400442 
 4363      08421042 
 4363      607E
 4364 01ba BED8     		.ascii	"\276\330"
 4365 01bc 00000000 		.ascii	"\000\000\000\000 ~>\200H\200H\200H\376H\202\177\202"
 4365      207E3E80 
 4365      48804880 
 4365      48FE4882 
 4365      7F82
 4366 01ce 08820C82 		.ascii	"\010\202\014\202\024\372\022\204\"\200!\200@\376"
 4366      14FA1284 
 4366      22802180 
 4366      40FE
 4367 01dc D0CE     		.ascii	"\320\316"
 4368 01de 00000000 		.ascii	"\000\000\000\000\177\204\"\010\"0\"\300\"\002\"\004"
 4368      7F842208 
 4368      223022C0 
 4368      22022204 
 4369 01ee 7FC82230 		.ascii	"\177\310\"0\"\302\"\002\"\004\"\010\"0@@"
 4369      22C22202 
 4369      22042208 
 4369      22304040 
 4370 01fe BBAD     		.ascii	"\273\255"
 4371 0200 00000000 		.ascii	"\000\000\000\000\177\376\000\000\017\360\021\020\021"
 4371      7FFE0000 
 4371      0FF01110 
 4371      11
 4372 020d 10111051 		.ascii	"\020\021\020Q\022_\362Q\022Q\022Q\022O\362@\002\177"
 4372      125FF251 
 4372      12511251 
 4372      124FF240 
ARM GAS  /tmp/ccWgdbjA.s 			page 115


 4372      027F
 4373 021f FC       		.ascii	"\374"
 4374 0220 D4B2     		.ascii	"\324\262"
 4375 0222 00000000 		.ascii	"\000\000\000\000\177\376G\342H\022H\022G\342O\362P\022"
 4375      7FFE47E2 
 4375      48124812 
 4375      47E24FF2 
 4375      5012
 4376 0234 50125112 		.ascii	"P\022Q\022Q\022B\222DrX\012?\374"
 4376      51124292 
 4376      4472580A 
 4376      3FFC
 4377 0242 CDBC     		.ascii	"\315\274"
 4378 0244 00000000 		.ascii	"\000\000\000\000?\376D\002G\362L\"Sb@\202Cb^\032A\202"
 4378      3FFE4402 
 4378      47F24C22 
 4378      53624082 
 4378      43625E1A 
 4379 025a 40624302 		.ascii	"@bC\002@\302@\"?\374"
 4379      40C24022 
 4379      3FFC
 4380 0264 C6AC     		.ascii	"\306\254"
 4381 0266 00000040 		.ascii	"\000\000\000@ @ @ @?\376 \000 \000 \000?\340 \020 \020"
 4381      20402040 
 4381      20403FFE 
 4381      20002000 
 4381      20003FE0 
 4382 027e 20102010 		.ascii	" \020 \020@\020@\020"
 4382      40104010 
 4383 0286 CFD4     		.ascii	"\317\324"
 4384 0288 00000000 		.ascii	"\000\000\000\000?\374 \004 \004?\374 \004 \004\037\370"
 4384      3FFC2004 
 4384      20043FFC 
 4384      20042004 
 4384      1FF8
 4385 029a 24441448 		.ascii	"$D\024H\024H\024H\014P\004@\177\376"
 4385      14481448 
 4385      0C500440 
 4385      7FFE
 4386 02a8 CABE     		.ascii	"\312\276"
 4387 02aa 00000000 		.ascii	"\000\000\000\000?\374\000\000\000\000\000\000\177\376"
 4387      3FFC0000 
 4387      00000000 
 4387      7FFE
 4388 02b8 00800890 		.ascii	"\000\200\010\220\010\210\020\210\020\204 \204 \202@"
 4388      08881088 
 4388      10842084 
 4388      208240
 4389 02c7 820780   		.ascii	"\202\007\200"
 4390 02ca B2CB     		.ascii	"\262\313"
 4391 02cc 00000020 		.ascii	"\000\000\000 \010 \177\376\000 \000x?\210\021\010\010"
 4391      08207FFE 
 4391      00200078 
 4391      3F881108 
 4391      08
 4392 02dd 9009207F 		.ascii	"\220\011 \177\376\001\200\003@\01501\014@\002"
 4392      FE018003 
ARM GAS  /tmp/ccWgdbjA.s 			page 116


 4392      400D3031 
 4392      0C4002
 4393 02ec B5A5     		.ascii	"\265\245"
 4394 02ee 00000010 		.ascii	"\000\000\000\020\010\020\004 ?\370!\004!\004?\374!\004"
 4394      08100420 
 4394      3FF82104 
 4394      21043FFC 
 4394      2104
 4395 0300 21043FF8 		.ascii	"!\004?\370\001\000\177\376\001\000\001\000\001\000"
 4395      01007FFE 
 4395      01000100 
 4395      0100
 4396 030e D6D0     		.ascii	"\326\320"
 4397 0310 00000100 		.ascii	"\000\000\001\000\001\000\001\000?\374!\004!\004!\004"
 4397      01000100 
 4397      3FFC2104 
 4397      21042104 
 4398 0320 21042104 		.ascii	"!\004!\004!\004?\374\001\000\001\000\001\000\001\000"
 4398      21043FFC 
 4398      01000100 
 4398      01000100 
 4399 0330 D3A2     		.ascii	"\323\242"
 4400 0332 00000000 		.ascii	"\000\000\000\000\010 \177\376\010 \011 \001\000?\370"
 4400      08207FFE 
 4400      08200920 
 4400      01003FF8 
 4401 0342 21082108 		.ascii	"!\010!\010!\010\037\364\001@\002 \014\020p\016"
 4401      21081FF4 
 4401      01400220 
 4401      0C10700E 
 4402 0352 CEC4     		.ascii	"\316\304"
 4403 0354 00000100 		.ascii	"\000\000\001\000\001\000\000\200?|\010\020\010\020\004"
 4403      01000080 
 4403      3F7C0810 
 4403      081004
 4404 0363 10042002 		.ascii	"\020\004 \002 \002@\001\200\001\200\002`\034\030\340"
 4404      20024001 
 4404      80018002 
 4404      601C18E0 
 4405 0373 06       		.ascii	"\006"
 4406 0374 D7DB     		.ascii	"\327\333"
 4407 0376 00000000 		.ascii	"\000\000\000\000\020 \021\376\"\002\"\002I\374X\000"
 4407      102011FE 
 4407      22022202 
 4407      49FC5800 
 4408 0386 300013FE 		.ascii	"0\000\023\376%(y$\001$\015$r\"\002\242"
 4408      25287924 
 4408      01240D24 
 4408      722202A2 
 4409 0396 BACF     		.ascii	"\272\317"
 4410 0398 00000000 		.ascii	"\000\000\000\000\001\200\002@\0040\030\010`\006\037"
 4410      01800240 
 4410      04301808 
 4410      60061F
 4411 03a7 F800001F 		.ascii	"\370\000\000\037\370 \004 \004 \004 \004 \004\037\370"
 4411      F8200420 
 4411      04200420 
ARM GAS  /tmp/ccWgdbjA.s 			page 117


 4411      0420041F 
 4411      F8
 4412 03b8 C1C1     		.ascii	"\301\301"
 4413 03ba 00000100 		.ascii	"\000\000\001\000\001\000\177\376\000\000?\370 \010?"
 4413      01007FFE 
 4413      00003FF8 
 4413      20083F
 4414 03c9 F83FF840 		.ascii	"\370?\370@\006G\302H$\010 \010\"\020\"`>"
 4414      0647C248 
 4414      24082008 
 4414      22102260 
 4414      3E
 4415 03da B6C8     		.ascii	"\266\310"
 4416 03dc 00000000 		.ascii	"\000\000\000\000\000\200?\376D\020_\374D\020D\020C\360"
 4416      00803FFE 
 4416      44105FFC 
 4416      44104410 
 4416      43F0
 4417 03ee 40005FF8 		.ascii	"@\000_\370D\010B0A\300C`\274\036"
 4417      44084230 
 4417      41C04360 
 4417      BC1E
 4418 03fc B2E2     		.ascii	"\262\342"
 4419 03fe 00000000 		.ascii	"\000\000\000\000g\302\024R\005R\005R\305R%R\005R\005"
 4419      67C21452 
 4419      05520552 
 4419      C5522552 
 4419      055205
 4420 0411 52155217 		.ascii	"R\025R\027R\"\202\"BDBH>"
 4420      52228222 
 4420      42444248 
 4420      3E
 4421 041e CAD4     		.ascii	"\312\324"
 4422 0420 00000000 		.ascii	"\000\000\000\000 \024\020\024\027\376\000\022\000\020"
 4422      20141014 
 4422      17FE0012 
 4422      0010
 4423 042e 601013F0 		.ascii	"`\020\023\360\020\220\020\220\020\220\024\222\024\352"
 4423      10901090 
 4423      10901492 
 4423      14EA
 4424 043c 1F0A0006 		.ascii	"\037\012\000\006"
 4425 0440 B3CC     		.ascii	"\263\314"
 4426 0442 00000000 		.ascii	"\000\000\000\000\031\376r\002\022\002\022\002}\374\030"
 4426      19FE7202 
 4426      12021202 
 4426      7DFC18
 4427 0451 001BFE34 		.ascii	"\000\033\3764 P S\376\020 \020 \020 \023\376"
 4427      20502053 
 4427      FE102010 
 4427      20102013 
 4427      FE
 4428 0462 D0F2     		.ascii	"\320\362"
 4429 0464 00000000 		.ascii	"\000\000\000\000\000\200?\376@\000G\374B\010A0@\300"
 4429      00803FFE 
 4429      400047FC 
 4429      42084130 
ARM GAS  /tmp/ccWgdbjA.s 			page 118


 4429      40C0
 4430 0476 5FFE4042 		.ascii	"_\376@B@B@D@H@@D@"
 4430      40424044 
 4430      40484040 
 4430      4440
 4431 0484 B5F7     		.ascii	"\265\367"
 4432 0486 00000000 		.ascii	"\000\000\000\000#\376\022\"\002\372\002\"\342\"\022"
 4432      23FE1222 
 4432      02FA0222 
 4432      E22212
 4433 0495 FE127212 		.ascii	"\376\022r\022\212\022\212\022\212\026\272\032B\022\002"
 4433      8A128A12 
 4433      8A16BA1A 
 4433      421202
 4434 04a4 040E     		.ascii	"\004\016"
 4435 04a6 B9E2     		.ascii	"\271\342"
 4436 04a8 00000100 		.ascii	"\000\000\001\000\001\004\021\010\011\010\011\020\011"
 4436      01041108 
 4436      09080910 
 4436      09
 4437 04b5 207FFE04 		.ascii	" \177\376\004@\004@\004@\004@\010B\010B\020B`|"
 4437      40044004 
 4437      40044008 
 4437      42084210 
 4437      42607C
 4438 04c8 B0E6     		.ascii	"\260\346"
 4439 04ca 00000000 		.ascii	"\000\000\000\000H\376I\000I\000I\000~\376A\202ADyDE"
 4439      48FE4900 
 4439      49004900 
 4439      7EFE4182 
 4439      41447944 
 4440 04df 28452845 		.ascii	"(E(E\020E(FD\003\202"
 4440      10452846 
 4440      440382
 4441 04ea C8A8     		.ascii	"\310\250"
 4442 04ec 00001000 		.ascii	"\000\000\020\000\020\000\023\374}\004\021\004\031\004"
 4442      100013FC 
 4442      7D041104 
 4442      1904
 4443 04fa 18843488 		.ascii	"\030\2044\210PHPP\020 \020P\020\210\023\004\024\002"
 4443      50485050 
 4443      10201050 
 4443      10881304 
 4443      1402
 4444 050c CBF9     		.ascii	"\313\371"
 4445 050e 00000000 		.ascii	"\000\000\000\000?| @ @>@\"~\"D\"D\"D>\204 \204 \204"
 4445      3F7C2040 
 4445      20403E40 
 4445      227E2244 
 4445      22442244 
 4446 0528 40844104 		.ascii	"@\204A\004B\004"
 4446      4204
 4447 052e C6C1     		.ascii	"\306\301"
 4448 0530 00003FF8 		.ascii	"\000\000?\370 \010 \010?\370$\020\" /\370\" \" ?\374"
 4448      20082008 
 4448      3FF82410 
 4448      22202FF8 
ARM GAS  /tmp/ccWgdbjA.s 			page 119


 4448      22202220 
 4449 0546 22204220 		.ascii	"\" B D \204 \010 "
 4449      44208420 
 4449      0820
 4450 0550 C4BB     		.ascii	"\304\273"
 4451 0552 04407FFC 		.ascii	"\004@\177\374\004@\037\360\020\020\037\360\020\020\037"
 4451      04401FF0 
 4451      10101FF0 
 4451      10101F
 4452 0561 F00400FF 		.ascii	"\360\004\000\377\376\021\020?\370\321\026\021P\021 "
 4452      FE11103F 
 4452      F8D11611 
 4452      501120
 4453 0570 0100     		.ascii	"\001\000"
 4454 0572 D0FD     		.ascii	"\320\375"
 4455 0574 20801080 		.ascii	" \200\020\200\020\376\001\000\376\000!\374 $<$$\240"
 4455      10FE0100 
 4455      FE0021FC 
 4455      20243C24 
 4455      24A0
 4456 0586 24A024BC 		.ascii	"$\240$\274$\240$\240E`U>\212\000"
 4456      24A024A0 
 4456      4560553E 
 4456      8A00
 4457 0594 D7AA     		.ascii	"\327\252"
 4458 0596 20202020 		.ascii	"      \375\374@ P@\223\376\374@\020\200\021\374\034"
 4458      2020FDFC 
 4458      40205040 
 4458      93FEFC40 
 4458      108011FC 
 4459 05ab 04F08850 		.ascii	"\004\360\210PP\020 \020\020\020\020"
 4459      50102010 
 4459      101010
 4460 05b6 BFAA     		.ascii	"\277\252"
 4461 05b8 00007FFC 		.ascii	"\000\000\177\374\010 \010 \010 \010 \010 \377\376\010"
 4461      08200820 
 4461      08200820 
 4461      0820FFFE 
 4461      08
 4462 05c9 20082008 		.ascii	" \010 \010 \010 \020 \020   @ "
 4462      20082010 
 4462      20102020 
 4462      204020
 4463 05d8 D4B4     		.ascii	"\324\264"
 4464 05da 000027FE 		.ascii	"\000\000'\376\024 \024@\205\374E\004E\374\025\004\025"
 4464      14201440 
 4464      85FC4504 
 4464      45FC1504 
 4464      15
 4465 05eb FC2524E4 		.ascii	"\374%$\344 $\250)$*\"0\240\000@"
 4465      2024A829 
 4465      242A2230 
 4465      A00040
 4466 05fa D2BA     		.ascii	"\322\272"
 4467 05fc 00802040 		.ascii	"\000\200 @\027\376\021 \201 B<BD\026d\022\224#H\342"
 4467      17FE1120 
 4467      8120423C 
ARM GAS  /tmp/ccWgdbjA.s 			page 120


 4467      42441664 
 4467      12942348 
 4468 0611 48223022 		.ascii	"H\"0\" \"P\"\210\003\006"
 4468      20225022 
 4468      880306
 4469 061c BEA7     		.ascii	"\276\247"
 4470 061e 0FE00820 		.ascii	"\017\340\010 \010 \017\340\010 \010 \017\340\000\000"
 4470      08200FE0 
 4470      08200820 
 4470      0FE00000 
 4471 062e 7EFC4284 		.ascii	"~\374B\204B\204~\374B\204B\204~\374B\204"
 4471      42847EFC 
 4471      42844284 
 4471      7EFC4284 
 4472 063e CDF8     		.ascii	"\315\370"
 4473 0640 00007FFC 		.ascii	"\000\000\177\374@\004@\004B\024R\224JTD$D$JTJTR\224"
 4473      40044004 
 4473      42145294 
 4473      4A544424 
 4473      44244A54 
 4474 0658 61044004 		.ascii	"a\004@\004@\024@\010"
 4474      40144008 
 4475 0660 D5BE     		.ascii	"\325\276"
 4476 0662 10200820 		.ascii	"\020 \010 \010 ~ \000>\004 D D %\374)\004)\004\017\004"
 4476      08207E20 
 4476      003E0420 
 4476      44204420 
 4476      25FC2904 
 4477 067a F1044104 		.ascii	"\361\004A\004\001\374\001\004"
 4477      01FC0104 
 4478 0682 B0B4     		.ascii	"\260\264"
 4479 0684 10401020 		.ascii	"\020@\020 \020 \023\376\372\002\024D\020@\033\3760\210"
 4479      102013FE 
 4479      FA021444 
 4479      10401BFE 
 4479      3088
 4480 0696 D0881108 		.ascii	"\320\210\021\010\020\320\020 \020PP\210#\004"
 4480      10D01020 
 4480      10505088 
 4480      2304
 4481 06a4 BCFC     		.ascii	"\274\374"
 4482 06a6 20102010 		.ascii	" \020 \020;|!\024A\376z\024\242|'\020\371|%\020%\376"
 4482      3B7C2114 
 4482      41FE7A14 
 4482      A27C2710 
 4482      F97C2510 
 4483 06bc 22102A10 		.ascii	"\"\020*\0205\000(\376\000\000"
 4483      350028FE 
 4483      0000
 4484 06c6 D0A3     		.ascii	"\320\243"
 4485 06c8 10401020 		.ascii	"\020@\020 \020 \021\376\374\000\020\2101\004:\002T\210"
 4485      102011FE 
 4485      FC001088 
 4485      31043A02 
 4485      5488
 4486 06da 50889050 		.ascii	"P\210\220P\020P\020 \020P\020\210\023\006"
 4486      10501020 
ARM GAS  /tmp/ccWgdbjA.s 			page 121


 4486      10501088 
 4486      1306
 4487 06e8 D7BC     		.ascii	"\327\274"
 4488 06ea 01404120 		.ascii	"\001@A ! #\376\002 \026 \033\374\022 \" #\374\342 \""
 4488      212023FE 
 4488      02201620 
 4488      1BFC1220 
 4488      222023FC 
 4489 0701 20222023 		.ascii	" \" #\376\"\000\002\000"
 4489      FE220002 
 4489      00
 4490 070a B4A5     		.ascii	"\264\245"
 4491 070c 20202020 		.ascii	"    x I\374\221$}$U$U$}\374U$T |(T$W\376E\002\214\000"
 4491      782049FC 
 4491      91247D24 
 4491      55245524 
 4491      7DFC5524 
 4492 072c C3FE     		.ascii	"\303\376"
 4493 072e 11101110 		.ascii	"\021\020\021\020\027\374\021\020\374\000\023\370\022"
 4493      17FC1110 
 4493      FC0013F8 
 4493      12
 4494 073b 0817F81A 		.ascii	"\010\027\370\032\0103\370\320@\027\374\020\240\021\020"
 4494      0833F8D0 
 4494      4017FC10 
 4494      A01110
 4495 074a 52082406 		.ascii	"R\010$\006"
 4496 074e B6C1     		.ascii	"\266\301"
 4497 0750 00202020 		.ascii	"\000   \021\374\020 \000 \003\376\360\002\020\224\020"
 4497      11FC1020 
 4497      002003FE 
 4497      F0021094 
 4497      10
 4498 0761 50111010 		.ascii	"P\021\020\020\220\023\376\024(\030D\020\202\003\002"
 4498      9013FE14 
 4498      28184410 
 4498      820302
 4499 0770 BACD     		.ascii	"\272\315"
 4500 0772 04000E00 		.ascii	"\004\000\016\000x\000\010|\010D\377D\010D\030D\034D"
 4500      7800087C 
 4500      0844FF44 
 4500      08441844 
 4500      1C44
 4501 0784 2A442A44 		.ascii	"*D*DHD\210|\010D\010\000\010\000"
 4501      4844887C 
 4501      08440800 
 4501      0800
 4502 0792 D1D5     		.ascii	"\321\325"
 4503 0794 100008FE 		.ascii	"\020\000\010\376\177\020\" \024|\177DDTHTRTDTHTQTB("
 4503      7F102220 
 4503      147C7F44 
 4503      44544854 
 4503      52544454 
 4504 07ae 44248842 		.ascii	"D$\210B0\202"
 4504      3082
 4505 07b4 D6B5     		.ascii	"\326\265"
 4506 07b6 08400840 		.ascii	"\010@\010@\017\374\020@\020@3\3702\010S\370\222\010"
ARM GAS  /tmp/ccWgdbjA.s 			page 122


 4506      0FFC1040 
 4506      104033F8 
 4506      320853F8 
 4506      9208
 4507 07c8 13F81208 		.ascii	"\023\370\022\010\023\370\022\010\022\010\037\376\020"
 4507      13F81208 
 4507      12081FFE 
 4507      10
 4508 07d5 00       		.ascii	"\000"
 4509 07d6 C8DD     		.ascii	"\310\335"
 4510 07d8 02000100 		.ascii	"\002\000\001\000\177\376@\002\210$\021\020\"\210\004"
 4510      7FFE4002 
 4510      88241110 
 4510      228804
 4511 07e7 40082030 		.ascii	"@\010 0\030\337\366\020\020\020\020\020\020\037\360"
 4511      18DFF610 
 4511      10101010 
 4511      101FF0
 4512 07f6 1010     		.ascii	"\020\020"
 4513 07f8 D6A7     		.ascii	"\326\247"
 4514 07fa 01000100 		.ascii	"\001\000\001\000\001\000\177\374\001\000\001\000\001"
 4514      01007FFC 
 4514      01000100 
 4514      01
 4515 0807 003FF010 		.ascii	"\000?\360\020\020\010 \004@\002\200\001\000\006\300"
 4515      10082004 
 4515      40028001 
 4515      0006C0
 4516 0816 1830E00E 		.ascii	"\0300\340\016"
 4517 081a B3D6     		.ascii	"\263\326"
 4518 081c 10201020 		.ascii	"\020 \020 \020 \021\374\374 \020 \023\376\020\010\030"
 4518      102011FC 
 4518      FC201020 
 4518      13FE1008 
 4518      18
 4519 082d 0833FED0 		.ascii	"\0103\376\320\010\020\210\020H\020\010P( \020"
 4519      08108810 
 4519      48100850 
 4519      282010
 4520 083c B5E3     		.ascii	"\265\343"
 4521 083e 02000200 		.ascii	"\002\000\002\000\002\000\003\374\002\000\002\000?\360"
 4521      020003FC 
 4521      02000200 
 4521      3FF0
 4522 084c 20102010 		.ascii	" \020 \020 \020?\360\000\000$\210\"DBD\200\004"
 4522      20103FF0 
 4522      00002488 
 4522      22444244 
 4522      8004
 4523 085e CCAC     		.ascii	"\314\254"
 4524 0860 01000100 		.ascii	"\001\000\001\000\177\374\001\000\002\200\004@\012 1"
 4524      7FFC0100 
 4524      02800440 
 4524      0A2031
 4525 086f 18C00601 		.ascii	"\030\300\006\001\000\010\210H\204H\022H\022\207\360"
 4525      00088848 
 4525      84481248 
ARM GAS  /tmp/ccWgdbjA.s 			page 123


 4525      1287F0
 4526 087e 0000     		.ascii	"\000\000"
 4527 0880 CAFD     		.ascii	"\312\375"
 4528 0882 08204920 		.ascii	"\010 I * \010>\377D*DID\210\244\020(\376(\"\020B\020"
 4528      2A20083E 
 4528      FF442A44 
 4528      494488A4 
 4528      1028FE28 
 4529 089a 64281828 		.ascii	"d(\030(4D\302\202"
 4529      3444C282 
 4530 08a2 D7D6     		.ascii	"\327\326"
 4531 08a4 02000100 		.ascii	"\002\000\001\000\177\376@\002\200\004\037\340\000@\000"
 4531      7FFE4002 
 4531      80041FE0 
 4531      004000
 4532 08b3 800100FF 		.ascii	"\200\001\000\377\376\001\000\001\000\001\000\001\000"
 4532      FE010001 
 4532      00010001 
 4532      00
 4533 08c0 05000200 		.ascii	"\005\000\002\000"
 4534 08c4 D7EE     		.ascii	"\327\356"
 4535 08c6 1FF01010 		.ascii	"\037\360\020\020\037\360\020\020\037\360\000\000\377"
 4535      1FF01010 
 4535      1FF00000 
 4535      FF
 4536 08d3 FE22003E 		.ascii	"\376\"\000>\370\"\210>\220\"P/ \362PB\210\003\006"
 4536      F822883E 
 4536      9022502F 
 4536      20F25042 
 4536      880306
 4537 08e6 D0A1     		.ascii	"\320\241"
 4538 08e8 01000100 		.ascii	"\001\000\001\000\001\000\001\000\001\000\021\020\021"
 4538      01000100 
 4538      01001110 
 4538      11
 4539 08f5 08110421 		.ascii	"\010\021\004!\004!\002A\002\201\002\001\000\001\000"
 4539      04210241 
 4539      02810201 
 4539      000100
 4540 0904 05000200 		.ascii	"\005\000\002\000"
 4541 0908 CFB5     		.ascii	"\317\265"
 4542 090a 00F83F00 		.ascii	"\000\370?\000\004\000\010 \020@?\200\001\000\006\020"
 4542      04000820 
 4542      10403F80 
 4542      01000610 
 4543 091a 18087FFC 		.ascii	"\030\010\177\374\001\004\011 \021\020!\010E\004\002"
 4543      01040920 
 4543      11102108 
 4543      450402
 4544 0929 00       		.ascii	"\000"
 4545 092a CDB3     		.ascii	"\315\263"
 4546 092c 10401020 		.ascii	"\020@\020   #\376H@\370\210\021\004#\376@\222\370\220"
 4546      202023FE 
 4546      4840F888 
 4546      110423FE 
 4546      4092F890 
 4547 0940 40900090 		.ascii	"@\220\000\220\031\022\341\022B\016\004\000"
ARM GAS  /tmp/ccWgdbjA.s 			page 124


 4547      1912E112 
 4547      420E0400 
 4548 094c B7A2     		.ascii	"\267\242"
 4549 094e 01001110 		.ascii	"\001\000\021\020\021\010\"\000?\374\002\000\004\000"
 4549      11082200 
 4549      3FFC0200 
 4549      0400
 4550 095c 07F80A08 		.ascii	"\007\370\012\010\011\010\021\020\020\240 @@\240\003"
 4550      09081110 
 4550      10A02040 
 4550      40A003
 4551 096b 181C06   		.ascii	"\030\034\006"
 4552 096e B0E5     		.ascii	"\260\345"
 4553 0970 1008101C 		.ascii	"\020\010\020\034\021\340\021\000\375\000\021\3741D9"
 4553      11E01100 
 4553      FD0011FC 
 4553      314439
 4554 097f 44554455 		.ascii	"DUDU(\221(\021\020\021\020\022(\022D\024\202"
 4554      28912811 
 4554      10111012 
 4554      28124414 
 4554      82
 4555              		.section	.rodata.tfont24,"a"
 4556              		.align	2
 4557              		.set	.LANCHOR3,. + 0
 4560              	tfont24:
 4561 0000 C9EE     		.ascii	"\311\356"
 4562 0002 00000000 		.ascii	"\000\000\000\000\000\000\020\000\000\010\000\010\014"
 4562      00001000 
 4562      00080008 
 4562      0C
 4563 000f 7FFC0440 		.ascii	"\177\374\004@\020\001\310\240\002\030`B0\0302#\030\022"
 4563      1001C8A0 
 4563      02186042 
 4563      30183223 
 4563      1812
 4564 0021 C3001403 		.ascii	"\303\000\024\003\000\004\003\014\004\177\360\010\017"
 4564      0004030C 
 4564      047FF008 
 4564      0F
 4565 002e 80080B40 		.ascii	"\200\010\013@x\023`\0303 \030c\030\030\203\034\031\003"
 4565      78136018 
 4565      33201863 
 4565      1818831C 
 4565      1903
 4566 0040 08180300 		.ascii	"\010\030\003\000\000\003\000\000\000\000"
 4566      00030000 
 4566      0000
 4567 004a DBDA     		.ascii	"\333\332"
 4568 004c 00000000 		.ascii	"\000\000\000\000\000\000\004\020\014\004\030\014\004"
 4568      00000410 
 4568      0C04180C 
 4568      04
 4569 0059 108C0410 		.ascii	"\020\214\004\020\214\004\020\214\004\020\214\004\320"
 4569      8C04108C 
 4569      04108C04 
 4569      D0
ARM GAS  /tmp/ccWgdbjA.s 			page 125


 4570 0066 8C3F108C 		.ascii	"\214?\020\214\004\020\214\004\020\214\004\020\214\004"
 4570      04108C04 
 4570      108C0410 
 4570      8C04
 4571 0074 108C0410 		.ascii	"\020\214\004\020\214\004\020\214\005\360\214\016 \214"
 4571      8C04108C 
 4571      05F08C0E 
 4571      208C
 4572 0082 78208C20 		.ascii	"x \214 @\214\000\200\214\001\000\014\002\000\014\000"
 4572      408C0080 
 4572      8C01000C 
 4572      02000C00 
 4573 0092 0000     		.ascii	"\000\000"
 4574 0094 CAD0     		.ascii	"\312\320"
 4575 0096 00000000 		.ascii	"\000\000\000\000\000\000\0000\000\000\030\000\000\030"
 4575      00000030 
 4575      00001800 
 4575      0018
 4576 00a4 0800001C 		.ascii	"\010\000\000\034\037\377\340\000\030\000\000\030 \007"
 4576      1FFFE000 
 4576      18000018 
 4576      2007
 4577 00b2 FFF00418 		.ascii	"\377\360\004\030 \004\030 \004\030 \004\030 \004\030"
 4577      20041820 
 4577      04182004 
 4577      18200418 
 4578 00c2 20041820 		.ascii	" \004\030 \004\030 \004\030 \004\030 \004\030\340\004"
 4578      04182004 
 4578      18200418 
 4578      200418E0 
 4578      04
 4579 00d3 18400018 		.ascii	"\030@\000\030\000\000\030\000\000\000\000"
 4579      00001800 
 4579      000000
 4580 00de D6D0     		.ascii	"\326\320"
 4581 00e0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 4581      00000000 
 4581      00000000 
 4581      00
 4582 00ed 18000018 		.ascii	"\030\000\000\030\000\000\030\000\000\030\000?\377\376"
 4582      00001800 
 4582      0018003F 
 4582      FFFE
 4583 00fb 30180630 		.ascii	"0\030\0060\030\0060\030\0060\030\0060\030\006?\377\376"
 4583      18063018 
 4583      06301806 
 4583      3018063F 
 4583      FFFE
 4584 010d 30180600 		.ascii	"0\030\006\000\030\000\000\030\000\000\030\000\000\030"
 4584      18000018 
 4584      00001800 
 4584      0018
 4585 011b 00001800 		.ascii	"\000\000\030\000\000\000\000\000\000\000\000\000\000"
 4585      00000000 
 4585      00000000 
 4585      00
 4586 0128 CEC4     		.ascii	"\316\304"
ARM GAS  /tmp/ccWgdbjA.s 			page 126


 4587 012a 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\0008\000\000\034"
 4587      00000000 
 4587      00003800 
 4587      001C
 4588 0138 00000600 		.ascii	"\000\000\006\000\377\377\377\006\0000\006\0000\003\000"
 4588      FFFFFF06 
 4588      00300600 
 4588      300300
 4589 0147 60030060 		.ascii	"`\003\000`\001\200\300\000\301\200\000\343\000\0006"
 4589      0180C000 
 4589      C18000E3 
 4589      000036
 4590 0156 00001C00 		.ascii	"\000\000\034\000\000w\000\003\301\340\036\000<`\000"
 4590      00770003 
 4590      C1E01E00 
 4590      3C6000
 4591 0165 07000000 		.ascii	"\007\000\000\000\000\000\000\000\000\000\000\000\000"
 4591      00000000 
 4591      00000000 
 4591      00
 4592 0172 B2E2     		.ascii	"\262\342"
 4593 0174 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000@\000"
 4593      00000000 
 4593      00000000 
 4593      4000
 4594 0182 0321FF33 		.ascii	"\003!\37739\2033\021\2033\001\2333\301\2333q\2333\031"
 4594      39833311 
 4594      8333019B 
 4594      33C19B33 
 4594      719B3319 
 4595 0196 9B33019B 		.ascii	"\2333\001\2333\001\2333\021\2333\031\26330030l\0030"
 4595      33019B33 
 4595      119B3319 
 4595      B3333030 
 4595      33306C03 
 4596 01ab C6036383 		.ascii	"\306\003c\203\003.\001\276\000\000\000\000\000\000\000"
 4596      032E01BE 
 4596      00000000 
 4596      000000
 4597 01ba 0000     		.ascii	"\000\000"
 4598 01bc CAD4     		.ascii	"\312\324"
 4599 01be 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000@\000"
 4599      00000000 
 4599      00000000 
 4599      4000
 4600 01cc D83000CE 		.ascii	"\3300\000\316\030\000\302\034\000\300\001\377\377\000"
 4600      1800C21C 
 4600      00C001FF 
 4600      FF00
 4601 01da 00C0F800 		.ascii	"\000\300\370\000\300\030\000\300\031\377\300\030\030"
 4601      C01800C0 
 4601      19FFC018 
 4601      18
 4602 01e7 40181860 		.ascii	"@\030\030`\031\030`\033\030a\036\0301\034\037\2619\360"
 4602      1918601B 
 4602      18611E18 
 4602      311C1FB1 
ARM GAS  /tmp/ccWgdbjA.s 			page 127


 4602      39F0
 4603 01f9 1910000F 		.ascii	"\031\020\000\017\000\000\000\000\000\000\000\000\000"
 4603      00000000 
 4603      00000000 
 4603      00
 4604              		.section	.rodata.tfont32,"a"
 4605              		.align	2
 4606              		.set	.LANCHOR4,. + 0
 4609              	tfont32:
 4610 0000 D7D6     		.ascii	"\327\326"
 4611 0002 00000000 		.ascii	"\000\000\000\000\000\006\000\000\000\003\000\000\000"
 4611      00060000 
 4611      00030000 
 4611      00
 4612 000f 00C00000 		.ascii	"\000\300\000\000\001\300\300\000\001\007\300\000\001"
 4612      01C0C000 
 4612      0107C000 
 4612      01
 4613 001c FF00021F 		.ascii	"\377\000\002\037\376\000\007\360\034\000\007\300p\000"
 4613      FE0007F0 
 4613      1C0007C0 
 4613      7000
 4614 002a 0F00E000 		.ascii	"\017\000\340\000\016\003\360\000\034\017\360\000<\017"
 4614      0E03F000 
 4614      1C0FF000 
 4614      3C0F
 4615 0038 70003C00 		.ascii	"p\000<\000\340\000\030\000\300\000\000\000\300\000\000"
 4615      E0001800 
 4615      C0000000 
 4615      C00000
 4616 0047 00C00000 		.ascii	"\000\300\000\000\000`\000\000\000 \000\000\0007\000"
 4616      00600000 
 4616      00200000 
 4616      003700
 4617 0056 0001FF00 		.ascii	"\000\001\377\000\000\177\370\000\007\3700\000\037\200"
 4617      007FF800 
 4617      07F83000 
 4617      1F80
 4618 0064 30000080 		.ascii	"0\000\000\2000\000\000\3000\000\000``\000\000\030\340"
 4618      300000C0 
 4618      30000060 
 4618      60000018 
 4618      E0
 4619 0075 00000FC0 		.ascii	"\000\000\017\300\000\000\006\000\000\000\000\000\000"
 4619      00000600 
 4619      00000000 
 4619      00
 4620 0082 CCE5     		.ascii	"\314\345"
 4621 0084 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\300\000"
 4621      00000000 
 4621      000000C0 
 4621      00
 4622 0091 0000E000 		.ascii	"\000\000\340\000 \001\270\000p?\370\000a\377\300\000"
 4622      2001B800 
 4622      703FF800 
 4622      61FFC000 
 4623 00a1 C3030001 		.ascii	"\303\003\000\001\306\006\000\003\214\006\000\003\010"
ARM GAS  /tmp/ccWgdbjA.s 			page 128


 4623      C6060003 
 4623      8C060003 
 4623      08
 4624 00ae 0C000608 		.ascii	"\014\000\006\010\014\000\016\030\030?\036\020\033\363"
 4624      0C000E18 
 4624      183F1E10 
 4624      1BF3
 4625 00bc 1F903F07 		.ascii	"\037\220?\007\000\200<\034\001\220p|\001\220`\376\001"
 4625      00803C1C 
 4625      0190707C 
 4625      019060FE 
 4625      01
 4626 00cd A0C3F801 		.ascii	"\240\303\370\001\240\017\330\003\240\010\030\003`\000"
 4626      A00FD803 
 4626      A0081803 
 4626      6000
 4627 00db 18034000 		.ascii	"\030\003@\000\030\003\300\000\030\003\200\000\030\003"
 4627      1803C000 
 4627      18038000 
 4627      1803
 4628 00e9 00001800 		.ascii	"\000\000\030\000\000\000\030\000\000\000\020\000\000"
 4628      00001800 
 4628      00001000 
 4628      00
 4629 00f6 00300000 		.ascii	"\0000\000\000\0000\000\000\000\000\000\000\000\000"
 4629      00300000 
 4629      00000000 
 4629      0000
 4630 0104 B2E2     		.ascii	"\262\342"
 4631 0106 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 4631      00000000 
 4631      00000000 
 4631      00
 4632 0113 00000002 		.ascii	"\000\000\000\002\014\020\010\007\037\370\004\003\277"
 4632      0C100807 
 4632      1FF80403 
 4632      BF
 4633 0120 F00201BC 		.ascii	"\360\002\001\2740\003\003\3540\003\001\\`\003\000\330"
 4633      300303EC 
 4633      3003015C 
 4633      600300D8 
 4634 0130 600300D8 		.ascii	"`\003\000\330`\003\200\230b\003a\270C\007q\261C\006"
 4634      60038098 
 4634      620361B8 
 4634      430771B1 
 4634      4306
 4635 0142 31324306 		.ascii	"12C\0063v\303\006:d\307\006>\354\300\006>x\300\006<"
 4635      3376C306 
 4635      3A64C706 
 4635      3EECC006 
 4635      3E78C006 
 4636 0157 3040067C 		.ascii	"0@\006|p\000\006x\340`\006{\377\360\006\367\300\000"
 4636      70000678 
 4636      E060067B 
 4636      FFF006F7 
 4636      C000
 4637 0169 06E40000 		.ascii	"\006\344\000\000\006@\000\000\006\000\000\000\006\000"
ARM GAS  /tmp/ccWgdbjA.s 			page 129


 4637      06400000 
 4637      06000000 
 4637      0600
 4638 0177 00007C00 		.ascii	"\000\000|\000\000\217\360\000\000|\000\000\000\000\000"
 4638      008FF000 
 4638      007C0000 
 4638      000000
 4639 0186 CAD4     		.ascii	"\312\324"
 4640 0188 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 4640      00000000 
 4640      00000000 
 4640      00
 4641 0195 003F0000 		.ascii	"\000?\000\000\000\177\200\000\000\001\200\000\000\000"
 4641      007F8000 
 4641      00018000 
 4641      0000
 4642 01a3 C0000000 		.ascii	"\300\000\000\000\300\000\000\000\316\003\200\000\317"
 4642      C0000000 
 4642      CE038000 
 4642      CF
 4643 01b0 FFC000DD 		.ascii	"\377\300\000\335A\200\017\376\000\007\377\374\000\014"
 4643      41800FFE 
 4643      0007FFFC 
 4643      000C
 4644 01be 00F00018 		.ascii	"\000\360\000\030\017\300>\031\377@\363\021\274`\203"
 4644      0FC03E19 
 4644      FF40F311 
 4644      BC6083
 4645 01cd 307FE003 		.ascii	"0\177\340\003\261\376 \0033\200 \003p\0000\003`\000"
 4645      B1FE2003 
 4645      33802003 
 4645      70003003 
 4645      6000
 4646 01df 10036000 		.ascii	"\020\003`\000\030\007\300\000\014\007\300\000\004\007"
 4646      1807C000 
 4646      0C07C000 
 4646      0407
 4647 01ed 80000201 		.ascii	"\200\000\002\001\000\000\003\000\000\000\001\000\000"
 4647      00000300 
 4647      00000100 
 4647      00
 4648 01fa 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 4648      00000000 
 4648      00000000 
 4648      00
 4649 0207 00       		.ascii	"\000"
 4650              		.text
 4651              	.Letext0:
 4652              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 4653              		.file 3 "Drivers/CMSIS/Include/core_cm4.h"
 4654              		.file 4 "Core/Inc/system_stm32f4xx.h"
 4655              		.file 5 "Core/Inc/stm32f4xx.h"
 4656              		.file 6 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 4657              		.file 7 "/usr/include/newlib/sys/_types.h"
 4658              		.file 8 "/usr/include/newlib/sys/reent.h"
 4659              		.file 9 "/usr/include/newlib/sys/lock.h"
 4660              		.file 10 "/usr/include/newlib/stdlib.h"
ARM GAS  /tmp/ccWgdbjA.s 			page 130


 4661              		.file 11 "Core/Inc/lcd.h"
 4662              		.file 12 "Core/Inc/font.h"
 4663              		.file 13 "/usr/include/newlib/string.h"
ARM GAS  /tmp/ccWgdbjA.s 			page 131


DEFINED SYMBOLS
                            *ABS*:0000000000000000 gui.c
     /tmp/ccWgdbjA.s:18     .text._swap:0000000000000000 $t
     /tmp/ccWgdbjA.s:25     .text._swap:0000000000000000 _swap
     /tmp/ccWgdbjA.s:53     .text.GUI_DrawPoint:0000000000000000 $t
     /tmp/ccWgdbjA.s:60     .text.GUI_DrawPoint:0000000000000000 GUI_DrawPoint
     /tmp/ccWgdbjA.s:87     .text.LCD_Fill:0000000000000000 $t
     /tmp/ccWgdbjA.s:94     .text.LCD_Fill:0000000000000000 LCD_Fill
     /tmp/ccWgdbjA.s:193    .text.LCD_Fill:000000000000005c $d
     /tmp/ccWgdbjA.s:198    .text.LCD_DrawLine:0000000000000000 $t
     /tmp/ccWgdbjA.s:205    .text.LCD_DrawLine:0000000000000000 LCD_DrawLine
     /tmp/ccWgdbjA.s:408    .text.LCD_DrawRectangle:0000000000000000 $t
     /tmp/ccWgdbjA.s:415    .text.LCD_DrawRectangle:0000000000000000 LCD_DrawRectangle
     /tmp/ccWgdbjA.s:469    .text.LCD_DrawFillRectangle:0000000000000000 $t
     /tmp/ccWgdbjA.s:476    .text.LCD_DrawFillRectangle:0000000000000000 LCD_DrawFillRectangle
     /tmp/ccWgdbjA.s:507    .text.LCD_DrawFillRectangle:0000000000000014 $d
     /tmp/ccWgdbjA.s:512    .text._draw_circle_8:0000000000000000 $t
     /tmp/ccWgdbjA.s:519    .text._draw_circle_8:0000000000000000 _draw_circle_8
     /tmp/ccWgdbjA.s:622    .text.gui_circle:0000000000000000 $t
     /tmp/ccWgdbjA.s:629    .text.gui_circle:0000000000000000 gui_circle
     /tmp/ccWgdbjA.s:787    .text.LCD_DrawLine2:0000000000000000 $t
     /tmp/ccWgdbjA.s:794    .text.LCD_DrawLine2:0000000000000000 LCD_DrawLine2
     /tmp/ccWgdbjA.s:1027   .text.Draw_Triangel:0000000000000000 $t
     /tmp/ccWgdbjA.s:1034   .text.Draw_Triangel:0000000000000000 Draw_Triangel
     /tmp/ccWgdbjA.s:1083   .text.Fill_Triangel:0000000000000000 $t
     /tmp/ccWgdbjA.s:1090   .text.Fill_Triangel:0000000000000000 Fill_Triangel
     /tmp/ccWgdbjA.s:1466   .text.Fill_Triangel:00000000000001dc $d
     /tmp/ccWgdbjA.s:1471   .text.LCD_ShowChar:0000000000000000 $t
     /tmp/ccWgdbjA.s:1478   .text.LCD_ShowChar:0000000000000000 LCD_ShowChar
     /tmp/ccWgdbjA.s:1739   .text.LCD_ShowChar:0000000000000130 $d
     /tmp/ccWgdbjA.s:1747   .text.LCD_ShowString:0000000000000000 $t
     /tmp/ccWgdbjA.s:1754   .text.LCD_ShowString:0000000000000000 LCD_ShowString
     /tmp/ccWgdbjA.s:1842   .text.LCD_ShowString:0000000000000058 $d
     /tmp/ccWgdbjA.s:1849   .text.mypow:0000000000000000 $t
     /tmp/ccWgdbjA.s:1856   .text.mypow:0000000000000000 mypow
     /tmp/ccWgdbjA.s:1894   .text.LCD_ShowNum:0000000000000000 $t
     /tmp/ccWgdbjA.s:1901   .text.LCD_ShowNum:0000000000000000 LCD_ShowNum
     /tmp/ccWgdbjA.s:2081   .text.LCD_ShowNum:00000000000000cc $d
     /tmp/ccWgdbjA.s:2088   .text.GUI_DrawFont16:0000000000000000 $t
     /tmp/ccWgdbjA.s:2095   .text.GUI_DrawFont16:0000000000000000 GUI_DrawFont16
     /tmp/ccWgdbjA.s:2331   .text.GUI_DrawFont16:000000000000010c $d
     /tmp/ccWgdbjA.s:2338   .text.GUI_DrawFont24:0000000000000000 $t
     /tmp/ccWgdbjA.s:2345   .text.GUI_DrawFont24:0000000000000000 GUI_DrawFont24
     /tmp/ccWgdbjA.s:2582   .text.GUI_DrawFont24:0000000000000108 $d
     /tmp/ccWgdbjA.s:2589   .text.GUI_DrawFont32:0000000000000000 $t
     /tmp/ccWgdbjA.s:2596   .text.GUI_DrawFont32:0000000000000000 GUI_DrawFont32
     /tmp/ccWgdbjA.s:2832   .text.GUI_DrawFont32:0000000000000110 $d
     /tmp/ccWgdbjA.s:2839   .text.Show_Str:0000000000000000 $t
     /tmp/ccWgdbjA.s:2846   .text.Show_Str:0000000000000000 Show_Str
     /tmp/ccWgdbjA.s:3087   .text.Show_Str:0000000000000100 $d
     /tmp/ccWgdbjA.s:3092   .text.Gui_StrCenter:0000000000000000 $t
     /tmp/ccWgdbjA.s:3099   .text.Gui_StrCenter:0000000000000000 Gui_StrCenter
     /tmp/ccWgdbjA.s:3167   .text.Gui_StrCenter:0000000000000048 $d
     /tmp/ccWgdbjA.s:3172   .text.Gui_Drawbmp16:0000000000000000 $t
     /tmp/ccWgdbjA.s:3179   .text.Gui_Drawbmp16:0000000000000000 Gui_Drawbmp16
     /tmp/ccWgdbjA.s:3277   .text.Gui_Drawbmp16:0000000000000054 $d
     /tmp/ccWgdbjA.s:3282   .text.LCD_Draw9Point:0000000000000000 $t
ARM GAS  /tmp/ccWgdbjA.s 			page 132


     /tmp/ccWgdbjA.s:3289   .text.LCD_Draw9Point:0000000000000000 LCD_Draw9Point
     /tmp/ccWgdbjA.s:3412   .text.LCD_Draw9Point:00000000000000ac $d
     /tmp/ccWgdbjA.s:3417   .text.Draw_TextBox:0000000000000000 $t
     /tmp/ccWgdbjA.s:3424   .text.Draw_TextBox:0000000000000000 Draw_TextBox
     /tmp/ccWgdbjA.s:3557   .text.Draw_TextBox:00000000000000cc $d
     /tmp/ccWgdbjA.s:3562   .text.EscButton:0000000000000000 $t
     /tmp/ccWgdbjA.s:3569   .text.EscButton:0000000000000000 EscButton
     /tmp/ccWgdbjA.s:3686   .text.EscButton:00000000000000ac $d
     /tmp/ccWgdbjA.s:3691   .text.Draw_Button:0000000000000000 $t
     /tmp/ccWgdbjA.s:3698   .text.Draw_Button:0000000000000000 Draw_Button
     /tmp/ccWgdbjA.s:3750   .text.SetButton:0000000000000000 $t
     /tmp/ccWgdbjA.s:3757   .text.SetButton:0000000000000000 SetButton
     /tmp/ccWgdbjA.s:3873   .text.SetButton:00000000000000ac $d
     /tmp/ccWgdbjA.s:3878   .text.Draw_DirectButton:0000000000000000 $t
     /tmp/ccWgdbjA.s:3885   .text.Draw_DirectButton:0000000000000000 Draw_DirectButton
     /tmp/ccWgdbjA.s:3975   .text.Draw_DirectButton:0000000000000088 $d
     /tmp/ccWgdbjA.s:3980   .text.Draw_Window:0000000000000000 $t
     /tmp/ccWgdbjA.s:3987   .text.Draw_Window:0000000000000000 Draw_Window
     /tmp/ccWgdbjA.s:4073   .text.Draw_Window:0000000000000078 $d
     /tmp/ccWgdbjA.s:4609   .rodata.tfont32:0000000000000000 tfont32
     /tmp/ccWgdbjA.s:4560   .rodata.tfont24:0000000000000000 tfont24
     /tmp/ccWgdbjA.s:4323   .rodata.tfont16:0000000000000000 tfont16
     /tmp/ccWgdbjA.s:4189   .rodata.asc2_1608:0000000000000000 asc2_1608
     /tmp/ccWgdbjA.s:4088   .rodata.asc2_1206:0000000000000000 asc2_1206
     /tmp/ccWgdbjA.s:4084   .rodata.asc2_1206:0000000000000000 $d
     /tmp/ccWgdbjA.s:4185   .rodata.asc2_1608:0000000000000000 $d
     /tmp/ccWgdbjA.s:4319   .rodata.tfont16:0000000000000000 $d
     /tmp/ccWgdbjA.s:4556   .rodata.tfont24:0000000000000000 $d
     /tmp/ccWgdbjA.s:4605   .rodata.tfont32:0000000000000000 $d

UNDEFINED SYMBOLS
LCD_SetCursor
Lcd_WriteData_16Bit
LCD_SetWindows
lcddev
LCD_DrawPoint
POINT_COLOR
BACK_COLOR
strlen
LCD_WR_DATA
