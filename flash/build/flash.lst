ARM GAS  C:\Users\savao\AppData\Local\Temp\ccE9AMsG.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"flash.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.FLASH_ReadWord,"ax",%progbits
  18              		.align	1
  19              		.global	FLASH_ReadWord
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	FLASH_ReadWord:
  27              	.LVL0:
  28              	.LFB133:
  29              		.file 1 "Core/Src/flash.c"
   1:Core/Src/flash.c **** //////////////////////////////////////////////////////////////////////////////////	 
   2:Core/Src/flash.c **** //本程序只供学习使用，未经作者许可，不得用于其它商业用途
   3:Core/Src/flash.c **** //测试硬件：单片机STM32F407VGT6,STM32F407VxT6最小系统开发板,主频168MHZ，晶振8MHZ
   4:Core/Src/flash.c **** //QDtech-TFT液晶驱动 for STM32 FSMC
   5:Core/Src/flash.c **** //Chan@ShenZhen QDtech co.,LTD
   6:Core/Src/flash.c **** //公司网站:www.qdtft.com
   7:Core/Src/flash.c **** //wiki技术资料网站：http://www.lcdwiki.com
   8:Core/Src/flash.c **** //我司提供技术支持，任何技术问题欢迎随时交流学习
   9:Core/Src/flash.c **** //固话(传真) :+86 0755-21077707 
  10:Core/Src/flash.c **** //手机: (销售)18823372746 （技术)15989313508
  11:Core/Src/flash.c **** //邮箱:(销售/订单) sales@qdtft.com  (售后/技术服务)service@qdtft.com
  12:Core/Src/flash.c **** //QQ:(售前咨询)3002706772 (技术支持)3002778157
  13:Core/Src/flash.c **** //技术交流QQ群:778679828
  14:Core/Src/flash.c **** //创建日期:2020/06/29
  15:Core/Src/flash.c **** //版本：V1.0
  16:Core/Src/flash.c **** //版权所有，盗版必究。
  17:Core/Src/flash.c **** //Copyright(C) 深圳市全动电子技术有限公司 2018-2028
  18:Core/Src/flash.c **** //All rights reserved
  19:Core/Src/flash.c **** /************************************************************************************
  20:Core/Src/flash.c **** //STM32F407VxT6最小系统开发板内部flash示例
  21:Core/Src/flash.c **** //     LED0           --->            PA1
  22:Core/Src/flash.c **** //     KEY0           --->            PE4
  23:Core/Src/flash.c **** //     KEY_UP         --->            PA0
  24:Core/Src/flash.c **** //支持ILI9341/ILI9486/ILI9488/ST7793/ST7796S/R61509/NT35310/NT35510/SSD1963
  25:Core/Src/flash.c **** //TFT LCD可以直接插入STM32F407VxT6最小系统开发板TFTLCD插槽或者通过排线接入TFTLCD插座
  26:Core/Src/flash.c **** //STM32连接引脚是指TFTLCD插槽或者插座引脚内部连接的STM32引脚
  27:Core/Src/flash.c **** //=================================电源接线=======================================//
  28:Core/Src/flash.c **** //     LCD模块                    STM32连接引脚
  29:Core/Src/flash.c **** //      VDD           --->           DC5V/3.3V          //电源
ARM GAS  C:\Users\savao\AppData\Local\Temp\ccE9AMsG.s 			page 2


  30:Core/Src/flash.c **** //      GND           --->             GND              //电源地
  31:Core/Src/flash.c **** //=============================液晶屏数据线接线===================================//
  32:Core/Src/flash.c **** //     LCD模块                    STM32连接引脚
  33:Core/Src/flash.c **** //      DB0           --->            PD14        -|   
  34:Core/Src/flash.c **** //      DB1           --->            PD15         |  
  35:Core/Src/flash.c **** //      DB2           --->            PD0          | 
  36:Core/Src/flash.c **** //      DB3           --->            PD1          | 
  37:Core/Src/flash.c **** //      DB4           --->            PE7          |
  38:Core/Src/flash.c **** //      DB5           --->            PE8          |
  39:Core/Src/flash.c **** //      DB6           --->            PE9          |
  40:Core/Src/flash.c **** //      DB7           --->            PE10         |===>液晶屏16位并口数据信号
  41:Core/Src/flash.c **** //      DB8           --->            PE11         |
  42:Core/Src/flash.c **** //      DB9           --->            PE12         |
  43:Core/Src/flash.c **** //      DB10          --->            PE13         |
  44:Core/Src/flash.c **** //      DB11          --->            PE14         |
  45:Core/Src/flash.c **** //      DB12          --->            PE15         |
  46:Core/Src/flash.c **** //      DB13          --->            PD8          |
  47:Core/Src/flash.c **** //      DB14          --->            PD9          |
  48:Core/Src/flash.c **** //      DB15          --->            PD10        -|
  49:Core/Src/flash.c **** //=============================液晶屏控制线接线===================================//
  50:Core/Src/flash.c **** //     LCD模块 				            STM32连接引脚 
  51:Core/Src/flash.c **** //      WR            --->            PD5             //液晶屏写数据控制信号
  52:Core/Src/flash.c **** //      RD            --->            PD4             //液晶屏读数据控制信号
  53:Core/Src/flash.c **** //      RS            --->            PD11            //液晶屏数据/命令控制信号
  54:Core/Src/flash.c **** //      RST           --->          复位引脚（默认）  //液晶屏复位控制信号（也可选择PD13）
  55:Core/Src/flash.c **** //      CS            --->            PD7             //液晶屏片选控制信号
  56:Core/Src/flash.c **** //      BL            --->            PB15            //液晶屏背光控制信号
  57:Core/Src/flash.c **** *************************************************************************************/	
  58:Core/Src/flash.c ****  /* @attention
  59:Core/Src/flash.c ****   *
  60:Core/Src/flash.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  61:Core/Src/flash.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  62:Core/Src/flash.c ****   * TIME. AS A RESULT, QD electronic SHALL NOT BE HELD LIABLE FOR ANY
  63:Core/Src/flash.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  64:Core/Src/flash.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  65:Core/Src/flash.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  66:Core/Src/flash.c **** *************************************************************************************/
  67:Core/Src/flash.c **** #include "flash.h"
  68:Core/Src/flash.c **** #include "delay.h"
  69:Core/Src/flash.c **** #include "usart.h" 
  70:Core/Src/flash.c ****  
  71:Core/Src/flash.c **** /*****************************************************************************
  72:Core/Src/flash.c ****  * @name       :u32 FLASH_ReadWord(u32 faddr)
  73:Core/Src/flash.c ****  * @date       :2020-05-08 
  74:Core/Src/flash.c ****  * @function   :Read half word (16 bit data) of the specified address
  75:Core/Src/flash.c ****  * @parameters :faddr: the address of read
  76:Core/Src/flash.c ****  * @retvalue   :Data read
  77:Core/Src/flash.c **** ******************************************************************************/	
  78:Core/Src/flash.c **** u32 FLASH_ReadWord(u32 faddr)
  79:Core/Src/flash.c **** {
  30              		.loc 1 79 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  80:Core/Src/flash.c **** 	return *(vu32*)faddr; 
  35              		.loc 1 80 2 view .LVU1
ARM GAS  C:\Users\savao\AppData\Local\Temp\ccE9AMsG.s 			page 3


  36              		.loc 1 80 9 is_stmt 0 view .LVU2
  37 0000 0068     		ldr	r0, [r0]
  38              	.LVL1:
  81:Core/Src/flash.c **** }  
  39              		.loc 1 81 1 view .LVU3
  40 0002 7047     		bx	lr
  41              		.cfi_endproc
  42              	.LFE133:
  44              		.section	.text.FLASH_GetFlashSector,"ax",%progbits
  45              		.align	1
  46              		.global	FLASH_GetFlashSector
  47              		.syntax unified
  48              		.thumb
  49              		.thumb_func
  50              		.fpu fpv4-sp-d16
  52              	FLASH_GetFlashSector:
  53              	.LVL2:
  54              	.LFB134:
  82:Core/Src/flash.c **** 
  83:Core/Src/flash.c **** /*****************************************************************************
  84:Core/Src/flash.c ****  * @name       :uint16_t FLASH_GetFlashSector(u32 addr)
  85:Core/Src/flash.c ****  * @date       :2020-05-08 
  86:Core/Src/flash.c ****  * @function   :Get the flash sector of an address
  87:Core/Src/flash.c ****  * @parameters :addr: flash address
  88:Core/Src/flash.c ****  * @retvalue   :0~11, which is the sector where addr is located
  89:Core/Src/flash.c **** ******************************************************************************/	
  90:Core/Src/flash.c **** uint16_t FLASH_GetFlashSector(u32 addr)
  91:Core/Src/flash.c **** {
  55              		.loc 1 91 1 is_stmt 1 view -0
  56              		.cfi_startproc
  57              		@ args = 0, pretend = 0, frame = 0
  58              		@ frame_needed = 0, uses_anonymous_args = 0
  59              		@ link register save eliminated.
  92:Core/Src/flash.c **** 	if(addr<ADDR_FLASH_SECTOR_1)return FLASH_Sector_0;
  60              		.loc 1 92 2 view .LVU5
  61              		.loc 1 92 4 is_stmt 0 view .LVU6
  62 0000 204B     		ldr	r3, .L15
  63 0002 9842     		cmp	r0, r3
  64 0004 28D3     		bcc	.L4
  93:Core/Src/flash.c **** 	else if(addr<ADDR_FLASH_SECTOR_2)return FLASH_Sector_1;
  65              		.loc 1 93 7 is_stmt 1 view .LVU7
  66              		.loc 1 93 9 is_stmt 0 view .LVU8
  67 0006 03F58043 		add	r3, r3, #16384
  68 000a 9842     		cmp	r0, r3
  69 000c 26D3     		bcc	.L5
  94:Core/Src/flash.c **** 	else if(addr<ADDR_FLASH_SECTOR_3)return FLASH_Sector_2;
  70              		.loc 1 94 7 is_stmt 1 view .LVU9
  71              		.loc 1 94 9 is_stmt 0 view .LVU10
  72 000e 03F58043 		add	r3, r3, #16384
  73 0012 9842     		cmp	r0, r3
  74 0014 24D3     		bcc	.L6
  95:Core/Src/flash.c **** 	else if(addr<ADDR_FLASH_SECTOR_4)return FLASH_Sector_3;
  75              		.loc 1 95 7 is_stmt 1 view .LVU11
  76              		.loc 1 95 9 is_stmt 0 view .LVU12
  77 0016 1C4B     		ldr	r3, .L15+4
  78 0018 9842     		cmp	r0, r3
  79 001a 23D9     		bls	.L7
ARM GAS  C:\Users\savao\AppData\Local\Temp\ccE9AMsG.s 			page 4


  96:Core/Src/flash.c **** 	else if(addr<ADDR_FLASH_SECTOR_5)return FLASH_Sector_4;
  80              		.loc 1 96 7 is_stmt 1 view .LVU13
  81              		.loc 1 96 9 is_stmt 0 view .LVU14
  82 001c 03F58033 		add	r3, r3, #65536
  83 0020 9842     		cmp	r0, r3
  84 0022 21D9     		bls	.L8
  97:Core/Src/flash.c **** 	else if(addr<ADDR_FLASH_SECTOR_6)return FLASH_Sector_5;
  85              		.loc 1 97 7 is_stmt 1 view .LVU15
  86              		.loc 1 97 9 is_stmt 0 view .LVU16
  87 0024 03F50033 		add	r3, r3, #131072
  88 0028 9842     		cmp	r0, r3
  89 002a 1FD9     		bls	.L9
  98:Core/Src/flash.c **** 	else if(addr<ADDR_FLASH_SECTOR_7)return FLASH_Sector_6;
  90              		.loc 1 98 7 is_stmt 1 view .LVU17
  91              		.loc 1 98 9 is_stmt 0 view .LVU18
  92 002c 03F50033 		add	r3, r3, #131072
  93 0030 9842     		cmp	r0, r3
  94 0032 1DD9     		bls	.L10
  99:Core/Src/flash.c **** 	else if(addr<ADDR_FLASH_SECTOR_8)return FLASH_Sector_7;
  95              		.loc 1 99 7 is_stmt 1 view .LVU19
  96              		.loc 1 99 9 is_stmt 0 view .LVU20
  97 0034 03F50033 		add	r3, r3, #131072
  98 0038 9842     		cmp	r0, r3
  99 003a 1BD9     		bls	.L11
 100:Core/Src/flash.c **** 	else if(addr<ADDR_FLASH_SECTOR_9)return FLASH_Sector_8;
 100              		.loc 1 100 7 is_stmt 1 view .LVU21
 101              		.loc 1 100 9 is_stmt 0 view .LVU22
 102 003c 03F50033 		add	r3, r3, #131072
 103 0040 9842     		cmp	r0, r3
 104 0042 19D9     		bls	.L12
 101:Core/Src/flash.c **** 	else if(addr<ADDR_FLASH_SECTOR_10)return FLASH_Sector_9;
 105              		.loc 1 101 7 is_stmt 1 view .LVU23
 106              		.loc 1 101 9 is_stmt 0 view .LVU24
 107 0044 03F50033 		add	r3, r3, #131072
 108 0048 9842     		cmp	r0, r3
 109 004a 17D9     		bls	.L13
 102:Core/Src/flash.c **** 	else if(addr<ADDR_FLASH_SECTOR_11)return FLASH_Sector_10; 
 110              		.loc 1 102 7 is_stmt 1 view .LVU25
 111              		.loc 1 102 9 is_stmt 0 view .LVU26
 112 004c 03F50033 		add	r3, r3, #131072
 113 0050 9842     		cmp	r0, r3
 114 0052 15D9     		bls	.L14
 103:Core/Src/flash.c **** 	return FLASH_Sector_11;	
 115              		.loc 1 103 9 view .LVU27
 116 0054 5820     		movs	r0, #88
 117              	.LVL3:
 118              		.loc 1 103 9 view .LVU28
 119 0056 7047     		bx	lr
 120              	.LVL4:
 121              	.L4:
  92:Core/Src/flash.c **** 	else if(addr<ADDR_FLASH_SECTOR_2)return FLASH_Sector_1;
 122              		.loc 1 92 37 view .LVU29
 123 0058 0020     		movs	r0, #0
 124              	.LVL5:
  92:Core/Src/flash.c **** 	else if(addr<ADDR_FLASH_SECTOR_2)return FLASH_Sector_1;
 125              		.loc 1 92 37 view .LVU30
 126 005a 7047     		bx	lr
ARM GAS  C:\Users\savao\AppData\Local\Temp\ccE9AMsG.s 			page 5


 127              	.LVL6:
 128              	.L5:
  93:Core/Src/flash.c **** 	else if(addr<ADDR_FLASH_SECTOR_3)return FLASH_Sector_2;
 129              		.loc 1 93 42 view .LVU31
 130 005c 0820     		movs	r0, #8
 131              	.LVL7:
  93:Core/Src/flash.c **** 	else if(addr<ADDR_FLASH_SECTOR_3)return FLASH_Sector_2;
 132              		.loc 1 93 42 view .LVU32
 133 005e 7047     		bx	lr
 134              	.LVL8:
 135              	.L6:
  94:Core/Src/flash.c **** 	else if(addr<ADDR_FLASH_SECTOR_4)return FLASH_Sector_3;
 136              		.loc 1 94 42 view .LVU33
 137 0060 1020     		movs	r0, #16
 138              	.LVL9:
  94:Core/Src/flash.c **** 	else if(addr<ADDR_FLASH_SECTOR_4)return FLASH_Sector_3;
 139              		.loc 1 94 42 view .LVU34
 140 0062 7047     		bx	lr
 141              	.LVL10:
 142              	.L7:
  95:Core/Src/flash.c **** 	else if(addr<ADDR_FLASH_SECTOR_5)return FLASH_Sector_4;
 143              		.loc 1 95 42 view .LVU35
 144 0064 1820     		movs	r0, #24
 145              	.LVL11:
  95:Core/Src/flash.c **** 	else if(addr<ADDR_FLASH_SECTOR_5)return FLASH_Sector_4;
 146              		.loc 1 95 42 view .LVU36
 147 0066 7047     		bx	lr
 148              	.LVL12:
 149              	.L8:
  96:Core/Src/flash.c **** 	else if(addr<ADDR_FLASH_SECTOR_6)return FLASH_Sector_5;
 150              		.loc 1 96 42 view .LVU37
 151 0068 2020     		movs	r0, #32
 152              	.LVL13:
  96:Core/Src/flash.c **** 	else if(addr<ADDR_FLASH_SECTOR_6)return FLASH_Sector_5;
 153              		.loc 1 96 42 view .LVU38
 154 006a 7047     		bx	lr
 155              	.LVL14:
 156              	.L9:
  97:Core/Src/flash.c **** 	else if(addr<ADDR_FLASH_SECTOR_7)return FLASH_Sector_6;
 157              		.loc 1 97 42 view .LVU39
 158 006c 2820     		movs	r0, #40
 159              	.LVL15:
  97:Core/Src/flash.c **** 	else if(addr<ADDR_FLASH_SECTOR_7)return FLASH_Sector_6;
 160              		.loc 1 97 42 view .LVU40
 161 006e 7047     		bx	lr
 162              	.LVL16:
 163              	.L10:
  98:Core/Src/flash.c **** 	else if(addr<ADDR_FLASH_SECTOR_8)return FLASH_Sector_7;
 164              		.loc 1 98 42 view .LVU41
 165 0070 3020     		movs	r0, #48
 166              	.LVL17:
  98:Core/Src/flash.c **** 	else if(addr<ADDR_FLASH_SECTOR_8)return FLASH_Sector_7;
 167              		.loc 1 98 42 view .LVU42
 168 0072 7047     		bx	lr
 169              	.LVL18:
 170              	.L11:
  99:Core/Src/flash.c **** 	else if(addr<ADDR_FLASH_SECTOR_9)return FLASH_Sector_8;
ARM GAS  C:\Users\savao\AppData\Local\Temp\ccE9AMsG.s 			page 6


 171              		.loc 1 99 42 view .LVU43
 172 0074 3820     		movs	r0, #56
 173              	.LVL19:
  99:Core/Src/flash.c **** 	else if(addr<ADDR_FLASH_SECTOR_9)return FLASH_Sector_8;
 174              		.loc 1 99 42 view .LVU44
 175 0076 7047     		bx	lr
 176              	.LVL20:
 177              	.L12:
 100:Core/Src/flash.c **** 	else if(addr<ADDR_FLASH_SECTOR_10)return FLASH_Sector_9;
 178              		.loc 1 100 42 view .LVU45
 179 0078 4020     		movs	r0, #64
 180              	.LVL21:
 100:Core/Src/flash.c **** 	else if(addr<ADDR_FLASH_SECTOR_10)return FLASH_Sector_9;
 181              		.loc 1 100 42 view .LVU46
 182 007a 7047     		bx	lr
 183              	.LVL22:
 184              	.L13:
 101:Core/Src/flash.c **** 	else if(addr<ADDR_FLASH_SECTOR_11)return FLASH_Sector_10; 
 185              		.loc 1 101 43 view .LVU47
 186 007c 4820     		movs	r0, #72
 187              	.LVL23:
 101:Core/Src/flash.c **** 	else if(addr<ADDR_FLASH_SECTOR_11)return FLASH_Sector_10; 
 188              		.loc 1 101 43 view .LVU48
 189 007e 7047     		bx	lr
 190              	.LVL24:
 191              	.L14:
 102:Core/Src/flash.c **** 	return FLASH_Sector_11;	
 192              		.loc 1 102 43 view .LVU49
 193 0080 5020     		movs	r0, #80
 194              	.LVL25:
 104:Core/Src/flash.c **** }
 195              		.loc 1 104 1 view .LVU50
 196 0082 7047     		bx	lr
 197              	.L16:
 198              		.align	2
 199              	.L15:
 200 0084 00400008 		.word	134234112
 201 0088 FFFF0008 		.word	134283263
 202              		.cfi_endproc
 203              	.LFE134:
 205              		.section	.text.FLASH_Write,"ax",%progbits
 206              		.align	1
 207              		.global	FLASH_Write
 208              		.syntax unified
 209              		.thumb
 210              		.thumb_func
 211              		.fpu fpv4-sp-d16
 213              	FLASH_Write:
 214              	.LVL26:
 215              	.LFB135:
 105:Core/Src/flash.c **** 
 106:Core/Src/flash.c **** /*****************************************************************************
 107:Core/Src/flash.c ****  * @name       :void FLASH_Write(u32 WriteAddr,u32 *pBuffer,u32 NumToWrite)	 
 108:Core/Src/flash.c ****  * @date       :2020-03-02 
 109:Core/Src/flash.c ****  * @function   :Write data of the specified length from the specified address
 110:Core/Src/flash.c **** 								This function is also valid for OTP area! Can be used to write OTP area!
 111:Core/Src/flash.c **** 								OTP regional address range: 0x1fff7800 ~ 0x1fff7a0f
ARM GAS  C:\Users\savao\AppData\Local\Temp\ccE9AMsG.s 			page 7


 112:Core/Src/flash.c ****  * @parameters :WriteAddr:the start address to be written of flash 
 113:Core/Src/flash.c **** 								pBuffer:the point of written data
 114:Core/Src/flash.c **** 								NumToWrite:the number of word to be written
 115:Core/Src/flash.c ****  * @retvalue   :None
 116:Core/Src/flash.c **** ******************************************************************************/  
 117:Core/Src/flash.c **** void FLASH_Write(u32 WriteAddr,u32 *pBuffer,u32 NumToWrite)	
 118:Core/Src/flash.c **** { 
 216              		.loc 1 118 1 is_stmt 1 view -0
 217              		.cfi_startproc
 218              		@ args = 0, pretend = 0, frame = 0
 219              		@ frame_needed = 0, uses_anonymous_args = 0
 119:Core/Src/flash.c **** //特别注意:
 120:Core/Src/flash.c **** //         因为STM32F4的扇区实在太大,没办法本地保存扇区数据,所以本函数
 121:Core/Src/flash.c **** //         写地址如果非0XFF,那么会先擦除整个扇区且不保存扇区数据.所以
 122:Core/Src/flash.c **** //         写非0XFF的地址,将导致整个扇区数据丢失.建议写之前确保扇区里
 123:Core/Src/flash.c **** //         没有重要数据,最好是整个扇区先擦除了,然后慢慢往后写. 
 124:Core/Src/flash.c ****   FLASH_Status status = FLASH_COMPLETE;
 220              		.loc 1 124 3 view .LVU52
 125:Core/Src/flash.c **** 	u32 addrx=0;
 221              		.loc 1 125 2 view .LVU53
 126:Core/Src/flash.c **** 	u32 endaddr=0;	
 222              		.loc 1 126 2 view .LVU54
 127:Core/Src/flash.c ****   if(WriteAddr<INNER_FLASH_BASE||WriteAddr%4)return;	//非法地址
 223              		.loc 1 127 3 view .LVU55
 224              		.loc 1 127 5 is_stmt 0 view .LVU56
 225 0000 B0F1006F 		cmp	r0, #134217728
 226 0004 3ED3     		bcc	.L30
 118:Core/Src/flash.c **** //特别注意:
 227              		.loc 1 118 1 discriminator 2 view .LVU57
 228 0006 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 229              	.LCFI0:
 230              		.cfi_def_cfa_offset 24
 231              		.cfi_offset 4, -24
 232              		.cfi_offset 5, -20
 233              		.cfi_offset 6, -16
 234              		.cfi_offset 7, -12
 235              		.cfi_offset 8, -8
 236              		.cfi_offset 14, -4
 237 000a 0446     		mov	r4, r0
 238 000c 0D46     		mov	r5, r1
 239 000e 1646     		mov	r6, r2
 240              		.loc 1 127 32 discriminator 2 view .LVU58
 241 0010 10F0030F 		tst	r0, #3
 242 0014 01D0     		beq	.L33
 243              	.LVL27:
 244              	.L17:
 128:Core/Src/flash.c **** 	FLASH_Unlock();									//解锁 
 129:Core/Src/flash.c ****   FLASH_DataCacheCmd(DISABLE);//FLASH擦除期间,必须禁止数据缓存
 130:Core/Src/flash.c ****  		
 131:Core/Src/flash.c **** 	addrx=WriteAddr;				//写入的起始地址
 132:Core/Src/flash.c **** 	endaddr=WriteAddr+NumToWrite*4;	//写入的结束地址
 133:Core/Src/flash.c **** 	if(addrx<0X1FFF0000)			//只有主存储区,才需要执行擦除操作!!
 134:Core/Src/flash.c **** 	{
 135:Core/Src/flash.c **** 		while(addrx<endaddr)		//扫清一切障碍.(对非FFFFFFFF的地方,先擦除)
 136:Core/Src/flash.c **** 		{
 137:Core/Src/flash.c **** 			if(FLASH_ReadWord(addrx)!=0XFFFFFFFF)//有非0XFFFFFFFF的地方,要擦除这个扇区
 138:Core/Src/flash.c **** 			{   
ARM GAS  C:\Users\savao\AppData\Local\Temp\ccE9AMsG.s 			page 8


 139:Core/Src/flash.c **** 				status=FLASH_EraseSector(FLASH_GetFlashSector(addrx),VoltageRange_3);//VCC=2.7~3.6V之间!!
 140:Core/Src/flash.c **** 				if(status!=FLASH_COMPLETE)break;	//发生错误了
 141:Core/Src/flash.c **** 			}else addrx+=4;
 142:Core/Src/flash.c **** 		} 
 143:Core/Src/flash.c **** 	}
 144:Core/Src/flash.c **** 	if(status==FLASH_COMPLETE)
 145:Core/Src/flash.c **** 	{
 146:Core/Src/flash.c **** 		while(WriteAddr<endaddr)//写数据
 147:Core/Src/flash.c **** 		{
 148:Core/Src/flash.c **** 			if(FLASH_ProgramWord(WriteAddr,*pBuffer)!=FLASH_COMPLETE)//写入数据
 149:Core/Src/flash.c **** 			{ 
 150:Core/Src/flash.c **** 				break;	//写入异常
 151:Core/Src/flash.c **** 			}
 152:Core/Src/flash.c **** 			WriteAddr+=4;
 153:Core/Src/flash.c **** 			pBuffer++;
 154:Core/Src/flash.c **** 		} 
 155:Core/Src/flash.c **** 	}
 156:Core/Src/flash.c ****   FLASH_DataCacheCmd(ENABLE);	//FLASH擦除结束,开启数据缓存
 157:Core/Src/flash.c **** 	FLASH_Lock();//上锁
 158:Core/Src/flash.c **** } 
 245              		.loc 1 158 1 view .LVU59
 246 0016 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 247              	.LVL28:
 248              	.L33:
 128:Core/Src/flash.c **** 	FLASH_Unlock();									//解锁 
 249              		.loc 1 128 2 is_stmt 1 view .LVU60
 250 001a FFF7FEFF 		bl	FLASH_Unlock
 251              	.LVL29:
 129:Core/Src/flash.c ****  		
 252              		.loc 1 129 3 view .LVU61
 253 001e 0020     		movs	r0, #0
 254 0020 FFF7FEFF 		bl	FLASH_DataCacheCmd
 255              	.LVL30:
 131:Core/Src/flash.c **** 	endaddr=WriteAddr+NumToWrite*4;	//写入的结束地址
 256              		.loc 1 131 2 view .LVU62
 132:Core/Src/flash.c **** 	if(addrx<0X1FFF0000)			//只有主存储区,才需要执行擦除操作!!
 257              		.loc 1 132 2 view .LVU63
 132:Core/Src/flash.c **** 	if(addrx<0X1FFF0000)			//只有主存储区,才需要执行擦除操作!!
 258              		.loc 1 132 9 is_stmt 0 view .LVU64
 259 0024 04EB8606 		add	r6, r4, r6, lsl #2
 260              	.LVL31:
 133:Core/Src/flash.c **** 	{
 261              		.loc 1 133 2 is_stmt 1 view .LVU65
 133:Core/Src/flash.c **** 	{
 262              		.loc 1 133 4 is_stmt 0 view .LVU66
 263 0028 174B     		ldr	r3, .L35
 264 002a 9C42     		cmp	r4, r3
 265 002c 1DD9     		bls	.L28
 266              	.LVL32:
 267              	.L20:
 146:Core/Src/flash.c **** 		{
 268              		.loc 1 146 8 is_stmt 1 view .LVU67
 269 002e B442     		cmp	r4, r6
 270 0030 22D2     		bcs	.L26
 148:Core/Src/flash.c **** 			{ 
 271              		.loc 1 148 4 view .LVU68
 148:Core/Src/flash.c **** 			{ 
ARM GAS  C:\Users\savao\AppData\Local\Temp\ccE9AMsG.s 			page 9


 272              		.loc 1 148 7 is_stmt 0 view .LVU69
 273 0032 2968     		ldr	r1, [r5]
 274 0034 2046     		mov	r0, r4
 275 0036 FFF7FEFF 		bl	FLASH_ProgramWord
 276              	.LVL33:
 148:Core/Src/flash.c **** 			{ 
 277              		.loc 1 148 6 view .LVU70
 278 003a 0928     		cmp	r0, #9
 279 003c 1CD1     		bne	.L26
 152:Core/Src/flash.c **** 			pBuffer++;
 280              		.loc 1 152 4 is_stmt 1 view .LVU71
 152:Core/Src/flash.c **** 			pBuffer++;
 281              		.loc 1 152 13 is_stmt 0 view .LVU72
 282 003e 0434     		adds	r4, r4, #4
 283              	.LVL34:
 153:Core/Src/flash.c **** 		} 
 284              		.loc 1 153 4 is_stmt 1 view .LVU73
 153:Core/Src/flash.c **** 		} 
 285              		.loc 1 153 11 is_stmt 0 view .LVU74
 286 0040 0435     		adds	r5, r5, #4
 287              	.LVL35:
 153:Core/Src/flash.c **** 		} 
 288              		.loc 1 153 11 view .LVU75
 289 0042 F4E7     		b	.L20
 290              	.LVL36:
 291              	.L34:
 139:Core/Src/flash.c **** 				if(status!=FLASH_COMPLETE)break;	//发生错误了
 292              		.loc 1 139 5 is_stmt 1 view .LVU76
 139:Core/Src/flash.c **** 				if(status!=FLASH_COMPLETE)break;	//发生错误了
 293              		.loc 1 139 30 is_stmt 0 view .LVU77
 294 0044 3846     		mov	r0, r7
 295 0046 FFF7FEFF 		bl	FLASH_GetFlashSector
 296              	.LVL37:
 139:Core/Src/flash.c **** 				if(status!=FLASH_COMPLETE)break;	//发生错误了
 297              		.loc 1 139 12 view .LVU78
 298 004a 0221     		movs	r1, #2
 299 004c FFF7FEFF 		bl	FLASH_EraseSector
 300              	.LVL38:
 301 0050 8046     		mov	r8, r0
 302              	.LVL39:
 140:Core/Src/flash.c **** 			}else addrx+=4;
 303              		.loc 1 140 5 is_stmt 1 view .LVU79
 140:Core/Src/flash.c **** 			}else addrx+=4;
 304              		.loc 1 140 7 is_stmt 0 view .LVU80
 305 0052 0928     		cmp	r0, #9
 306 0054 0DD1     		bne	.L22
 307              	.LVL40:
 308              	.L19:
 135:Core/Src/flash.c **** 		{
 309              		.loc 1 135 8 is_stmt 1 view .LVU81
 310 0056 B742     		cmp	r7, r6
 311 0058 0BD2     		bcs	.L22
 137:Core/Src/flash.c **** 			{   
 312              		.loc 1 137 4 view .LVU82
 137:Core/Src/flash.c **** 			{   
 313              		.loc 1 137 7 is_stmt 0 view .LVU83
 314 005a 3846     		mov	r0, r7
ARM GAS  C:\Users\savao\AppData\Local\Temp\ccE9AMsG.s 			page 10


 315 005c FFF7FEFF 		bl	FLASH_ReadWord
 316              	.LVL41:
 137:Core/Src/flash.c **** 			{   
 317              		.loc 1 137 6 view .LVU84
 318 0060 B0F1FF3F 		cmp	r0, #-1
 319 0064 EED1     		bne	.L34
 141:Core/Src/flash.c **** 		} 
 320              		.loc 1 141 10 is_stmt 1 view .LVU85
 141:Core/Src/flash.c **** 		} 
 321              		.loc 1 141 15 is_stmt 0 view .LVU86
 322 0066 0437     		adds	r7, r7, #4
 323              	.LVL42:
 141:Core/Src/flash.c **** 		} 
 324              		.loc 1 141 15 view .LVU87
 325 0068 F5E7     		b	.L19
 326              	.LVL43:
 327              	.L28:
 131:Core/Src/flash.c **** 	endaddr=WriteAddr+NumToWrite*4;	//写入的结束地址
 328              		.loc 1 131 7 view .LVU88
 329 006a 2746     		mov	r7, r4
 124:Core/Src/flash.c **** 	u32 addrx=0;
 330              		.loc 1 124 16 view .LVU89
 331 006c 4FF00908 		mov	r8, #9
 332 0070 F1E7     		b	.L19
 333              	.LVL44:
 334              	.L22:
 144:Core/Src/flash.c **** 	{
 335              		.loc 1 144 2 is_stmt 1 view .LVU90
 144:Core/Src/flash.c **** 	{
 336              		.loc 1 144 4 is_stmt 0 view .LVU91
 337 0072 B8F1090F 		cmp	r8, #9
 338 0076 DAD0     		beq	.L20
 339              	.LVL45:
 340              	.L26:
 156:Core/Src/flash.c **** 	FLASH_Lock();//上锁
 341              		.loc 1 156 3 is_stmt 1 view .LVU92
 342 0078 0120     		movs	r0, #1
 343 007a FFF7FEFF 		bl	FLASH_DataCacheCmd
 344              	.LVL46:
 157:Core/Src/flash.c **** } 
 345              		.loc 1 157 2 view .LVU93
 346 007e FFF7FEFF 		bl	FLASH_Lock
 347              	.LVL47:
 348 0082 C8E7     		b	.L17
 349              	.LVL48:
 350              	.L30:
 351              	.LCFI1:
 352              		.cfi_def_cfa_offset 0
 353              		.cfi_restore 4
 354              		.cfi_restore 5
 355              		.cfi_restore 6
 356              		.cfi_restore 7
 357              		.cfi_restore 8
 358              		.cfi_restore 14
 157:Core/Src/flash.c **** } 
 359              		.loc 1 157 2 is_stmt 0 view .LVU94
 360 0084 7047     		bx	lr
ARM GAS  C:\Users\savao\AppData\Local\Temp\ccE9AMsG.s 			page 11


 361              	.L36:
 362 0086 00BF     		.align	2
 363              	.L35:
 364 0088 FFFFFE1F 		.word	536805375
 365              		.cfi_endproc
 366              	.LFE135:
 368              		.section	.text.FLASH_Read,"ax",%progbits
 369              		.align	1
 370              		.global	FLASH_Read
 371              		.syntax unified
 372              		.thumb
 373              		.thumb_func
 374              		.fpu fpv4-sp-d16
 376              	FLASH_Read:
 377              	.LVL49:
 378              	.LFB136:
 159:Core/Src/flash.c **** 
 160:Core/Src/flash.c **** /*****************************************************************************
 161:Core/Src/flash.c ****  * @name       :void FLASH_Read(u32 ReadAddr,u32 *pBuffer,u32 NumToRead) 
 162:Core/Src/flash.c ****  * @date       :2020-03-02 
 163:Core/Src/flash.c ****  * @function   :Read data of the specified length from the specified address
 164:Core/Src/flash.c ****  * @parameters :ReadAddr:the start address to be read of flash 
 165:Core/Src/flash.c **** 								pBuffer:the point of read data
 166:Core/Src/flash.c **** 								NumToRead:the number of word to be read
 167:Core/Src/flash.c ****  * @retvalue   :None
 168:Core/Src/flash.c **** ******************************************************************************/ 
 169:Core/Src/flash.c **** void FLASH_Read(u32 ReadAddr,u32 *pBuffer,u32 NumToRead)   	
 170:Core/Src/flash.c **** {
 379              		.loc 1 170 1 is_stmt 1 view -0
 380              		.cfi_startproc
 381              		@ args = 0, pretend = 0, frame = 0
 382              		@ frame_needed = 0, uses_anonymous_args = 0
 383              		.loc 1 170 1 is_stmt 0 view .LVU96
 384 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 385              	.LCFI2:
 386              		.cfi_def_cfa_offset 24
 387              		.cfi_offset 3, -24
 388              		.cfi_offset 4, -20
 389              		.cfi_offset 5, -16
 390              		.cfi_offset 6, -12
 391              		.cfi_offset 7, -8
 392              		.cfi_offset 14, -4
 393 0002 0546     		mov	r5, r0
 394 0004 0F46     		mov	r7, r1
 395 0006 1646     		mov	r6, r2
 171:Core/Src/flash.c **** 	u32 i;
 396              		.loc 1 171 2 is_stmt 1 view .LVU97
 172:Core/Src/flash.c **** 	for(i=0;i<NumToRead;i++)
 397              		.loc 1 172 2 view .LVU98
 398              	.LVL50:
 399              		.loc 1 172 7 is_stmt 0 view .LVU99
 400 0008 0024     		movs	r4, #0
 401              		.loc 1 172 2 view .LVU100
 402 000a 06E0     		b	.L38
 403              	.LVL51:
 404              	.L39:
 173:Core/Src/flash.c **** 	{
ARM GAS  C:\Users\savao\AppData\Local\Temp\ccE9AMsG.s 			page 12


 174:Core/Src/flash.c **** 		pBuffer[i]=FLASH_ReadWord(ReadAddr);//读取4个字节.
 405              		.loc 1 174 3 is_stmt 1 discriminator 3 view .LVU101
 406              		.loc 1 174 14 is_stmt 0 discriminator 3 view .LVU102
 407 000c 2846     		mov	r0, r5
 408 000e FFF7FEFF 		bl	FLASH_ReadWord
 409              	.LVL52:
 410              		.loc 1 174 13 discriminator 3 view .LVU103
 411 0012 47F82400 		str	r0, [r7, r4, lsl #2]
 175:Core/Src/flash.c **** 		ReadAddr+=4;//偏移4个字节.	
 412              		.loc 1 175 3 is_stmt 1 discriminator 3 view .LVU104
 413              		.loc 1 175 11 is_stmt 0 discriminator 3 view .LVU105
 414 0016 0435     		adds	r5, r5, #4
 415              	.LVL53:
 172:Core/Src/flash.c **** 	for(i=0;i<NumToRead;i++)
 416              		.loc 1 172 22 is_stmt 1 discriminator 3 view .LVU106
 172:Core/Src/flash.c **** 	for(i=0;i<NumToRead;i++)
 417              		.loc 1 172 23 is_stmt 0 discriminator 3 view .LVU107
 418 0018 0134     		adds	r4, r4, #1
 419              	.LVL54:
 420              	.L38:
 172:Core/Src/flash.c **** 	for(i=0;i<NumToRead;i++)
 421              		.loc 1 172 10 is_stmt 1 discriminator 1 view .LVU108
 172:Core/Src/flash.c **** 	for(i=0;i<NumToRead;i++)
 422              		.loc 1 172 2 is_stmt 0 discriminator 1 view .LVU109
 423 001a B442     		cmp	r4, r6
 424 001c F6D3     		bcc	.L39
 176:Core/Src/flash.c **** 	}
 177:Core/Src/flash.c **** }
 425              		.loc 1 177 1 view .LVU110
 426 001e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 427              		.loc 1 177 1 view .LVU111
 428              		.cfi_endproc
 429              	.LFE136:
 431              		.text
 432              	.Letext0:
 433              		.file 2 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2020-q4-major\\arm-none-eabi\\inc
 434              		.file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2020-q4-major\\arm-none-eabi\\inc
 435              		.file 4 "Core/Inc/stm32f4xx.h"
 436              		.file 5 "Drivers/STM32F4xx_FWLIB/inc/stm32f4xx_flash.h"
ARM GAS  C:\Users\savao\AppData\Local\Temp\ccE9AMsG.s 			page 13


DEFINED SYMBOLS
                            *ABS*:00000000 flash.c
C:\Users\savao\AppData\Local\Temp\ccE9AMsG.s:18     .text.FLASH_ReadWord:00000000 $t
C:\Users\savao\AppData\Local\Temp\ccE9AMsG.s:26     .text.FLASH_ReadWord:00000000 FLASH_ReadWord
C:\Users\savao\AppData\Local\Temp\ccE9AMsG.s:45     .text.FLASH_GetFlashSector:00000000 $t
C:\Users\savao\AppData\Local\Temp\ccE9AMsG.s:52     .text.FLASH_GetFlashSector:00000000 FLASH_GetFlashSector
C:\Users\savao\AppData\Local\Temp\ccE9AMsG.s:200    .text.FLASH_GetFlashSector:00000084 $d
C:\Users\savao\AppData\Local\Temp\ccE9AMsG.s:206    .text.FLASH_Write:00000000 $t
C:\Users\savao\AppData\Local\Temp\ccE9AMsG.s:213    .text.FLASH_Write:00000000 FLASH_Write
C:\Users\savao\AppData\Local\Temp\ccE9AMsG.s:364    .text.FLASH_Write:00000088 $d
C:\Users\savao\AppData\Local\Temp\ccE9AMsG.s:369    .text.FLASH_Read:00000000 $t
C:\Users\savao\AppData\Local\Temp\ccE9AMsG.s:376    .text.FLASH_Read:00000000 FLASH_Read

UNDEFINED SYMBOLS
FLASH_Unlock
FLASH_DataCacheCmd
FLASH_ProgramWord
FLASH_EraseSector
FLASH_Lock
