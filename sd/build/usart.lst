ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\cc0qzbk9.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"usart.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text._sys_exit,"ax",%progbits
  18              		.align	1
  19              		.global	_sys_exit
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	_sys_exit:
  27              	.LVL0:
  28              	.LFB133:
  29              		.file 1 "Core/Src/usart.c"
   1:Core/Src/usart.c **** //////////////////////////////////////////////////////////////////////////////////	 
   2:Core/Src/usart.c **** //本程序只供学习使用，未经作者许可，不得用于其它商业用途
   3:Core/Src/usart.c **** //测试硬件：单片机STM32F407VGT6,STM32F407VxT6最小系统开发板,主频168MHZ，晶振8MHZ
   4:Core/Src/usart.c **** //QDtech-TFT液晶驱动 for STM32 FSMC
   5:Core/Src/usart.c **** //Chan@ShenZhen QDtech co.,LTD
   6:Core/Src/usart.c **** //公司网站:www.qdtft.com
   7:Core/Src/usart.c **** //wiki技术资料网站：http://www.lcdwiki.com
   8:Core/Src/usart.c **** //我司提供技术支持，任何技术问题欢迎随时交流学习
   9:Core/Src/usart.c **** //固话(传真) :+86 0755-21077707 
  10:Core/Src/usart.c **** //手机: (销售)18823372746 （技术)15989313508
  11:Core/Src/usart.c **** //邮箱:(销售/订单) sales@qdtft.com  (售后/技术服务)service@qdtft.com
  12:Core/Src/usart.c **** //QQ:(售前咨询)3002706772 (技术支持)3002778157
  13:Core/Src/usart.c **** //技术交流QQ群:778679828
  14:Core/Src/usart.c **** //创建日期:2020/06/29
  15:Core/Src/usart.c **** //版本：V1.0
  16:Core/Src/usart.c **** //版权所有，盗版必究。
  17:Core/Src/usart.c **** //Copyright(C) 深圳市全动电子技术有限公司 2018-2028
  18:Core/Src/usart.c **** //All rights reserved
  19:Core/Src/usart.c **** /************************************************************************************
  20:Core/Src/usart.c **** //STM32F407VxT6最小系统开发板内部SD卡示例
  21:Core/Src/usart.c **** //     LED0           --->            PA1
  22:Core/Src/usart.c **** //     KEY0           --->            PE4
  23:Core/Src/usart.c **** //     KEY_UP         --->            PA0
  24:Core/Src/usart.c **** //     SD_D0          --->            PC8
  25:Core/Src/usart.c **** //     SD_D1          --->            PC9
  26:Core/Src/usart.c **** //     SD_D2          --->            PC10
  27:Core/Src/usart.c **** //     SD_D3          --->            PC11
  28:Core/Src/usart.c **** //     SD_CLK         --->            PC12
  29:Core/Src/usart.c **** //     SD_CMD         --->            PD2
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\cc0qzbk9.s 			page 2


  30:Core/Src/usart.c **** //     SPI_CLK        --->            PB3
  31:Core/Src/usart.c **** //     SPI_MOSI       --->            PB5
  32:Core/Src/usart.c **** //     SPI_MISO       --->            PB4
  33:Core/Src/usart.c **** //     USART1_TX      --->            PA9
  34:Core/Src/usart.c **** //     USART1_RX      --->            PA10
  35:Core/Src/usart.c **** //支持ILI9341/ILI9486/ILI9488/ST7793/ST7796S/R61509/NT35310/NT35510/SSD1963
  36:Core/Src/usart.c **** //TFT LCD可以直接插入STM32F407VxT6最小系统开发板TFTLCD插槽或者通过排线接入TFTLCD插座
  37:Core/Src/usart.c **** //STM32连接引脚是指TFTLCD插槽或者插座引脚内部连接的STM32引脚
  38:Core/Src/usart.c **** //=================================电源接线=======================================//
  39:Core/Src/usart.c **** //     LCD模块                    STM32连接引脚
  40:Core/Src/usart.c **** //      VDD           --->           DC5V/3.3V          //电源
  41:Core/Src/usart.c **** //      GND           --->             GND              //电源地
  42:Core/Src/usart.c **** //=============================液晶屏数据线接线===================================//
  43:Core/Src/usart.c **** //     LCD模块                    STM32连接引脚
  44:Core/Src/usart.c **** //      DB0           --->            PD14        -|   
  45:Core/Src/usart.c **** //      DB1           --->            PD15         |  
  46:Core/Src/usart.c **** //      DB2           --->            PD0          | 
  47:Core/Src/usart.c **** //      DB3           --->            PD1          | 
  48:Core/Src/usart.c **** //      DB4           --->            PE7          |
  49:Core/Src/usart.c **** //      DB5           --->            PE8          |
  50:Core/Src/usart.c **** //      DB6           --->            PE9          |
  51:Core/Src/usart.c **** //      DB7           --->            PE10         |===>液晶屏16位并口数据信号
  52:Core/Src/usart.c **** //      DB8           --->            PE11         |
  53:Core/Src/usart.c **** //      DB9           --->            PE12         |
  54:Core/Src/usart.c **** //      DB10          --->            PE13         |
  55:Core/Src/usart.c **** //      DB11          --->            PE14         |
  56:Core/Src/usart.c **** //      DB12          --->            PE15         |
  57:Core/Src/usart.c **** //      DB13          --->            PD8          |
  58:Core/Src/usart.c **** //      DB14          --->            PD9          |
  59:Core/Src/usart.c **** //      DB15          --->            PD10        -|
  60:Core/Src/usart.c **** //=============================液晶屏控制线接线===================================//
  61:Core/Src/usart.c **** //     LCD模块 				            STM32连接引脚 
  62:Core/Src/usart.c **** //      WR            --->            PD5             //液晶屏写数据控制信号
  63:Core/Src/usart.c **** //      RD            --->            PD4             //液晶屏读数据控制信号
  64:Core/Src/usart.c **** //      RS            --->            PD11            //液晶屏数据/命令控制信号
  65:Core/Src/usart.c **** //      RST           --->          复位引脚（默认）  //液晶屏复位控制信号（也可选择PD13）
  66:Core/Src/usart.c **** //      CS            --->            PD7             //液晶屏片选控制信号
  67:Core/Src/usart.c **** //      BL            --->            PB15            //液晶屏背光控制信号
  68:Core/Src/usart.c **** *************************************************************************************/	
  69:Core/Src/usart.c ****  /* @attention
  70:Core/Src/usart.c ****   *
  71:Core/Src/usart.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  72:Core/Src/usart.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  73:Core/Src/usart.c ****   * TIME. AS A RESULT, QD electronic SHALL NOT BE HELD LIABLE FOR ANY
  74:Core/Src/usart.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  75:Core/Src/usart.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  76:Core/Src/usart.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  77:Core/Src/usart.c **** *************************************************************************************/
  78:Core/Src/usart.c **** #include "sys.h"
  79:Core/Src/usart.c **** #include "usart.h"	
  80:Core/Src/usart.c **** 
  81:Core/Src/usart.c **** //////////////////////////////////////////////////////////////////
  82:Core/Src/usart.c **** //加入以下代码,支持printf函数串口输出,而不需要选择use MicroLIB	  
  83:Core/Src/usart.c **** #if !USE_MICROLIB
  84:Core/Src/usart.c **** #pragma import(__use_no_semihosting) //导入__use_no_semihosting符号，确保没有从C库使用半主机的函数 
  85:Core/Src/usart.c **** //标准库需要的支持函数                 
  86:Core/Src/usart.c **** struct __FILE 
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\cc0qzbk9.s 			page 3


  87:Core/Src/usart.c **** { 
  88:Core/Src/usart.c **** 	int handle; 
  89:Core/Src/usart.c **** }; 
  90:Core/Src/usart.c **** 
  91:Core/Src/usart.c **** FILE __stdout;       
  92:Core/Src/usart.c **** //定义_sys_exit()以避免使用半主机模式    
  93:Core/Src/usart.c **** void _sys_exit(int x) 
  94:Core/Src/usart.c **** { 
  30              		.loc 1 94 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  95:Core/Src/usart.c **** 	x = x; 
  35              		.loc 1 95 2 view .LVU1
  96:Core/Src/usart.c **** } 
  36              		.loc 1 96 1 is_stmt 0 view .LVU2
  37 0000 7047     		bx	lr
  38              		.cfi_endproc
  39              	.LFE133:
  41              		.section	.text.fputc,"ax",%progbits
  42              		.align	1
  43              		.global	fputc
  44              		.syntax unified
  45              		.thumb
  46              		.thumb_func
  47              		.fpu fpv4-sp-d16
  49              	fputc:
  50              	.LVL1:
  51              	.LFB134:
  97:Core/Src/usart.c **** 
  98:Core/Src/usart.c **** #endif
  99:Core/Src/usart.c ****  
 100:Core/Src/usart.c **** //重定义fputc函数 
 101:Core/Src/usart.c **** int fputc(int ch, FILE *f)
 102:Core/Src/usart.c **** { 
  52              		.loc 1 102 1 is_stmt 1 view -0
  53              		.cfi_startproc
  54              		@ args = 0, pretend = 0, frame = 0
  55              		@ frame_needed = 0, uses_anonymous_args = 0
  56              		.loc 1 102 1 is_stmt 0 view .LVU4
  57 0000 10B5     		push	{r4, lr}
  58              	.LCFI0:
  59              		.cfi_def_cfa_offset 8
  60              		.cfi_offset 4, -8
  61              		.cfi_offset 14, -4
  62 0002 0446     		mov	r4, r0
 103:Core/Src/usart.c **** 	while (USART_GetFlagStatus(USART1,USART_FLAG_TC)==RESET);//循环发送,直到发送完毕 
  63              		.loc 1 103 2 is_stmt 1 view .LVU5
  64              	.LVL2:
  65              	.L3:
  66              		.loc 1 103 58 discriminator 1 view .LVU6
  67              		.loc 1 103 8 discriminator 1 view .LVU7
  68              		.loc 1 103 9 is_stmt 0 discriminator 1 view .LVU8
  69 0004 4021     		movs	r1, #64
  70 0006 0548     		ldr	r0, .L5
  71 0008 FFF7FEFF 		bl	USART_GetFlagStatus
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\cc0qzbk9.s 			page 4


  72              	.LVL3:
  73              		.loc 1 103 8 discriminator 1 view .LVU9
  74 000c 0028     		cmp	r0, #0
  75 000e F9D0     		beq	.L3
 104:Core/Src/usart.c **** 	USART_SendData(USART1,(u8)ch);     
  76              		.loc 1 104 2 is_stmt 1 view .LVU10
  77 0010 E1B2     		uxtb	r1, r4
  78 0012 0248     		ldr	r0, .L5
  79 0014 FFF7FEFF 		bl	USART_SendData
  80              	.LVL4:
 105:Core/Src/usart.c **** 	return ch;
  81              		.loc 1 105 2 view .LVU11
 106:Core/Src/usart.c **** }
  82              		.loc 1 106 1 is_stmt 0 view .LVU12
  83 0018 2046     		mov	r0, r4
  84 001a 10BD     		pop	{r4, pc}
  85              	.LVL5:
  86              	.L6:
  87              		.loc 1 106 1 view .LVU13
  88              		.align	2
  89              	.L5:
  90 001c 00100140 		.word	1073811456
  91              		.cfi_endproc
  92              	.LFE134:
  94              		.section	.text.USART1_Init,"ax",%progbits
  95              		.align	1
  96              		.global	USART1_Init
  97              		.syntax unified
  98              		.thumb
  99              		.thumb_func
 100              		.fpu fpv4-sp-d16
 102              	USART1_Init:
 103              	.LVL6:
 104              	.LFB135:
 107:Core/Src/usart.c ****  
 108:Core/Src/usart.c **** u8 USART_RX_BUF[USART_REC_LEN];     //接收缓冲,最大USART_REC_LEN个字节.
 109:Core/Src/usart.c **** 
 110:Core/Src/usart.c **** //接收状态
 111:Core/Src/usart.c **** //bit15，	接收完成标志
 112:Core/Src/usart.c **** //bit14，	接收到0x0d
 113:Core/Src/usart.c **** //bit13~0，	接收到的有效字节数目
 114:Core/Src/usart.c **** u16 USART_RX_STA=0;       //接收状态标记	
 115:Core/Src/usart.c **** 
 116:Core/Src/usart.c **** /*****************************************************************************
 117:Core/Src/usart.c ****  * @name       :void USART1_Init(u32 bound)
 118:Core/Src/usart.c ****  * @date       :2020-05-08 
 119:Core/Src/usart.c ****  * @function   :Initialize USART1
 120:Core/Src/usart.c ****  * @parameters :bound:baudrate
 121:Core/Src/usart.c ****  * @retvalue   :None
 122:Core/Src/usart.c **** ******************************************************************************/	
 123:Core/Src/usart.c **** void USART1_Init(u32 bound)
 124:Core/Src/usart.c **** {
 105              		.loc 1 124 1 is_stmt 1 view -0
 106              		.cfi_startproc
 107              		@ args = 0, pretend = 0, frame = 32
 108              		@ frame_needed = 0, uses_anonymous_args = 0
 109              		.loc 1 124 1 is_stmt 0 view .LVU15
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\cc0qzbk9.s 			page 5


 110 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 111              	.LCFI1:
 112              		.cfi_def_cfa_offset 20
 113              		.cfi_offset 4, -20
 114              		.cfi_offset 5, -16
 115              		.cfi_offset 6, -12
 116              		.cfi_offset 7, -8
 117              		.cfi_offset 14, -4
 118 0002 89B0     		sub	sp, sp, #36
 119              	.LCFI2:
 120              		.cfi_def_cfa_offset 56
 121 0004 0646     		mov	r6, r0
 125:Core/Src/usart.c ****    //GPIO端口设置
 126:Core/Src/usart.c ****   GPIO_InitTypeDef GPIO_InitStructure;
 122              		.loc 1 126 3 is_stmt 1 view .LVU16
 127:Core/Src/usart.c **** 	USART_InitTypeDef USART_InitStructure;
 123              		.loc 1 127 2 view .LVU17
 128:Core/Src/usart.c **** 	NVIC_InitTypeDef NVIC_InitStructure;	
 124              		.loc 1 128 2 view .LVU18
 129:Core/Src/usart.c **** 	RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOA,ENABLE); //使能GPIOA时钟
 125              		.loc 1 129 2 view .LVU19
 126 0006 0121     		movs	r1, #1
 127 0008 0846     		mov	r0, r1
 128              	.LVL7:
 129              		.loc 1 129 2 is_stmt 0 view .LVU20
 130 000a FFF7FEFF 		bl	RCC_AHB1PeriphClockCmd
 131              	.LVL8:
 130:Core/Src/usart.c **** 	RCC_APB2PeriphClockCmd(RCC_APB2Periph_USART1,ENABLE);//使能USART1时钟
 132              		.loc 1 130 2 is_stmt 1 view .LVU21
 133 000e 0121     		movs	r1, #1
 134 0010 1020     		movs	r0, #16
 135 0012 FFF7FEFF 		bl	RCC_APB2PeriphClockCmd
 136              	.LVL9:
 131:Core/Src/usart.c ****  
 132:Core/Src/usart.c **** 	//串口1对应引脚复用映射
 133:Core/Src/usart.c **** 	GPIO_PinAFConfig(GPIOA,GPIO_PinSource9,GPIO_AF_USART1); //GPIOA9复用为USART1
 137              		.loc 1 133 2 view .LVU22
 138 0016 274F     		ldr	r7, .L9
 139 0018 0722     		movs	r2, #7
 140 001a 0921     		movs	r1, #9
 141 001c 3846     		mov	r0, r7
 142 001e FFF7FEFF 		bl	GPIO_PinAFConfig
 143              	.LVL10:
 134:Core/Src/usart.c **** 	GPIO_PinAFConfig(GPIOA,GPIO_PinSource10,GPIO_AF_USART1); //GPIOA10复用为USART1
 144              		.loc 1 134 2 view .LVU23
 145 0022 0722     		movs	r2, #7
 146 0024 0A21     		movs	r1, #10
 147 0026 3846     		mov	r0, r7
 148 0028 FFF7FEFF 		bl	GPIO_PinAFConfig
 149              	.LVL11:
 135:Core/Src/usart.c **** 	
 136:Core/Src/usart.c **** 	//USART1端口配置
 137:Core/Src/usart.c ****   GPIO_InitStructure.GPIO_Pin = GPIO_Pin_9 | GPIO_Pin_10; //GPIOA9与GPIOA10
 150              		.loc 1 137 3 view .LVU24
 151              		.loc 1 137 31 is_stmt 0 view .LVU25
 152 002c 4FF4C063 		mov	r3, #1536
 153 0030 0693     		str	r3, [sp, #24]
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\cc0qzbk9.s 			page 6


 138:Core/Src/usart.c **** 	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF;//复用功能
 154              		.loc 1 138 2 is_stmt 1 view .LVU26
 155              		.loc 1 138 31 is_stmt 0 view .LVU27
 156 0032 0223     		movs	r3, #2
 157 0034 8DF81C30 		strb	r3, [sp, #28]
 139:Core/Src/usart.c **** 	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;	//速度50MHz
 158              		.loc 1 139 2 is_stmt 1 view .LVU28
 159              		.loc 1 139 32 is_stmt 0 view .LVU29
 160 0038 8DF81D30 		strb	r3, [sp, #29]
 140:Core/Src/usart.c **** 	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP; //推挽复用输出
 161              		.loc 1 140 2 is_stmt 1 view .LVU30
 162              		.loc 1 140 32 is_stmt 0 view .LVU31
 163 003c 0024     		movs	r4, #0
 164 003e 8DF81E40 		strb	r4, [sp, #30]
 141:Core/Src/usart.c **** 	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_UP; //上拉
 165              		.loc 1 141 2 is_stmt 1 view .LVU32
 166              		.loc 1 141 31 is_stmt 0 view .LVU33
 167 0042 0125     		movs	r5, #1
 168 0044 8DF81F50 		strb	r5, [sp, #31]
 142:Core/Src/usart.c **** 	GPIO_Init(GPIOA,&GPIO_InitStructure); //初始化PA9，PA10
 169              		.loc 1 142 2 is_stmt 1 view .LVU34
 170 0048 06A9     		add	r1, sp, #24
 171 004a 3846     		mov	r0, r7
 172 004c FFF7FEFF 		bl	GPIO_Init
 173              	.LVL12:
 143:Core/Src/usart.c **** 
 144:Core/Src/usart.c ****    //USART1 初始化设置
 145:Core/Src/usart.c **** 	USART_InitStructure.USART_BaudRate = bound;//波特率设置
 174              		.loc 1 145 2 view .LVU35
 175              		.loc 1 145 37 is_stmt 0 view .LVU36
 176 0050 0296     		str	r6, [sp, #8]
 146:Core/Src/usart.c **** 	USART_InitStructure.USART_WordLength = USART_WordLength_8b;//字长为8位数据格式
 177              		.loc 1 146 2 is_stmt 1 view .LVU37
 178              		.loc 1 146 39 is_stmt 0 view .LVU38
 179 0052 ADF80C40 		strh	r4, [sp, #12]	@ movhi
 147:Core/Src/usart.c **** 	USART_InitStructure.USART_StopBits = USART_StopBits_1;//一个停止位
 180              		.loc 1 147 2 is_stmt 1 view .LVU39
 181              		.loc 1 147 37 is_stmt 0 view .LVU40
 182 0056 ADF80E40 		strh	r4, [sp, #14]	@ movhi
 148:Core/Src/usart.c **** 	USART_InitStructure.USART_Parity = USART_Parity_No;//无奇偶校验位
 183              		.loc 1 148 2 is_stmt 1 view .LVU41
 184              		.loc 1 148 35 is_stmt 0 view .LVU42
 185 005a ADF81040 		strh	r4, [sp, #16]	@ movhi
 149:Core/Src/usart.c **** 	USART_InitStructure.USART_HardwareFlowControl = USART_HardwareFlowControl_None;//无硬件数据流控制
 186              		.loc 1 149 2 is_stmt 1 view .LVU43
 187              		.loc 1 149 48 is_stmt 0 view .LVU44
 188 005e ADF81440 		strh	r4, [sp, #20]	@ movhi
 150:Core/Src/usart.c **** 	USART_InitStructure.USART_Mode = USART_Mode_Rx | USART_Mode_Tx;	//收发模式
 189              		.loc 1 150 2 is_stmt 1 view .LVU45
 190              		.loc 1 150 33 is_stmt 0 view .LVU46
 191 0062 0C23     		movs	r3, #12
 192 0064 ADF81230 		strh	r3, [sp, #18]	@ movhi
 151:Core/Src/usart.c ****   USART_Init(USART1, &USART_InitStructure); //初始化串口1
 193              		.loc 1 151 3 is_stmt 1 view .LVU47
 194 0068 04F18044 		add	r4, r4, #1073741824
 195 006c 04F58834 		add	r4, r4, #69632
 196 0070 02A9     		add	r1, sp, #8
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\cc0qzbk9.s 			page 7


 197 0072 2046     		mov	r0, r4
 198 0074 FFF7FEFF 		bl	USART_Init
 199              	.LVL13:
 152:Core/Src/usart.c **** 	
 153:Core/Src/usart.c ****   USART_Cmd(USART1, ENABLE);  //使能串口1 	
 200              		.loc 1 153 3 view .LVU48
 201 0078 2946     		mov	r1, r5
 202 007a 2046     		mov	r0, r4
 203 007c FFF7FEFF 		bl	USART_Cmd
 204              	.LVL14:
 154:Core/Src/usart.c **** 	USART_ClearFlag(USART1, USART_FLAG_TC); //清除标志位
 205              		.loc 1 154 2 view .LVU49
 206 0080 4021     		movs	r1, #64
 207 0082 2046     		mov	r0, r4
 208 0084 FFF7FEFF 		bl	USART_ClearFlag
 209              	.LVL15:
 155:Core/Src/usart.c **** 	USART_ITConfig(USART1, USART_IT_RXNE, ENABLE);//开启相关中断
 210              		.loc 1 155 2 view .LVU50
 211 0088 2A46     		mov	r2, r5
 212 008a 40F22551 		movw	r1, #1317
 213 008e 2046     		mov	r0, r4
 214 0090 FFF7FEFF 		bl	USART_ITConfig
 215              	.LVL16:
 156:Core/Src/usart.c **** 
 157:Core/Src/usart.c **** 	//Usart1 NVIC 配置
 158:Core/Src/usart.c ****   NVIC_InitStructure.NVIC_IRQChannel = USART1_IRQn;//串口1中断通道
 216              		.loc 1 158 3 view .LVU51
 217              		.loc 1 158 38 is_stmt 0 view .LVU52
 218 0094 2523     		movs	r3, #37
 219 0096 8DF80430 		strb	r3, [sp, #4]
 159:Core/Src/usart.c **** 	NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority=3;//抢占优先级3
 220              		.loc 1 159 2 is_stmt 1 view .LVU53
 221              		.loc 1 159 54 is_stmt 0 view .LVU54
 222 009a 0323     		movs	r3, #3
 223 009c 8DF80530 		strb	r3, [sp, #5]
 160:Core/Src/usart.c **** 	NVIC_InitStructure.NVIC_IRQChannelSubPriority =3;		//子优先级3
 224              		.loc 1 160 2 is_stmt 1 view .LVU55
 225              		.loc 1 160 48 is_stmt 0 view .LVU56
 226 00a0 8DF80630 		strb	r3, [sp, #6]
 161:Core/Src/usart.c **** 	NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;			//IRQ通道使能
 227              		.loc 1 161 2 is_stmt 1 view .LVU57
 228              		.loc 1 161 40 is_stmt 0 view .LVU58
 229 00a4 8DF80750 		strb	r5, [sp, #7]
 162:Core/Src/usart.c **** 	NVIC_Init(&NVIC_InitStructure);	//根据指定的参数初始化VIC寄存器、	
 230              		.loc 1 162 2 is_stmt 1 view .LVU59
 231 00a8 01A8     		add	r0, sp, #4
 232 00aa FFF7FEFF 		bl	NVIC_Init
 233              	.LVL17:
 163:Core/Src/usart.c **** }
 234              		.loc 1 163 1 is_stmt 0 view .LVU60
 235 00ae 09B0     		add	sp, sp, #36
 236              	.LCFI3:
 237              		.cfi_def_cfa_offset 20
 238              		@ sp needed
 239 00b0 F0BD     		pop	{r4, r5, r6, r7, pc}
 240              	.LVL18:
 241              	.L10:
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\cc0qzbk9.s 			page 8


 242              		.loc 1 163 1 view .LVU61
 243 00b2 00BF     		.align	2
 244              	.L9:
 245 00b4 00000240 		.word	1073872896
 246              		.cfi_endproc
 247              	.LFE135:
 249              		.section	.text.USART1_IRQHandler,"ax",%progbits
 250              		.align	1
 251              		.global	USART1_IRQHandler
 252              		.syntax unified
 253              		.thumb
 254              		.thumb_func
 255              		.fpu fpv4-sp-d16
 257              	USART1_IRQHandler:
 258              	.LFB136:
 164:Core/Src/usart.c **** 
 165:Core/Src/usart.c **** /*****************************************************************************
 166:Core/Src/usart.c ****  * @name       :void USART1_Init(u32 bound)
 167:Core/Src/usart.c ****  * @date       :2020-05-08 
 168:Core/Src/usart.c ****  * @function   :USART1 interrupt service program
 169:Core/Src/usart.c ****  * @parameters :None
 170:Core/Src/usart.c ****  * @retvalue   :None
 171:Core/Src/usart.c **** ******************************************************************************/	
 172:Core/Src/usart.c **** void USART1_IRQHandler(void)                	
 173:Core/Src/usart.c **** {
 259              		.loc 1 173 1 is_stmt 1 view -0
 260              		.cfi_startproc
 261              		@ args = 0, pretend = 0, frame = 0
 262              		@ frame_needed = 0, uses_anonymous_args = 0
 263 0000 08B5     		push	{r3, lr}
 264              	.LCFI4:
 265              		.cfi_def_cfa_offset 8
 266              		.cfi_offset 3, -8
 267              		.cfi_offset 14, -4
 174:Core/Src/usart.c **** 	u8 Res;
 268              		.loc 1 174 2 view .LVU63
 175:Core/Src/usart.c **** 	if(USART_GetITStatus(USART1, USART_IT_RXNE) != RESET)  //接收中断(接收到的数据必须是0x0d 0x0a结尾)
 269              		.loc 1 175 2 view .LVU64
 270              		.loc 1 175 5 is_stmt 0 view .LVU65
 271 0002 40F22551 		movw	r1, #1317
 272 0006 1A48     		ldr	r0, .L19
 273 0008 FFF7FEFF 		bl	USART_GetITStatus
 274              	.LVL19:
 275              		.loc 1 175 4 view .LVU66
 276 000c 00B9     		cbnz	r0, .L17
 277              	.L11:
 176:Core/Src/usart.c **** 	{
 177:Core/Src/usart.c **** 		Res =USART_ReceiveData(USART1); 	//读取接收到的数据		
 178:Core/Src/usart.c **** 		if((USART_RX_STA&0x8000)==0)//接收未完成
 179:Core/Src/usart.c **** 		{
 180:Core/Src/usart.c **** 			if(USART_RX_STA&0x4000)//接收到了0x0d
 181:Core/Src/usart.c **** 			{
 182:Core/Src/usart.c **** 				if(Res!=0x0a)
 183:Core/Src/usart.c **** 				{
 184:Core/Src/usart.c **** 					USART_RX_STA=0;//接收错误,重新开始
 185:Core/Src/usart.c **** 				}
 186:Core/Src/usart.c **** 				else
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\cc0qzbk9.s 			page 9


 187:Core/Src/usart.c **** 				{
 188:Core/Src/usart.c **** 					USART_RX_STA|=0x8000;	//接收完成了 
 189:Core/Src/usart.c **** 				}
 190:Core/Src/usart.c **** 			}
 191:Core/Src/usart.c **** 			else //还没收到0X0D
 192:Core/Src/usart.c **** 			{	
 193:Core/Src/usart.c **** 				if(Res==0x0d)
 194:Core/Src/usart.c **** 				{
 195:Core/Src/usart.c **** 					USART_RX_STA|=0x4000;
 196:Core/Src/usart.c **** 				}
 197:Core/Src/usart.c **** 				else
 198:Core/Src/usart.c **** 				{
 199:Core/Src/usart.c **** 					USART_RX_BUF[USART_RX_STA&0X3FFF]=Res ;
 200:Core/Src/usart.c **** 					USART_RX_STA++;
 201:Core/Src/usart.c **** 					if(USART_RX_STA>(USART_REC_LEN-1))
 202:Core/Src/usart.c **** 					{
 203:Core/Src/usart.c **** 						USART_RX_STA=0;//接收数据错误,重新开始接收	  
 204:Core/Src/usart.c **** 					}
 205:Core/Src/usart.c **** 				}		 
 206:Core/Src/usart.c **** 			}
 207:Core/Src/usart.c **** 		}   		 
 208:Core/Src/usart.c ****   } 
 209:Core/Src/usart.c **** } 
 278              		.loc 1 209 1 view .LVU67
 279 000e 08BD     		pop	{r3, pc}
 280              	.L17:
 177:Core/Src/usart.c **** 		if((USART_RX_STA&0x8000)==0)//接收未完成
 281              		.loc 1 177 3 is_stmt 1 view .LVU68
 177:Core/Src/usart.c **** 		if((USART_RX_STA&0x8000)==0)//接收未完成
 282              		.loc 1 177 8 is_stmt 0 view .LVU69
 283 0010 1748     		ldr	r0, .L19
 284 0012 FFF7FEFF 		bl	USART_ReceiveData
 285              	.LVL20:
 177:Core/Src/usart.c **** 		if((USART_RX_STA&0x8000)==0)//接收未完成
 286              		.loc 1 177 7 view .LVU70
 287 0016 C0B2     		uxtb	r0, r0
 288              	.LVL21:
 178:Core/Src/usart.c **** 		{
 289              		.loc 1 178 3 is_stmt 1 view .LVU71
 178:Core/Src/usart.c **** 		{
 290              		.loc 1 178 27 is_stmt 0 view .LVU72
 291 0018 164A     		ldr	r2, .L19+4
 292 001a 1388     		ldrh	r3, [r2]
 293 001c B2F90020 		ldrsh	r2, [r2]
 178:Core/Src/usart.c **** 		{
 294              		.loc 1 178 5 view .LVU73
 295 0020 002A     		cmp	r2, #0
 296 0022 F4DB     		blt	.L11
 180:Core/Src/usart.c **** 			{
 297              		.loc 1 180 4 is_stmt 1 view .LVU74
 180:Core/Src/usart.c **** 			{
 298              		.loc 1 180 6 is_stmt 0 view .LVU75
 299 0024 13F4804F 		tst	r3, #16384
 300 0028 0CD0     		beq	.L13
 182:Core/Src/usart.c **** 				{
 301              		.loc 1 182 5 is_stmt 1 view .LVU76
 182:Core/Src/usart.c **** 				{
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\cc0qzbk9.s 			page 10


 302              		.loc 1 182 7 is_stmt 0 view .LVU77
 303 002a 0A28     		cmp	r0, #10
 304 002c 03D0     		beq	.L14
 184:Core/Src/usart.c **** 				}
 305              		.loc 1 184 6 is_stmt 1 view .LVU78
 184:Core/Src/usart.c **** 				}
 306              		.loc 1 184 18 is_stmt 0 view .LVU79
 307 002e 114B     		ldr	r3, .L19+4
 308 0030 0022     		movs	r2, #0
 309 0032 1A80     		strh	r2, [r3]	@ movhi
 310 0034 EBE7     		b	.L11
 311              	.L14:
 188:Core/Src/usart.c **** 				}
 312              		.loc 1 188 6 is_stmt 1 view .LVU80
 188:Core/Src/usart.c **** 				}
 313              		.loc 1 188 18 is_stmt 0 view .LVU81
 314 0036 6FEA4343 		mvn	r3, r3, lsl #17
 315 003a 6FEA5343 		mvn	r3, r3, lsr #17
 316 003e 0D4A     		ldr	r2, .L19+4
 317 0040 1380     		strh	r3, [r2]	@ movhi
 318 0042 E4E7     		b	.L11
 319              	.L13:
 193:Core/Src/usart.c **** 				{
 320              		.loc 1 193 5 is_stmt 1 view .LVU82
 193:Core/Src/usart.c **** 				{
 321              		.loc 1 193 7 is_stmt 0 view .LVU83
 322 0044 0D28     		cmp	r0, #13
 323 0046 0DD0     		beq	.L18
 199:Core/Src/usart.c **** 					USART_RX_STA++;
 324              		.loc 1 199 6 is_stmt 1 view .LVU84
 199:Core/Src/usart.c **** 					USART_RX_STA++;
 325              		.loc 1 199 31 is_stmt 0 view .LVU85
 326 0048 C3F30D02 		ubfx	r2, r3, #0, #14
 199:Core/Src/usart.c **** 					USART_RX_STA++;
 327              		.loc 1 199 39 view .LVU86
 328 004c 0A49     		ldr	r1, .L19+8
 329 004e 8854     		strb	r0, [r1, r2]
 200:Core/Src/usart.c **** 					if(USART_RX_STA>(USART_REC_LEN-1))
 330              		.loc 1 200 6 is_stmt 1 view .LVU87
 200:Core/Src/usart.c **** 					if(USART_RX_STA>(USART_REC_LEN-1))
 331              		.loc 1 200 18 is_stmt 0 view .LVU88
 332 0050 0133     		adds	r3, r3, #1
 333 0052 9BB2     		uxth	r3, r3
 334 0054 074A     		ldr	r2, .L19+4
 335 0056 1380     		strh	r3, [r2]	@ movhi
 201:Core/Src/usart.c **** 					{
 336              		.loc 1 201 6 is_stmt 1 view .LVU89
 201:Core/Src/usart.c **** 					{
 337              		.loc 1 201 8 is_stmt 0 view .LVU90
 338 0058 FF2B     		cmp	r3, #255
 339 005a D8D9     		bls	.L11
 203:Core/Src/usart.c **** 					}
 340              		.loc 1 203 7 is_stmt 1 view .LVU91
 203:Core/Src/usart.c **** 					}
 341              		.loc 1 203 19 is_stmt 0 view .LVU92
 342 005c 1346     		mov	r3, r2
 343 005e 0022     		movs	r2, #0
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\cc0qzbk9.s 			page 11


 344 0060 1A80     		strh	r2, [r3]	@ movhi
 345              		.loc 1 209 1 view .LVU93
 346 0062 D4E7     		b	.L11
 347              	.L18:
 195:Core/Src/usart.c **** 				}
 348              		.loc 1 195 6 is_stmt 1 view .LVU94
 195:Core/Src/usart.c **** 				}
 349              		.loc 1 195 18 is_stmt 0 view .LVU95
 350 0064 43F48043 		orr	r3, r3, #16384
 351 0068 024A     		ldr	r2, .L19+4
 352 006a 1380     		strh	r3, [r2]	@ movhi
 353 006c CFE7     		b	.L11
 354              	.L20:
 355 006e 00BF     		.align	2
 356              	.L19:
 357 0070 00100140 		.word	1073811456
 358 0074 00000000 		.word	.LANCHOR0
 359 0078 00000000 		.word	.LANCHOR1
 360              		.cfi_endproc
 361              	.LFE136:
 363              		.global	USART_RX_STA
 364              		.global	USART_RX_BUF
 365              		.global	__stdout
 366              		.section	.bss.USART_RX_BUF,"aw",%nobits
 367              		.align	2
 368              		.set	.LANCHOR1,. + 0
 371              	USART_RX_BUF:
 372 0000 00000000 		.space	256
 372      00000000 
 372      00000000 
 372      00000000 
 372      00000000 
 373              		.section	.bss.USART_RX_STA,"aw",%nobits
 374              		.align	1
 375              		.set	.LANCHOR0,. + 0
 378              	USART_RX_STA:
 379 0000 0000     		.space	2
 380              		.section	.bss.__stdout,"aw",%nobits
 381              		.align	2
 384              	__stdout:
 385 0000 00000000 		.space	104
 385      00000000 
 385      00000000 
 385      00000000 
 385      00000000 
 386              		.text
 387              	.Letext0:
 388              		.file 2 "d:\\install\\gnu arm embedded toolchain\\10 2020-q4-major\\arm-none-eabi\\include\\machin
 389              		.file 3 "d:\\install\\gnu arm embedded toolchain\\10 2020-q4-major\\arm-none-eabi\\include\\sys\\_
 390              		.file 4 "Core/Inc/stm32f4xx.h"
 391              		.file 5 "Drivers/STM32F4xx_FWLIB/inc/stm32f4xx_gpio.h"
 392              		.file 6 "Drivers/STM32F4xx_FWLIB/inc/stm32f4xx_usart.h"
 393              		.file 7 "Drivers/STM32F4xx_FWLIB/inc/misc.h"
 394              		.file 8 "d:\\install\\gnu arm embedded toolchain\\10 2020-q4-major\\lib\\gcc\\arm-none-eabi\\10.2.
 395              		.file 9 "d:\\install\\gnu arm embedded toolchain\\10 2020-q4-major\\arm-none-eabi\\include\\sys\\_
 396              		.file 10 "d:\\install\\gnu arm embedded toolchain\\10 2020-q4-major\\arm-none-eabi\\include\\sys\\
 397              		.file 11 "d:\\install\\gnu arm embedded toolchain\\10 2020-q4-major\\arm-none-eabi\\include\\sys\\
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\cc0qzbk9.s 			page 12


 398              		.file 12 "d:\\install\\gnu arm embedded toolchain\\10 2020-q4-major\\arm-none-eabi\\include\\stdio
 399              		.file 13 "Core/Inc/usart.h"
 400              		.file 14 "Drivers/STM32F4xx_FWLIB/inc/stm32f4xx_rcc.h"
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\cc0qzbk9.s 			page 13


DEFINED SYMBOLS
                            *ABS*:00000000 usart.c
C:\Users\ADMIN\AppData\Local\Temp\cc0qzbk9.s:18     .text._sys_exit:00000000 $t
C:\Users\ADMIN\AppData\Local\Temp\cc0qzbk9.s:26     .text._sys_exit:00000000 _sys_exit
C:\Users\ADMIN\AppData\Local\Temp\cc0qzbk9.s:42     .text.fputc:00000000 $t
C:\Users\ADMIN\AppData\Local\Temp\cc0qzbk9.s:49     .text.fputc:00000000 fputc
C:\Users\ADMIN\AppData\Local\Temp\cc0qzbk9.s:90     .text.fputc:0000001c $d
C:\Users\ADMIN\AppData\Local\Temp\cc0qzbk9.s:95     .text.USART1_Init:00000000 $t
C:\Users\ADMIN\AppData\Local\Temp\cc0qzbk9.s:102    .text.USART1_Init:00000000 USART1_Init
C:\Users\ADMIN\AppData\Local\Temp\cc0qzbk9.s:245    .text.USART1_Init:000000b4 $d
C:\Users\ADMIN\AppData\Local\Temp\cc0qzbk9.s:250    .text.USART1_IRQHandler:00000000 $t
C:\Users\ADMIN\AppData\Local\Temp\cc0qzbk9.s:257    .text.USART1_IRQHandler:00000000 USART1_IRQHandler
C:\Users\ADMIN\AppData\Local\Temp\cc0qzbk9.s:357    .text.USART1_IRQHandler:00000070 $d
C:\Users\ADMIN\AppData\Local\Temp\cc0qzbk9.s:378    .bss.USART_RX_STA:00000000 USART_RX_STA
C:\Users\ADMIN\AppData\Local\Temp\cc0qzbk9.s:371    .bss.USART_RX_BUF:00000000 USART_RX_BUF
C:\Users\ADMIN\AppData\Local\Temp\cc0qzbk9.s:384    .bss.__stdout:00000000 __stdout
C:\Users\ADMIN\AppData\Local\Temp\cc0qzbk9.s:367    .bss.USART_RX_BUF:00000000 $d
C:\Users\ADMIN\AppData\Local\Temp\cc0qzbk9.s:374    .bss.USART_RX_STA:00000000 $d
C:\Users\ADMIN\AppData\Local\Temp\cc0qzbk9.s:381    .bss.__stdout:00000000 $d

UNDEFINED SYMBOLS
USART_GetFlagStatus
USART_SendData
RCC_AHB1PeriphClockCmd
RCC_APB2PeriphClockCmd
GPIO_PinAFConfig
GPIO_Init
USART_Init
USART_Cmd
USART_ClearFlag
USART_ITConfig
NVIC_Init
USART_GetITStatus
USART_ReceiveData
