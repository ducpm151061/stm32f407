ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccIvaTEZ.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_pwr.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.PWR_DeInit,"ax",%progbits
  18              		.align	1
  19              		.global	PWR_DeInit
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	PWR_DeInit:
  27              	.LFB130:
  28              		.file 1 "Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c"
   1:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** /**
   2:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   ******************************************************************************
   3:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   * @file    stm32f4xx_pwr.c
   4:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   * @author  MCD Application Team
   5:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   * @version V1.4.0
   6:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   * @date    04-August-2014
   7:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   * @brief   This file provides firmware functions to manage the following 
   8:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *          functionalities of the Power Controller (PWR) peripheral:           
   9:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *           + Backup Domain Access
  10:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *           + PVD configuration
  11:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *           + WakeUp pin configuration
  12:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *           + Main and Backup Regulators configuration
  13:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *           + FLASH Power Down configuration
  14:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *           + Low Power modes configuration
  15:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *           + Flags management
  16:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *               
  17:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   ******************************************************************************
  18:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   * @attention
  19:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *
  20:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   * <h2><center>&copy; COPYRIGHT 2014 STMicroelectronics</center></h2>
  21:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *
  22:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
  23:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   * You may not use this file except in compliance with the License.
  24:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   * You may obtain a copy of the License at:
  25:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *
  26:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *        http://www.st.com/software_license_agreement_liberty_v2
  27:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *
  28:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   * Unless required by applicable law or agreed to in writing, software 
  29:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   * distributed under the License is distributed on an "AS IS" BASIS, 
  30:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccIvaTEZ.s 			page 2


  31:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   * See the License for the specific language governing permissions and
  32:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   * limitations under the License.
  33:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *
  34:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   ******************************************************************************
  35:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   */ 
  36:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** 
  37:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** /* Includes ------------------------------------------------------------------*/
  38:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** #include "stm32f4xx_pwr.h"
  39:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** #include "stm32f4xx_rcc.h"
  40:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** 
  41:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
  42:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   * @{
  43:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   */
  44:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** 
  45:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** /** @defgroup PWR 
  46:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   * @brief PWR driver modules
  47:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   * @{
  48:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   */ 
  49:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** 
  50:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** /* Private typedef -----------------------------------------------------------*/
  51:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** /* Private define ------------------------------------------------------------*/
  52:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** /* --------- PWR registers bit address in the alias region ---------- */
  53:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** #define PWR_OFFSET               (PWR_BASE - PERIPH_BASE)
  54:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** 
  55:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** /* --- CR Register ---*/
  56:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** 
  57:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** /* Alias word address of DBP bit */
  58:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** #define CR_OFFSET                (PWR_OFFSET + 0x00)
  59:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** #define DBP_BitNumber            0x08
  60:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** #define CR_DBP_BB                (PERIPH_BB_BASE + (CR_OFFSET * 32) + (DBP_BitNumber * 4))
  61:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** 
  62:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** /* Alias word address of PVDE bit */
  63:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** #define PVDE_BitNumber           0x04
  64:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** #define CR_PVDE_BB               (PERIPH_BB_BASE + (CR_OFFSET * 32) + (PVDE_BitNumber * 4))
  65:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** 
  66:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** /* Alias word address of FPDS bit */
  67:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** #define FPDS_BitNumber           0x09
  68:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** #define CR_FPDS_BB               (PERIPH_BB_BASE + (CR_OFFSET * 32) + (FPDS_BitNumber * 4))
  69:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** 
  70:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** /* Alias word address of PMODE bit */
  71:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** #define PMODE_BitNumber           0x0E
  72:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** #define CR_PMODE_BB               (PERIPH_BB_BASE + (CR_OFFSET * 32) + (PMODE_BitNumber * 4))
  73:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** 
  74:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** /* Alias word address of ODEN bit */
  75:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** #define ODEN_BitNumber           0x10
  76:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** #define CR_ODEN_BB               (PERIPH_BB_BASE + (CR_OFFSET * 32) + (ODEN_BitNumber * 4))
  77:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** 
  78:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** /* Alias word address of ODSWEN bit */
  79:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** #define ODSWEN_BitNumber         0x11
  80:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** #define CR_ODSWEN_BB             (PERIPH_BB_BASE + (CR_OFFSET * 32) + (ODSWEN_BitNumber * 4))
  81:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** 
  82:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** /* Alias word address of MRLVDS bit */
  83:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** #define MRLVDS_BitNumber         0x0B
  84:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** #define CR_MRLVDS_BB             (PERIPH_BB_BASE + (CR_OFFSET * 32) + (MRLVDS_BitNumber * 4))
  85:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** 
  86:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** /* Alias word address of LPLVDS bit */
  87:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** #define LPLVDS_BitNumber         0x0A
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccIvaTEZ.s 			page 3


  88:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** #define CR_LPLVDS_BB             (PERIPH_BB_BASE + (CR_OFFSET * 32) + (LPLVDS_BitNumber * 4))
  89:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** 
  90:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** /* --- CSR Register ---*/
  91:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** 
  92:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** /* Alias word address of EWUP bit */
  93:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** #define CSR_OFFSET               (PWR_OFFSET + 0x04)
  94:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** #define EWUP_BitNumber           0x08
  95:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** #define CSR_EWUP_BB              (PERIPH_BB_BASE + (CSR_OFFSET * 32) + (EWUP_BitNumber * 4))
  96:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** 
  97:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** /* Alias word address of BRE bit */
  98:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** #define BRE_BitNumber            0x09
  99:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** #define CSR_BRE_BB              (PERIPH_BB_BASE + (CSR_OFFSET * 32) + (BRE_BitNumber * 4))
 100:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** 
 101:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** /* ------------------ PWR registers bit mask ------------------------ */
 102:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** 
 103:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** /* CR register bit mask */
 104:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** #define CR_DS_MASK               ((uint32_t)0xFFFFF3FC)
 105:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** #define CR_PLS_MASK              ((uint32_t)0xFFFFFF1F)
 106:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** #define CR_VOS_MASK              ((uint32_t)0xFFFF3FFF)
 107:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** 
 108:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** /* Private macro -------------------------------------------------------------*/
 109:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** /* Private variables ---------------------------------------------------------*/
 110:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** /* Private function prototypes -----------------------------------------------*/
 111:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** /* Private functions ---------------------------------------------------------*/
 112:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** 
 113:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** /** @defgroup PWR_Private_Functions
 114:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   * @{
 115:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   */
 116:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** 
 117:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** /** @defgroup PWR_Group1 Backup Domain Access function 
 118:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****  *  @brief   Backup Domain Access function  
 119:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****  *
 120:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** @verbatim   
 121:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****  ===============================================================================
 122:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****                   ##### Backup Domain Access function #####
 123:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****  ===============================================================================  
 124:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****     [..]
 125:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****       After reset, the backup domain (RTC registers, RTC backup data 
 126:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****       registers and backup SRAM) is protected against possible unwanted 
 127:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****       write accesses. 
 128:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****       To enable access to the RTC Domain and RTC registers, proceed as follows:
 129:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****         (+) Enable the Power Controller (PWR) APB1 interface clock using the
 130:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****             RCC_APB1PeriphClockCmd() function.
 131:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****         (+) Enable access to RTC domain using the PWR_BackupAccessCmd() function.
 132:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** 
 133:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** @endverbatim
 134:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   * @{
 135:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   */
 136:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** 
 137:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** /**
 138:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   * @brief  Deinitializes the PWR peripheral registers to their default reset values.     
 139:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   * @param  None
 140:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   * @retval None
 141:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   */
 142:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** void PWR_DeInit(void)
 143:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** {
  29              		.loc 1 143 1 view -0
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccIvaTEZ.s 			page 4


  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 08B5     		push	{r3, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 3, -8
  37              		.cfi_offset 14, -4
 144:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   RCC_APB1PeriphResetCmd(RCC_APB1Periph_PWR, ENABLE);
  38              		.loc 1 144 3 view .LVU1
  39 0002 0121     		movs	r1, #1
  40 0004 4FF08050 		mov	r0, #268435456
  41 0008 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
  42              	.LVL0:
 145:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   RCC_APB1PeriphResetCmd(RCC_APB1Periph_PWR, DISABLE);
  43              		.loc 1 145 3 view .LVU2
  44 000c 0021     		movs	r1, #0
  45 000e 4FF08050 		mov	r0, #268435456
  46 0012 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
  47              	.LVL1:
 146:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** }
  48              		.loc 1 146 1 is_stmt 0 view .LVU3
  49 0016 08BD     		pop	{r3, pc}
  50              		.cfi_endproc
  51              	.LFE130:
  53              		.section	.text.PWR_BackupAccessCmd,"ax",%progbits
  54              		.align	1
  55              		.global	PWR_BackupAccessCmd
  56              		.syntax unified
  57              		.thumb
  58              		.thumb_func
  59              		.fpu fpv4-sp-d16
  61              	PWR_BackupAccessCmd:
  62              	.LVL2:
  63              	.LFB131:
 147:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** 
 148:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** /**
 149:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   * @brief  Enables or disables access to the backup domain (RTC registers, RTC 
 150:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *         backup data registers and backup SRAM).
 151:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   * @note   If the HSE divided by 2, 3, ..31 is used as the RTC clock, the 
 152:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *         Backup Domain Access should be kept enabled.
 153:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   * @param  NewState: new state of the access to the backup domain.
 154:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *          This parameter can be: ENABLE or DISABLE.
 155:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   * @retval None
 156:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   */
 157:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** void PWR_BackupAccessCmd(FunctionalState NewState)
 158:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** {
  64              		.loc 1 158 1 is_stmt 1 view -0
  65              		.cfi_startproc
  66              		@ args = 0, pretend = 0, frame = 0
  67              		@ frame_needed = 0, uses_anonymous_args = 0
  68              		@ link register save eliminated.
 159:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   /* Check the parameters */
 160:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
  69              		.loc 1 160 3 view .LVU5
 161:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   
 162:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *(__IO uint32_t *) CR_DBP_BB = (uint32_t)NewState;
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccIvaTEZ.s 			page 5


  70              		.loc 1 162 3 view .LVU6
  71              		.loc 1 162 32 is_stmt 0 view .LVU7
  72 0000 014B     		ldr	r3, .L4
  73 0002 1862     		str	r0, [r3, #32]
 163:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** }
  74              		.loc 1 163 1 view .LVU8
  75 0004 7047     		bx	lr
  76              	.L5:
  77 0006 00BF     		.align	2
  78              	.L4:
  79 0008 00000E42 		.word	1108213760
  80              		.cfi_endproc
  81              	.LFE131:
  83              		.section	.text.PWR_PVDLevelConfig,"ax",%progbits
  84              		.align	1
  85              		.global	PWR_PVDLevelConfig
  86              		.syntax unified
  87              		.thumb
  88              		.thumb_func
  89              		.fpu fpv4-sp-d16
  91              	PWR_PVDLevelConfig:
  92              	.LVL3:
  93              	.LFB132:
 164:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** 
 165:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** /**
 166:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   * @}
 167:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   */
 168:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** 
 169:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** /** @defgroup PWR_Group2 PVD configuration functions
 170:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****  *  @brief   PVD configuration functions 
 171:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****  *
 172:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** @verbatim   
 173:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****  ===============================================================================
 174:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****                     ##### PVD configuration functions #####
 175:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****  ===============================================================================  
 176:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****     [..]
 177:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****       (+) The PVD is used to monitor the VDD power supply by comparing it to a 
 178:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****           threshold selected by the PVD Level (PLS[2:0] bits in the PWR_CR).
 179:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****       (+) A PVDO flag is available to indicate if VDD/VDDA is higher or lower 
 180:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****           than the PVD threshold. This event is internally connected to the EXTI 
 181:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****           line16 and can generate an interrupt if enabled through the EXTI registers.
 182:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****       (+) The PVD is stopped in Standby mode.
 183:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** 
 184:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** @endverbatim
 185:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   * @{
 186:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   */
 187:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** 
 188:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** /**
 189:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   * @brief  Configures the voltage threshold detected by the Power Voltage Detector(PVD).
 190:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   * @param  PWR_PVDLevel: specifies the PVD detection level
 191:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *          This parameter can be one of the following values:
 192:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *            @arg PWR_PVDLevel_0
 193:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *            @arg PWR_PVDLevel_1
 194:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *            @arg PWR_PVDLevel_2
 195:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *            @arg PWR_PVDLevel_3
 196:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *            @arg PWR_PVDLevel_4
 197:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *            @arg PWR_PVDLevel_5
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccIvaTEZ.s 			page 6


 198:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *            @arg PWR_PVDLevel_6
 199:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *            @arg PWR_PVDLevel_7
 200:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   * @note   Refer to the electrical characteristics of your device datasheet for
 201:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *         more details about the voltage threshold corresponding to each 
 202:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *         detection level.
 203:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   * @retval None
 204:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   */
 205:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** void PWR_PVDLevelConfig(uint32_t PWR_PVDLevel)
 206:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** {
  94              		.loc 1 206 1 is_stmt 1 view -0
  95              		.cfi_startproc
  96              		@ args = 0, pretend = 0, frame = 0
  97              		@ frame_needed = 0, uses_anonymous_args = 0
  98              		@ link register save eliminated.
 207:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   uint32_t tmpreg = 0;
  99              		.loc 1 207 3 view .LVU10
 208:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   
 209:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   /* Check the parameters */
 210:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   assert_param(IS_PWR_PVD_LEVEL(PWR_PVDLevel));
 100              		.loc 1 210 3 view .LVU11
 211:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   
 212:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   tmpreg = PWR->CR;
 101              		.loc 1 212 3 view .LVU12
 102              		.loc 1 212 10 is_stmt 0 view .LVU13
 103 0000 034A     		ldr	r2, .L7
 104 0002 1368     		ldr	r3, [r2]
 105              	.LVL4:
 213:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   
 214:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   /* Clear PLS[7:5] bits */
 215:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   tmpreg &= CR_PLS_MASK;
 106              		.loc 1 215 3 is_stmt 1 view .LVU14
 107              		.loc 1 215 10 is_stmt 0 view .LVU15
 108 0004 23F0E003 		bic	r3, r3, #224
 109              	.LVL5:
 216:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   
 217:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   /* Set PLS[7:5] bits according to PWR_PVDLevel value */
 218:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   tmpreg |= PWR_PVDLevel;
 110              		.loc 1 218 3 is_stmt 1 view .LVU16
 111              		.loc 1 218 10 is_stmt 0 view .LVU17
 112 0008 0343     		orrs	r3, r3, r0
 113              	.LVL6:
 219:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   
 220:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   /* Store the new value */
 221:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   PWR->CR = tmpreg;
 114              		.loc 1 221 3 is_stmt 1 view .LVU18
 115              		.loc 1 221 11 is_stmt 0 view .LVU19
 116 000a 1360     		str	r3, [r2]
 222:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** }
 117              		.loc 1 222 1 view .LVU20
 118 000c 7047     		bx	lr
 119              	.L8:
 120 000e 00BF     		.align	2
 121              	.L7:
 122 0010 00700040 		.word	1073770496
 123              		.cfi_endproc
 124              	.LFE132:
 126              		.section	.text.PWR_PVDCmd,"ax",%progbits
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccIvaTEZ.s 			page 7


 127              		.align	1
 128              		.global	PWR_PVDCmd
 129              		.syntax unified
 130              		.thumb
 131              		.thumb_func
 132              		.fpu fpv4-sp-d16
 134              	PWR_PVDCmd:
 135              	.LVL7:
 136              	.LFB133:
 223:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** 
 224:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** /**
 225:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   * @brief  Enables or disables the Power Voltage Detector(PVD).
 226:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   * @param  NewState: new state of the PVD.
 227:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *         This parameter can be: ENABLE or DISABLE.
 228:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   * @retval None
 229:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   */
 230:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** void PWR_PVDCmd(FunctionalState NewState)
 231:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** {
 137              		.loc 1 231 1 is_stmt 1 view -0
 138              		.cfi_startproc
 139              		@ args = 0, pretend = 0, frame = 0
 140              		@ frame_needed = 0, uses_anonymous_args = 0
 141              		@ link register save eliminated.
 232:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   /* Check the parameters */
 233:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 142              		.loc 1 233 3 view .LVU22
 234:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   
 235:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *(__IO uint32_t *) CR_PVDE_BB = (uint32_t)NewState;
 143              		.loc 1 235 3 view .LVU23
 144              		.loc 1 235 33 is_stmt 0 view .LVU24
 145 0000 014B     		ldr	r3, .L10
 146 0002 1861     		str	r0, [r3, #16]
 236:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** }
 147              		.loc 1 236 1 view .LVU25
 148 0004 7047     		bx	lr
 149              	.L11:
 150 0006 00BF     		.align	2
 151              	.L10:
 152 0008 00000E42 		.word	1108213760
 153              		.cfi_endproc
 154              	.LFE133:
 156              		.section	.text.PWR_WakeUpPinCmd,"ax",%progbits
 157              		.align	1
 158              		.global	PWR_WakeUpPinCmd
 159              		.syntax unified
 160              		.thumb
 161              		.thumb_func
 162              		.fpu fpv4-sp-d16
 164              	PWR_WakeUpPinCmd:
 165              	.LVL8:
 166              	.LFB134:
 237:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** 
 238:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** /**
 239:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   * @}
 240:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   */
 241:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** 
 242:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** /** @defgroup PWR_Group3 WakeUp pin configuration functions
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccIvaTEZ.s 			page 8


 243:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****  *  @brief   WakeUp pin configuration functions 
 244:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****  *
 245:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** @verbatim   
 246:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****  ===============================================================================
 247:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****                  ##### WakeUp pin configuration functions #####
 248:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****  ===============================================================================  
 249:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****     [..]
 250:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****       (+) WakeUp pin is used to wakeup the system from Standby mode. This pin is 
 251:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****           forced in input pull down configuration and is active on rising edges.
 252:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****       (+) There is only one WakeUp pin: WakeUp Pin 1 on PA.00.
 253:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** 
 254:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** @endverbatim
 255:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   * @{
 256:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   */
 257:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** 
 258:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** /**
 259:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   * @brief  Enables or disables the WakeUp Pin functionality.
 260:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   * @param  NewState: new state of the WakeUp Pin functionality.
 261:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *         This parameter can be: ENABLE or DISABLE.
 262:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   * @retval None
 263:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   */
 264:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** void PWR_WakeUpPinCmd(FunctionalState NewState)
 265:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** {
 167              		.loc 1 265 1 is_stmt 1 view -0
 168              		.cfi_startproc
 169              		@ args = 0, pretend = 0, frame = 0
 170              		@ frame_needed = 0, uses_anonymous_args = 0
 171              		@ link register save eliminated.
 266:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   /* Check the parameters */  
 267:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 172              		.loc 1 267 3 view .LVU27
 268:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** 
 269:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *(__IO uint32_t *) CSR_EWUP_BB = (uint32_t)NewState;
 173              		.loc 1 269 3 view .LVU28
 174              		.loc 1 269 34 is_stmt 0 view .LVU29
 175 0000 014B     		ldr	r3, .L13
 176 0002 C3F8A000 		str	r0, [r3, #160]
 270:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** }
 177              		.loc 1 270 1 view .LVU30
 178 0006 7047     		bx	lr
 179              	.L14:
 180              		.align	2
 181              	.L13:
 182 0008 00000E42 		.word	1108213760
 183              		.cfi_endproc
 184              	.LFE134:
 186              		.section	.text.PWR_BackupRegulatorCmd,"ax",%progbits
 187              		.align	1
 188              		.global	PWR_BackupRegulatorCmd
 189              		.syntax unified
 190              		.thumb
 191              		.thumb_func
 192              		.fpu fpv4-sp-d16
 194              	PWR_BackupRegulatorCmd:
 195              	.LVL9:
 196              	.LFB135:
 271:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** 
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccIvaTEZ.s 			page 9


 272:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** /**
 273:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   * @}
 274:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   */
 275:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** 
 276:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** /** @defgroup PWR_Group4 Main and Backup Regulators configuration functions
 277:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****  *  @brief   Main and Backup Regulators configuration functions 
 278:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****  *
 279:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** @verbatim   
 280:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****  ===============================================================================
 281:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****           ##### Main and Backup Regulators configuration functions #####
 282:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****  ===============================================================================  
 283:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****     [..]
 284:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****       (+) The backup domain includes 4 Kbytes of backup SRAM accessible only from 
 285:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****           the CPU, and address in 32-bit, 16-bit or 8-bit mode. Its content is 
 286:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****           retained even in Standby or VBAT mode when the low power backup regulator
 287:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****           is enabled. It can be considered as an internal EEPROM when VBAT is 
 288:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****           always present. You can use the PWR_BackupRegulatorCmd() function to 
 289:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****           enable the low power backup regulator and use the PWR_GetFlagStatus
 290:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****           (PWR_FLAG_BRR) to check if it is ready or not. 
 291:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** 
 292:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****       (+) When the backup domain is supplied by VDD (analog switch connected to VDD) 
 293:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****           the backup SRAM is powered from VDD which replaces the VBAT power supply to 
 294:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****           save battery life.
 295:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** 
 296:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****       (+) The backup SRAM is not mass erased by an tamper event. It is read 
 297:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****           protected to prevent confidential data, such as cryptographic private 
 298:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****           key, from being accessed. The backup SRAM can be erased only through 
 299:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****           the Flash interface when a protection level change from level 1 to 
 300:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****           level 0 is requested. 
 301:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****       -@- Refer to the description of Read protection (RDP) in the reference manual.
 302:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** 
 303:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****       (+) The main internal regulator can be configured to have a tradeoff between 
 304:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****           performance and power consumption when the device does not operate at 
 305:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****           the maximum frequency. 
 306:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****       (+) For STM32F405xx/407xx and STM32F415xx/417xx  Devices, the regulator can be     
 307:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****           configured on the fly through PWR_MainRegulatorModeConfig() function which  
 308:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****           configure VOS bit in PWR_CR register:
 309:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****         (++) When this bit is set (Regulator voltage output Scale 1 mode selected) 
 310:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****              the System frequency can go up to 168 MHz. 
 311:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****         (++) When this bit is reset (Regulator voltage output Scale 2 mode selected) 
 312:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****              the System frequency can go up to 144 MHz.
 313:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****              
 314:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****        (+) For STM32F42xxx/43xxx Devices, the regulator can be configured through    
 315:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****            PWR_MainRegulatorModeConfig() function which configure VOS[1:0] bits in
 316:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****            PWR_CR register:  
 317:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****            which configure VOS[1:0] bits in PWR_CR register: 
 318:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****         (++) When VOS[1:0] = 11 (Regulator voltage output Scale 1 mode selected) 
 319:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****              the System frequency can go up to 168 MHz. 
 320:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****         (++) When VOS[1:0] = 10 (Regulator voltage output Scale 2 mode selected) 
 321:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****              the System frequency can go up to 144 MHz.  
 322:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****         (++) When VOS[1:0] = 01 (Regulator voltage output Scale 3 mode selected) 
 323:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****              the System frequency can go up to 120 MHz. 
 324:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****                           
 325:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****        (+) For STM32F42xxx/43xxx Devices, the scale can be modified only when the PLL 
 326:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****            is OFF and the HSI or HSE clock source is selected as system clock. 
 327:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****            The new value programmed is active only when the PLL is ON.
 328:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****            When the PLL is OFF, the voltage scale 3 is automatically selected. 
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccIvaTEZ.s 			page 10


 329:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****         Refer to the datasheets for more details.
 330:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****         
 331:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****        (+) For STM32F42xxx/43xxx Devices, in Run mode: the main regulator has
 332:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****            2 operating modes available:
 333:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****         (++) Normal mode: The CPU and core logic operate at maximum frequency at a given 
 334:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****              voltage scaling (scale 1, scale 2 or scale 3)
 335:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****         (++) Over-drive mode: This mode allows the CPU and the core logic to operate at a 
 336:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****             higher frequency than the normal mode for a given voltage scaling (scale 1,  
 337:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****             scale 2 or scale 3). This mode is enabled through PWR_OverDriveCmd() function and
 338:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****             PWR_OverDriveSWCmd() function, to enter or exit from Over-drive mode please follow 
 339:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****             the sequence described in Reference manual.
 340:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****              
 341:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****        (+) For STM32F42xxx/43xxx Devices, in Stop mode: the main regulator or low power regulator 
 342:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****            supplies a low power voltage to the 1.2V domain, thus preserving the content of register
 343:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****            and internal SRAM. 2 operating modes are available:
 344:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****          (++) Normal mode: the 1.2V domain is preserved in nominal leakage mode. This mode is only 
 345:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****               available when the main regulator or the low power regulator is used in Scale 3 or 
 346:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****               low voltage mode.
 347:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****          (++) Under-drive mode: the 1.2V domain is preserved in reduced leakage mode. This mode is 
 348:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****               available when the main regulator or the low power regulator is in low voltage mode.
 349:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****               This mode is enabled through PWR_UnderDriveCmd() function.
 350:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****             
 351:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** @endverbatim
 352:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   * @{
 353:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   */
 354:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** 
 355:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** /**
 356:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   * @brief  Enables or disables the Backup Regulator.
 357:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   * @param  NewState: new state of the Backup Regulator.
 358:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *          This parameter can be: ENABLE or DISABLE.
 359:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   * @retval None
 360:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   */
 361:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** void PWR_BackupRegulatorCmd(FunctionalState NewState)
 362:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** {
 197              		.loc 1 362 1 is_stmt 1 view -0
 198              		.cfi_startproc
 199              		@ args = 0, pretend = 0, frame = 0
 200              		@ frame_needed = 0, uses_anonymous_args = 0
 201              		@ link register save eliminated.
 363:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   /* Check the parameters */
 364:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 202              		.loc 1 364 3 view .LVU32
 365:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** 
 366:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *(__IO uint32_t *) CSR_BRE_BB = (uint32_t)NewState;
 203              		.loc 1 366 3 view .LVU33
 204              		.loc 1 366 33 is_stmt 0 view .LVU34
 205 0000 014B     		ldr	r3, .L16
 206 0002 C3F8A400 		str	r0, [r3, #164]
 367:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** }
 207              		.loc 1 367 1 view .LVU35
 208 0006 7047     		bx	lr
 209              	.L17:
 210              		.align	2
 211              	.L16:
 212 0008 00000E42 		.word	1108213760
 213              		.cfi_endproc
 214              	.LFE135:
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccIvaTEZ.s 			page 11


 216              		.section	.text.PWR_MainRegulatorModeConfig,"ax",%progbits
 217              		.align	1
 218              		.global	PWR_MainRegulatorModeConfig
 219              		.syntax unified
 220              		.thumb
 221              		.thumb_func
 222              		.fpu fpv4-sp-d16
 224              	PWR_MainRegulatorModeConfig:
 225              	.LVL10:
 226              	.LFB136:
 368:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** 
 369:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** /**
 370:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   * @brief  Configures the main internal regulator output voltage.
 371:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   * @param  PWR_Regulator_Voltage: specifies the regulator output voltage to achieve
 372:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *         a tradeoff between performance and power consumption when the device does
 373:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *         not operate at the maximum frequency (refer to the datasheets for more details).
 374:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *          This parameter can be one of the following values:
 375:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *            @arg PWR_Regulator_Voltage_Scale1: Regulator voltage output Scale 1 mode, 
 376:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *                                                System frequency up to 168 MHz. 
 377:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *            @arg PWR_Regulator_Voltage_Scale2: Regulator voltage output Scale 2 mode, 
 378:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *                                                System frequency up to 144 MHz.    
 379:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *            @arg PWR_Regulator_Voltage_Scale3: Regulator voltage output Scale 3 mode, 
 380:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *                                                System frequency up to 120 MHz (only for STM32F4
 381:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   * @retval None
 382:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   */
 383:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** void PWR_MainRegulatorModeConfig(uint32_t PWR_Regulator_Voltage)
 384:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** {
 227              		.loc 1 384 1 is_stmt 1 view -0
 228              		.cfi_startproc
 229              		@ args = 0, pretend = 0, frame = 0
 230              		@ frame_needed = 0, uses_anonymous_args = 0
 231              		@ link register save eliminated.
 385:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   uint32_t tmpreg = 0;
 232              		.loc 1 385 3 view .LVU37
 386:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** 	
 387:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   /* Check the parameters */
 388:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   assert_param(IS_PWR_REGULATOR_VOLTAGE(PWR_Regulator_Voltage));
 233              		.loc 1 388 3 view .LVU38
 389:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** 
 390:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   tmpreg = PWR->CR;
 234              		.loc 1 390 3 view .LVU39
 235              		.loc 1 390 10 is_stmt 0 view .LVU40
 236 0000 034A     		ldr	r2, .L19
 237 0002 1368     		ldr	r3, [r2]
 238              	.LVL11:
 391:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   
 392:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   /* Clear VOS[15:14] bits */
 393:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   tmpreg &= CR_VOS_MASK;
 239              		.loc 1 393 3 is_stmt 1 view .LVU41
 240              		.loc 1 393 10 is_stmt 0 view .LVU42
 241 0004 23F44043 		bic	r3, r3, #49152
 242              	.LVL12:
 394:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   
 395:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   /* Set VOS[15:14] bits according to PWR_Regulator_Voltage value */
 396:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   tmpreg |= PWR_Regulator_Voltage;
 243              		.loc 1 396 3 is_stmt 1 view .LVU43
 244              		.loc 1 396 10 is_stmt 0 view .LVU44
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccIvaTEZ.s 			page 12


 245 0008 0343     		orrs	r3, r3, r0
 246              	.LVL13:
 397:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   
 398:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   /* Store the new value */
 399:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   PWR->CR = tmpreg;
 247              		.loc 1 399 3 is_stmt 1 view .LVU45
 248              		.loc 1 399 11 is_stmt 0 view .LVU46
 249 000a 1360     		str	r3, [r2]
 400:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** }
 250              		.loc 1 400 1 view .LVU47
 251 000c 7047     		bx	lr
 252              	.L20:
 253 000e 00BF     		.align	2
 254              	.L19:
 255 0010 00700040 		.word	1073770496
 256              		.cfi_endproc
 257              	.LFE136:
 259              		.section	.text.PWR_OverDriveCmd,"ax",%progbits
 260              		.align	1
 261              		.global	PWR_OverDriveCmd
 262              		.syntax unified
 263              		.thumb
 264              		.thumb_func
 265              		.fpu fpv4-sp-d16
 267              	PWR_OverDriveCmd:
 268              	.LVL14:
 269              	.LFB137:
 401:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** 
 402:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** /**
 403:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   * @brief  Enables or disables the Over-Drive.
 404:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   * 
 405:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   * @note   This function can be used only for STM32F42xxx/STM3243xxx devices.
 406:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *         This mode allows the CPU and the core logic to operate at a higher frequency
 407:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *         than the normal mode for a given voltage scaling (scale 1, scale 2 or scale 3).   
 408:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   * 
 409:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   * @note   It is recommended to enter or exit Over-drive mode when the application is not running 
 410:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *          critical tasks and when the system clock source is either HSI or HSE. 
 411:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *          During the Over-drive switch activation, no peripheral clocks should be enabled.   
 412:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *          The peripheral clocks must be enabled once the Over-drive mode is activated.
 413:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *            
 414:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   * @param  NewState: new state of the Over Drive mode.
 415:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *          This parameter can be: ENABLE or DISABLE.
 416:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   * @retval None
 417:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   */
 418:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** void PWR_OverDriveCmd(FunctionalState NewState)
 419:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** {
 270              		.loc 1 419 1 is_stmt 1 view -0
 271              		.cfi_startproc
 272              		@ args = 0, pretend = 0, frame = 0
 273              		@ frame_needed = 0, uses_anonymous_args = 0
 274              		@ link register save eliminated.
 420:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   /* Check the parameters */
 421:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 275              		.loc 1 421 3 view .LVU49
 422:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   
 423:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   /* Set/Reset the ODEN bit to enable/disable the Over Drive mode */
 424:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *(__IO uint32_t *) CR_ODEN_BB = (uint32_t)NewState;
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccIvaTEZ.s 			page 13


 276              		.loc 1 424 3 view .LVU50
 277              		.loc 1 424 33 is_stmt 0 view .LVU51
 278 0000 014B     		ldr	r3, .L22
 279 0002 1864     		str	r0, [r3, #64]
 425:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** }
 280              		.loc 1 425 1 view .LVU52
 281 0004 7047     		bx	lr
 282              	.L23:
 283 0006 00BF     		.align	2
 284              	.L22:
 285 0008 00000E42 		.word	1108213760
 286              		.cfi_endproc
 287              	.LFE137:
 289              		.section	.text.PWR_OverDriveSWCmd,"ax",%progbits
 290              		.align	1
 291              		.global	PWR_OverDriveSWCmd
 292              		.syntax unified
 293              		.thumb
 294              		.thumb_func
 295              		.fpu fpv4-sp-d16
 297              	PWR_OverDriveSWCmd:
 298              	.LVL15:
 299              	.LFB138:
 426:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** 
 427:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** /**
 428:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   * @brief  Enables or disables the Over-Drive switching.
 429:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   * 
 430:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   * @note   This function can be used only for STM32F42xxx/STM3243xxx devices. 
 431:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *       
 432:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   * @param  NewState: new state of the Over Drive switching mode.
 433:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *          This parameter can be: ENABLE or DISABLE.
 434:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   * @retval None
 435:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   */
 436:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** void PWR_OverDriveSWCmd(FunctionalState NewState)
 437:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** {
 300              		.loc 1 437 1 is_stmt 1 view -0
 301              		.cfi_startproc
 302              		@ args = 0, pretend = 0, frame = 0
 303              		@ frame_needed = 0, uses_anonymous_args = 0
 304              		@ link register save eliminated.
 438:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   /* Check the parameters */
 439:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 305              		.loc 1 439 3 view .LVU54
 440:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** 
 441:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   /* Set/Reset the ODSWEN bit to enable/disable the Over Drive switching mode */
 442:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *(__IO uint32_t *) CR_ODSWEN_BB = (uint32_t)NewState;
 306              		.loc 1 442 3 view .LVU55
 307              		.loc 1 442 35 is_stmt 0 view .LVU56
 308 0000 014B     		ldr	r3, .L25
 309 0002 5864     		str	r0, [r3, #68]
 443:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** }
 310              		.loc 1 443 1 view .LVU57
 311 0004 7047     		bx	lr
 312              	.L26:
 313 0006 00BF     		.align	2
 314              	.L25:
 315 0008 00000E42 		.word	1108213760
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccIvaTEZ.s 			page 14


 316              		.cfi_endproc
 317              	.LFE138:
 319              		.section	.text.PWR_UnderDriveCmd,"ax",%progbits
 320              		.align	1
 321              		.global	PWR_UnderDriveCmd
 322              		.syntax unified
 323              		.thumb
 324              		.thumb_func
 325              		.fpu fpv4-sp-d16
 327              	PWR_UnderDriveCmd:
 328              	.LVL16:
 329              	.LFB139:
 444:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** 
 445:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** /**
 446:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   * @brief   Enables or disables the Under-Drive mode.
 447:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   * 
 448:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   * @note   This function can be used only for STM32F42xxx/STM3243xxx devices.
 449:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   * @note    This mode is enabled only with STOP low power mode.
 450:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *          In this mode, the 1.2V domain is preserved in reduced leakage mode. This 
 451:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *          mode is only available when the main regulator or the low power regulator 
 452:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *          is in low voltage mode
 453:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *        
 454:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   * @note   If the Under-drive mode was enabled, it is automatically disabled after 
 455:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *         exiting Stop mode. 
 456:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *         When the voltage regulator operates in Under-drive mode, an additional  
 457:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *         startup delay is induced when waking up from Stop mode.
 458:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *                    
 459:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   * @param  NewState: new state of the Under Drive mode.
 460:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *          This parameter can be: ENABLE or DISABLE.
 461:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   * @retval None
 462:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   */
 463:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** void PWR_UnderDriveCmd(FunctionalState NewState)
 464:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** {
 330              		.loc 1 464 1 is_stmt 1 view -0
 331              		.cfi_startproc
 332              		@ args = 0, pretend = 0, frame = 0
 333              		@ frame_needed = 0, uses_anonymous_args = 0
 334              		@ link register save eliminated.
 465:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   /* Check the parameters */
 466:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 335              		.loc 1 466 3 view .LVU59
 467:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** 
 468:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   if (NewState != DISABLE)
 336              		.loc 1 468 3 view .LVU60
 337              		.loc 1 468 6 is_stmt 0 view .LVU61
 338 0000 28B1     		cbz	r0, .L28
 469:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   {
 470:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****     /* Set the UDEN[1:0] bits to enable the Under Drive mode */
 471:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****     PWR->CR |= (uint32_t)PWR_CR_UDEN;
 339              		.loc 1 471 5 is_stmt 1 view .LVU62
 340              		.loc 1 471 13 is_stmt 0 view .LVU63
 341 0002 064A     		ldr	r2, .L30
 342 0004 1368     		ldr	r3, [r2]
 343 0006 43F44023 		orr	r3, r3, #786432
 344 000a 1360     		str	r3, [r2]
 345 000c 7047     		bx	lr
 346              	.L28:
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccIvaTEZ.s 			page 15


 472:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   }
 473:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   else
 474:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   {
 475:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****     /* Reset the UDEN[1:0] bits to disable the Under Drive mode */
 476:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****     PWR->CR &= (uint32_t)(~PWR_CR_UDEN);
 347              		.loc 1 476 5 is_stmt 1 view .LVU64
 348              		.loc 1 476 13 is_stmt 0 view .LVU65
 349 000e 034A     		ldr	r2, .L30
 350 0010 1368     		ldr	r3, [r2]
 351 0012 23F44023 		bic	r3, r3, #786432
 352 0016 1360     		str	r3, [r2]
 477:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   }
 478:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** }
 353              		.loc 1 478 1 view .LVU66
 354 0018 7047     		bx	lr
 355              	.L31:
 356 001a 00BF     		.align	2
 357              	.L30:
 358 001c 00700040 		.word	1073770496
 359              		.cfi_endproc
 360              	.LFE139:
 362              		.section	.text.PWR_MainRegulatorLowVoltageCmd,"ax",%progbits
 363              		.align	1
 364              		.global	PWR_MainRegulatorLowVoltageCmd
 365              		.syntax unified
 366              		.thumb
 367              		.thumb_func
 368              		.fpu fpv4-sp-d16
 370              	PWR_MainRegulatorLowVoltageCmd:
 371              	.LVL17:
 372              	.LFB140:
 479:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** 
 480:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** /**
 481:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   * @brief Enables or disables the Main Regulator low voltage mode.
 482:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *
 483:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   * @note  This mode is only available for STM32F401xx/STM32F411xx devices.
 484:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *
 485:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   * @param  NewState: new state of the Under Drive mode.
 486:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *          This parameter can be: ENABLE or DISABLE.
 487:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   * @retval None
 488:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   */
 489:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** void PWR_MainRegulatorLowVoltageCmd(FunctionalState NewState)
 490:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** { 
 373              		.loc 1 490 1 is_stmt 1 view -0
 374              		.cfi_startproc
 375              		@ args = 0, pretend = 0, frame = 0
 376              		@ frame_needed = 0, uses_anonymous_args = 0
 377              		@ link register save eliminated.
 491:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   /* Check the parameters */
 492:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 378              		.loc 1 492 3 view .LVU68
 493:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   
 494:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   if (NewState != DISABLE)
 379              		.loc 1 494 3 view .LVU69
 380              		.loc 1 494 6 is_stmt 0 view .LVU70
 381 0000 18B1     		cbz	r0, .L33
 495:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   {
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccIvaTEZ.s 			page 16


 496:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****     *(__IO uint32_t *) CR_MRLVDS_BB = (uint32_t)ENABLE;
 382              		.loc 1 496 5 is_stmt 1 view .LVU71
 383              		.loc 1 496 37 is_stmt 0 view .LVU72
 384 0002 044B     		ldr	r3, .L35
 385 0004 0122     		movs	r2, #1
 386 0006 DA62     		str	r2, [r3, #44]
 387 0008 7047     		bx	lr
 388              	.L33:
 497:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   }
 498:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   else
 499:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   {
 500:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****     *(__IO uint32_t *) CR_MRLVDS_BB = (uint32_t)DISABLE;
 389              		.loc 1 500 5 is_stmt 1 view .LVU73
 390              		.loc 1 500 37 is_stmt 0 view .LVU74
 391 000a 024B     		ldr	r3, .L35
 392 000c 0022     		movs	r2, #0
 393 000e DA62     		str	r2, [r3, #44]
 501:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   }
 502:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** }
 394              		.loc 1 502 1 view .LVU75
 395 0010 7047     		bx	lr
 396              	.L36:
 397 0012 00BF     		.align	2
 398              	.L35:
 399 0014 00000E42 		.word	1108213760
 400              		.cfi_endproc
 401              	.LFE140:
 403              		.section	.text.PWR_LowRegulatorLowVoltageCmd,"ax",%progbits
 404              		.align	1
 405              		.global	PWR_LowRegulatorLowVoltageCmd
 406              		.syntax unified
 407              		.thumb
 408              		.thumb_func
 409              		.fpu fpv4-sp-d16
 411              	PWR_LowRegulatorLowVoltageCmd:
 412              	.LVL18:
 413              	.LFB141:
 503:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** 
 504:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** /**
 505:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   * @brief Enables or disables the Low Power Regulator low voltage mode.
 506:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *
 507:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   * @note  This mode is only available for STM32F401xx/STM32F411xx devices.
 508:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *
 509:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   * @param  NewState: new state of the Under Drive mode.
 510:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *          This parameter can be: ENABLE or DISABLE.
 511:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   * @retval None
 512:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   */
 513:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** void PWR_LowRegulatorLowVoltageCmd(FunctionalState NewState)
 514:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** {
 414              		.loc 1 514 1 is_stmt 1 view -0
 415              		.cfi_startproc
 416              		@ args = 0, pretend = 0, frame = 0
 417              		@ frame_needed = 0, uses_anonymous_args = 0
 418              		@ link register save eliminated.
 515:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   /* Check the parameters */
 516:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 419              		.loc 1 516 3 view .LVU77
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccIvaTEZ.s 			page 17


 517:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   
 518:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   if (NewState != DISABLE)
 420              		.loc 1 518 3 view .LVU78
 421              		.loc 1 518 6 is_stmt 0 view .LVU79
 422 0000 18B1     		cbz	r0, .L38
 519:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   {
 520:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****     *(__IO uint32_t *) CR_LPLVDS_BB = (uint32_t)ENABLE;
 423              		.loc 1 520 5 is_stmt 1 view .LVU80
 424              		.loc 1 520 37 is_stmt 0 view .LVU81
 425 0002 044B     		ldr	r3, .L40
 426 0004 0122     		movs	r2, #1
 427 0006 9A62     		str	r2, [r3, #40]
 428 0008 7047     		bx	lr
 429              	.L38:
 521:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   }
 522:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   else
 523:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   {
 524:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****     *(__IO uint32_t *) CR_LPLVDS_BB = (uint32_t)DISABLE;
 430              		.loc 1 524 5 is_stmt 1 view .LVU82
 431              		.loc 1 524 37 is_stmt 0 view .LVU83
 432 000a 024B     		ldr	r3, .L40
 433 000c 0022     		movs	r2, #0
 434 000e 9A62     		str	r2, [r3, #40]
 525:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   }
 526:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** }
 435              		.loc 1 526 1 view .LVU84
 436 0010 7047     		bx	lr
 437              	.L41:
 438 0012 00BF     		.align	2
 439              	.L40:
 440 0014 00000E42 		.word	1108213760
 441              		.cfi_endproc
 442              	.LFE141:
 444              		.section	.text.PWR_FlashPowerDownCmd,"ax",%progbits
 445              		.align	1
 446              		.global	PWR_FlashPowerDownCmd
 447              		.syntax unified
 448              		.thumb
 449              		.thumb_func
 450              		.fpu fpv4-sp-d16
 452              	PWR_FlashPowerDownCmd:
 453              	.LVL19:
 454              	.LFB142:
 527:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** 
 528:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** /**
 529:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   * @}
 530:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   */
 531:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** 
 532:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** /** @defgroup PWR_Group5 FLASH Power Down configuration functions
 533:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****  *  @brief   FLASH Power Down configuration functions 
 534:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****  *
 535:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** @verbatim   
 536:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****  ===============================================================================
 537:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****              ##### FLASH Power Down configuration functions #####
 538:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****  ===============================================================================  
 539:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****     [..]
 540:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****       (+) By setting the FPDS bit in the PWR_CR register by using the 
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccIvaTEZ.s 			page 18


 541:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****           PWR_FlashPowerDownCmd() function, the Flash memory also enters power 
 542:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****           down mode when the device enters Stop mode. When the Flash memory 
 543:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****           is in power down mode, an additional startup delay is incurred when 
 544:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****           waking up from Stop mode.
 545:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** @endverbatim
 546:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   * @{
 547:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   */
 548:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** 
 549:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** /**
 550:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   * @brief  Enables or disables the Flash Power Down in STOP mode.
 551:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   * @param  NewState: new state of the Flash power mode.
 552:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *          This parameter can be: ENABLE or DISABLE.
 553:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   * @retval None
 554:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   */
 555:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** void PWR_FlashPowerDownCmd(FunctionalState NewState)
 556:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** {
 455              		.loc 1 556 1 is_stmt 1 view -0
 456              		.cfi_startproc
 457              		@ args = 0, pretend = 0, frame = 0
 458              		@ frame_needed = 0, uses_anonymous_args = 0
 459              		@ link register save eliminated.
 557:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   /* Check the parameters */
 558:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 460              		.loc 1 558 3 view .LVU86
 559:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** 
 560:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *(__IO uint32_t *) CR_FPDS_BB = (uint32_t)NewState;
 461              		.loc 1 560 3 view .LVU87
 462              		.loc 1 560 33 is_stmt 0 view .LVU88
 463 0000 014B     		ldr	r3, .L43
 464 0002 5862     		str	r0, [r3, #36]
 561:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** }
 465              		.loc 1 561 1 view .LVU89
 466 0004 7047     		bx	lr
 467              	.L44:
 468 0006 00BF     		.align	2
 469              	.L43:
 470 0008 00000E42 		.word	1108213760
 471              		.cfi_endproc
 472              	.LFE142:
 474              		.section	.text.PWR_EnterSTOPMode,"ax",%progbits
 475              		.align	1
 476              		.global	PWR_EnterSTOPMode
 477              		.syntax unified
 478              		.thumb
 479              		.thumb_func
 480              		.fpu fpv4-sp-d16
 482              	PWR_EnterSTOPMode:
 483              	.LVL20:
 484              	.LFB143:
 562:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** 
 563:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** /**
 564:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   * @}
 565:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   */
 566:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** 
 567:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** /** @defgroup PWR_Group6 Low Power modes configuration functions
 568:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****  *  @brief   Low Power modes configuration functions 
 569:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****  *
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccIvaTEZ.s 			page 19


 570:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** @verbatim   
 571:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****  ===============================================================================
 572:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****               ##### Low Power modes configuration functions #####
 573:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****  ===============================================================================  
 574:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****     [..]
 575:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****       The devices feature 3 low-power modes:
 576:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****       (+) Sleep mode: Cortex-M4 core stopped, peripherals kept running.
 577:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****       (+) Stop mode: all clocks are stopped, regulator running, regulator 
 578:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****           in low power mode
 579:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****       (+) Standby mode: 1.2V domain powered off.
 580:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****    
 581:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****    *** Sleep mode ***
 582:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****    ==================
 583:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****     [..]
 584:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****       (+) Entry:
 585:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****         (++) The Sleep mode is entered by using the __WFI() or __WFE() functions.
 586:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****       (+) Exit:
 587:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****         (++) Any peripheral interrupt acknowledged by the nested vectored interrupt 
 588:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****              controller (NVIC) can wake up the device from Sleep mode.
 589:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** 
 590:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****    *** Stop mode ***
 591:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****    =================
 592:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****     [..]
 593:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****       In Stop mode, all clocks in the 1.2V domain are stopped, the PLL, the HSI,
 594:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****       and the HSE RC oscillators are disabled. Internal SRAM and register contents 
 595:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****       are preserved.
 596:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****       The voltage regulator can be configured either in normal or low-power mode.
 597:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****       To minimize the consumption In Stop mode, FLASH can be powered off before 
 598:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****       entering the Stop mode. It can be switched on again by software after exiting 
 599:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****       the Stop mode using the PWR_FlashPowerDownCmd() function. 
 600:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****    
 601:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****       (+) Entry:
 602:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****         (++) The Stop mode is entered using the PWR_EnterSTOPMode(PWR_MainRegulator_ON) 
 603:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****              function with:
 604:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****           (+++) Main regulator ON.
 605:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****           (+++) Low Power regulator ON.
 606:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****       (+) Exit:
 607:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****         (++) Any EXTI Line (Internal or External) configured in Interrupt/Event mode.
 608:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****       
 609:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****    *** Standby mode ***
 610:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****    ====================
 611:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****     [..]
 612:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****       The Standby mode allows to achieve the lowest power consumption. It is based 
 613:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****       on the Cortex-M4 deepsleep mode, with the voltage regulator disabled. 
 614:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****       The 1.2V domain is consequently powered off. The PLL, the HSI oscillator and 
 615:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****       the HSE oscillator are also switched off. SRAM and register contents are lost 
 616:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****       except for the RTC registers, RTC backup registers, backup SRAM and Standby 
 617:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****       circuitry.
 618:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****    
 619:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****       The voltage regulator is OFF.
 620:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****       
 621:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****       (+) Entry:
 622:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****         (++) The Standby mode is entered using the PWR_EnterSTANDBYMode() function.
 623:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****       (+) Exit:
 624:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****         (++) WKUP pin rising edge, RTC alarm (Alarm A and Alarm B), RTC wakeup,
 625:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****              tamper event, time-stamp event, external reset in NRST pin, IWDG reset.              
 626:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** 
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccIvaTEZ.s 			page 20


 627:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****    *** Auto-wakeup (AWU) from low-power mode ***
 628:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****    =============================================
 629:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****     [..]
 630:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****       The MCU can be woken up from low-power mode by an RTC Alarm event, an RTC 
 631:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****       Wakeup event, a tamper event, a time-stamp event, or a comparator event, 
 632:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****       without depending on an external interrupt (Auto-wakeup mode).
 633:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** 
 634:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****       (#) RTC auto-wakeup (AWU) from the Stop mode
 635:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****        
 636:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****         (++) To wake up from the Stop mode with an RTC alarm event, it is necessary to:
 637:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****           (+++) Configure the EXTI Line 17 to be sensitive to rising edges (Interrupt 
 638:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****                 or Event modes) using the EXTI_Init() function.
 639:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****           (+++) Enable the RTC Alarm Interrupt using the RTC_ITConfig() function
 640:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****           (+++) Configure the RTC to generate the RTC alarm using the RTC_SetAlarm() 
 641:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****                 and RTC_AlarmCmd() functions.
 642:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****         (++) To wake up from the Stop mode with an RTC Tamper or time stamp event, it 
 643:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****              is necessary to:
 644:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****           (+++) Configure the EXTI Line 21 to be sensitive to rising edges (Interrupt 
 645:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****                 or Event modes) using the EXTI_Init() function.
 646:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****           (+++) Enable the RTC Tamper or time stamp Interrupt using the RTC_ITConfig() 
 647:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****                 function
 648:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****           (+++) Configure the RTC to detect the tamper or time stamp event using the
 649:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****                 RTC_TimeStampConfig(), RTC_TamperTriggerConfig() and RTC_TamperCmd()
 650:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****                 functions.
 651:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****         (++) To wake up from the Stop mode with an RTC WakeUp event, it is necessary to:
 652:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****            (+++) Configure the EXTI Line 22 to be sensitive to rising edges (Interrupt 
 653:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****                  or Event modes) using the EXTI_Init() function.
 654:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****            (+++) Enable the RTC WakeUp Interrupt using the RTC_ITConfig() function
 655:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****            (+++) Configure the RTC to generate the RTC WakeUp event using the RTC_WakeUpClockConfig
 656:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****                  RTC_SetWakeUpCounter() and RTC_WakeUpCmd() functions.
 657:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** 
 658:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****       (#) RTC auto-wakeup (AWU) from the Standby mode
 659:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****    
 660:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****         (++) To wake up from the Standby mode with an RTC alarm event, it is necessary to:
 661:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****           (+++) Enable the RTC Alarm Interrupt using the RTC_ITConfig() function
 662:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****           (+++) Configure the RTC to generate the RTC alarm using the RTC_SetAlarm() 
 663:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****                 and RTC_AlarmCmd() functions.
 664:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****         (++) To wake up from the Standby mode with an RTC Tamper or time stamp event, it 
 665:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****              is necessary to:
 666:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****           (+++) Enable the RTC Tamper or time stamp Interrupt using the RTC_ITConfig() 
 667:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****                 function
 668:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****           (+++) Configure the RTC to detect the tamper or time stamp event using the
 669:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****                 RTC_TimeStampConfig(), RTC_TamperTriggerConfig() and RTC_TamperCmd()
 670:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****                 functions.
 671:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****         (++) To wake up from the Standby mode with an RTC WakeUp event, it is necessary to:
 672:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****           (+++) Enable the RTC WakeUp Interrupt using the RTC_ITConfig() function
 673:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****           (+++) Configure the RTC to generate the RTC WakeUp event using the RTC_WakeUpClockConfig(
 674:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****                 RTC_SetWakeUpCounter() and RTC_WakeUpCmd() functions.
 675:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** 
 676:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** @endverbatim
 677:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   * @{
 678:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   */
 679:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** 
 680:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** /**
 681:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   * @brief  Enters STOP mode.
 682:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *   
 683:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   * @note   In Stop mode, all I/O pins keep the same state as in Run mode.
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccIvaTEZ.s 			page 21


 684:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   * @note   When exiting Stop mode by issuing an interrupt or a wakeup event, 
 685:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *         the HSI RC oscillator is selected as system clock.
 686:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   * @note   When the voltage regulator operates in low power mode, an additional 
 687:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *         startup delay is incurred when waking up from Stop mode. 
 688:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *         By keeping the internal regulator ON during Stop mode, the consumption 
 689:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *         is higher although the startup time is reduced.
 690:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *     
 691:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   * @param  PWR_Regulator: specifies the regulator state in STOP mode.
 692:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *          This parameter can be one of the following values:
 693:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *            @arg PWR_MainRegulator_ON: STOP mode with regulator ON
 694:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *            @arg PWR_LowPowerRegulator_ON: STOP mode with low power regulator ON
 695:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   * @param  PWR_STOPEntry: specifies if STOP mode in entered with WFI or WFE instruction.
 696:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *          This parameter can be one of the following values:
 697:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *            @arg PWR_STOPEntry_WFI: enter STOP mode with WFI instruction
 698:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *            @arg PWR_STOPEntry_WFE: enter STOP mode with WFE instruction
 699:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   * @retval None
 700:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   */
 701:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** void PWR_EnterSTOPMode(uint32_t PWR_Regulator, uint8_t PWR_STOPEntry)
 702:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** {
 485              		.loc 1 702 1 is_stmt 1 view -0
 486              		.cfi_startproc
 487              		@ args = 0, pretend = 0, frame = 0
 488              		@ frame_needed = 0, uses_anonymous_args = 0
 489              		@ link register save eliminated.
 703:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   uint32_t tmpreg = 0;
 490              		.loc 1 703 3 view .LVU91
 704:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   
 705:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   /* Check the parameters */
 706:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   assert_param(IS_PWR_REGULATOR(PWR_Regulator));
 491              		.loc 1 706 3 view .LVU92
 707:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   assert_param(IS_PWR_STOP_ENTRY(PWR_STOPEntry));
 492              		.loc 1 707 3 view .LVU93
 708:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   
 709:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   /* Select the regulator state in STOP mode ---------------------------------*/
 710:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   tmpreg = PWR->CR;
 493              		.loc 1 710 3 view .LVU94
 494              		.loc 1 710 10 is_stmt 0 view .LVU95
 495 0000 0B4A     		ldr	r2, .L49
 496 0002 1368     		ldr	r3, [r2]
 497              	.LVL21:
 711:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   /* Clear PDDS and LPDS bits */
 712:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   tmpreg &= CR_DS_MASK;
 498              		.loc 1 712 3 is_stmt 1 view .LVU96
 499              		.loc 1 712 10 is_stmt 0 view .LVU97
 500 0004 23F44063 		bic	r3, r3, #3072
 501              	.LVL22:
 502              		.loc 1 712 10 view .LVU98
 503 0008 23F00303 		bic	r3, r3, #3
 504              	.LVL23:
 713:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   
 714:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   /* Set LPDS, MRLVDS and LPLVDS bits according to PWR_Regulator value */
 715:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   tmpreg |= PWR_Regulator;
 505              		.loc 1 715 3 is_stmt 1 view .LVU99
 506              		.loc 1 715 10 is_stmt 0 view .LVU100
 507 000c 0343     		orrs	r3, r3, r0
 508              	.LVL24:
 716:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccIvaTEZ.s 			page 22


 717:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   /* Store the new value */
 718:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   PWR->CR = tmpreg;
 509              		.loc 1 718 3 is_stmt 1 view .LVU101
 510              		.loc 1 718 11 is_stmt 0 view .LVU102
 511 000e 1360     		str	r3, [r2]
 719:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   
 720:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   /* Set SLEEPDEEP bit of Cortex System Control Register */
 721:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   SCB->SCR |= SCB_SCR_SLEEPDEEP_Msk;
 512              		.loc 1 721 3 is_stmt 1 view .LVU103
 513              		.loc 1 721 12 is_stmt 0 view .LVU104
 514 0010 084A     		ldr	r2, .L49+4
 515 0012 1369     		ldr	r3, [r2, #16]
 516              	.LVL25:
 517              		.loc 1 721 12 view .LVU105
 518 0014 43F00403 		orr	r3, r3, #4
 519 0018 1361     		str	r3, [r2, #16]
 520              	.LVL26:
 722:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   
 723:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   /* Select STOP mode entry --------------------------------------------------*/
 724:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   if(PWR_STOPEntry == PWR_STOPEntry_WFI)
 521              		.loc 1 724 3 is_stmt 1 view .LVU106
 522              		.loc 1 724 5 is_stmt 0 view .LVU107
 523 001a 0129     		cmp	r1, #1
 524 001c 06D0     		beq	.L48
 725:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   {   
 726:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****     /* Request Wait For Interrupt */
 727:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****     __WFI();
 728:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   }
 729:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   else
 730:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   {
 731:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****     /* Request Wait For Event */
 732:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****     __WFE();
 525              		.loc 1 732 5 is_stmt 1 view .LVU108
 526              		.syntax unified
 527              	@ 732 "Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c" 1
 528 001e 20BF     		wfe
 529              	@ 0 "" 2
 530              		.thumb
 531              		.syntax unified
 532              	.L47:
 733:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   }
 734:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   /* Reset SLEEPDEEP bit of Cortex System Control Register */
 735:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   SCB->SCR &= (uint32_t)~((uint32_t)SCB_SCR_SLEEPDEEP_Msk);  
 533              		.loc 1 735 3 view .LVU109
 534              		.loc 1 735 12 is_stmt 0 view .LVU110
 535 0020 044A     		ldr	r2, .L49+4
 536 0022 1369     		ldr	r3, [r2, #16]
 537 0024 23F00403 		bic	r3, r3, #4
 538 0028 1361     		str	r3, [r2, #16]
 736:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** }
 539              		.loc 1 736 1 view .LVU111
 540 002a 7047     		bx	lr
 541              	.L48:
 727:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   }
 542              		.loc 1 727 5 is_stmt 1 view .LVU112
 543              		.syntax unified
 544              	@ 727 "Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c" 1
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccIvaTEZ.s 			page 23


 545 002c 30BF     		wfi
 546              	@ 0 "" 2
 547              		.thumb
 548              		.syntax unified
 549 002e F7E7     		b	.L47
 550              	.L50:
 551              		.align	2
 552              	.L49:
 553 0030 00700040 		.word	1073770496
 554 0034 00ED00E0 		.word	-536810240
 555              		.cfi_endproc
 556              	.LFE143:
 558              		.section	.text.PWR_EnterUnderDriveSTOPMode,"ax",%progbits
 559              		.align	1
 560              		.global	PWR_EnterUnderDriveSTOPMode
 561              		.syntax unified
 562              		.thumb
 563              		.thumb_func
 564              		.fpu fpv4-sp-d16
 566              	PWR_EnterUnderDriveSTOPMode:
 567              	.LVL27:
 568              	.LFB144:
 737:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** 
 738:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** /**
 739:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   * @brief  Enters in Under-Drive STOP mode.
 740:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *  
 741:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   * @note   This mode is only available for STM32F42xxx/STM3243xxx devices. 
 742:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   * 
 743:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   * @note    This mode can be selected only when the Under-Drive is already active 
 744:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *         
 745:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   * @note   In Stop mode, all I/O pins keep the same state as in Run mode.
 746:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   * @note   When exiting Stop mode by issuing an interrupt or a wakeup event, 
 747:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *         the HSI RC oscillator is selected as system clock.
 748:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   * @note   When the voltage regulator operates in low power mode, an additional 
 749:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *         startup delay is incurred when waking up from Stop mode. 
 750:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *         By keeping the internal regulator ON during Stop mode, the consumption 
 751:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *         is higher although the startup time is reduced.
 752:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *     
 753:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   * @param  PWR_Regulator: specifies the regulator state in STOP mode.
 754:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *          This parameter can be one of the following values:
 755:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *            @arg PWR_MainRegulator_UnderDrive_ON:  Main Regulator in under-drive mode 
 756:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *                 and Flash memory in power-down when the device is in Stop under-drive mode
 757:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *            @arg PWR_LowPowerRegulator_UnderDrive_ON:  Low Power Regulator in under-drive mode 
 758:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *                and Flash memory in power-down when the device is in Stop under-drive mode
 759:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   * @param  PWR_STOPEntry: specifies if STOP mode in entered with WFI or WFE instruction.
 760:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *          This parameter can be one of the following values:
 761:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *            @arg PWR_STOPEntry_WFI: enter STOP mode with WFI instruction
 762:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *            @arg PWR_STOPEntry_WFE: enter STOP mode with WFE instruction
 763:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   * @retval None
 764:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   */
 765:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** void PWR_EnterUnderDriveSTOPMode(uint32_t PWR_Regulator, uint8_t PWR_STOPEntry)
 766:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** {
 569              		.loc 1 766 1 view -0
 570              		.cfi_startproc
 571              		@ args = 0, pretend = 0, frame = 0
 572              		@ frame_needed = 0, uses_anonymous_args = 0
 573              		@ link register save eliminated.
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccIvaTEZ.s 			page 24


 767:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   uint32_t tmpreg = 0;
 574              		.loc 1 767 3 view .LVU114
 768:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   
 769:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   /* Check the parameters */
 770:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   assert_param(IS_PWR_REGULATOR_UNDERDRIVE(PWR_Regulator));
 575              		.loc 1 770 3 view .LVU115
 771:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   assert_param(IS_PWR_STOP_ENTRY(PWR_STOPEntry));
 576              		.loc 1 771 3 view .LVU116
 772:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   
 773:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   /* Select the regulator state in STOP mode ---------------------------------*/
 774:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   tmpreg = PWR->CR;
 577              		.loc 1 774 3 view .LVU117
 578              		.loc 1 774 10 is_stmt 0 view .LVU118
 579 0000 0B4A     		ldr	r2, .L55
 580 0002 1368     		ldr	r3, [r2]
 581              	.LVL28:
 775:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   /* Clear PDDS and LPDS bits */
 776:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   tmpreg &= CR_DS_MASK;
 582              		.loc 1 776 3 is_stmt 1 view .LVU119
 583              		.loc 1 776 10 is_stmt 0 view .LVU120
 584 0004 23F44063 		bic	r3, r3, #3072
 585              	.LVL29:
 586              		.loc 1 776 10 view .LVU121
 587 0008 23F00303 		bic	r3, r3, #3
 588              	.LVL30:
 777:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   
 778:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   /* Set LPDS, MRLUDS and LPLUDS bits according to PWR_Regulator value */
 779:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   tmpreg |= PWR_Regulator;
 589              		.loc 1 779 3 is_stmt 1 view .LVU122
 590              		.loc 1 779 10 is_stmt 0 view .LVU123
 591 000c 0343     		orrs	r3, r3, r0
 592              	.LVL31:
 780:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   
 781:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   /* Store the new value */
 782:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   PWR->CR = tmpreg;
 593              		.loc 1 782 3 is_stmt 1 view .LVU124
 594              		.loc 1 782 11 is_stmt 0 view .LVU125
 595 000e 1360     		str	r3, [r2]
 783:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   
 784:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   /* Set SLEEPDEEP bit of Cortex System Control Register */
 785:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   SCB->SCR |= SCB_SCR_SLEEPDEEP_Msk;
 596              		.loc 1 785 3 is_stmt 1 view .LVU126
 597              		.loc 1 785 12 is_stmt 0 view .LVU127
 598 0010 084A     		ldr	r2, .L55+4
 599 0012 1369     		ldr	r3, [r2, #16]
 600              	.LVL32:
 601              		.loc 1 785 12 view .LVU128
 602 0014 43F00403 		orr	r3, r3, #4
 603 0018 1361     		str	r3, [r2, #16]
 604              	.LVL33:
 786:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   
 787:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   /* Select STOP mode entry --------------------------------------------------*/
 788:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   if(PWR_STOPEntry == PWR_STOPEntry_WFI)
 605              		.loc 1 788 3 is_stmt 1 view .LVU129
 606              		.loc 1 788 5 is_stmt 0 view .LVU130
 607 001a 0129     		cmp	r1, #1
 608 001c 06D0     		beq	.L54
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccIvaTEZ.s 			page 25


 789:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   {   
 790:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****     /* Request Wait For Interrupt */
 791:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****     __WFI();
 792:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   }
 793:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   else
 794:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   {
 795:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****     /* Request Wait For Event */
 796:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****     __WFE();
 609              		.loc 1 796 5 is_stmt 1 view .LVU131
 610              		.syntax unified
 611              	@ 796 "Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c" 1
 612 001e 20BF     		wfe
 613              	@ 0 "" 2
 614              		.thumb
 615              		.syntax unified
 616              	.L53:
 797:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   }
 798:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   /* Reset SLEEPDEEP bit of Cortex System Control Register */
 799:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   SCB->SCR &= (uint32_t)~((uint32_t)SCB_SCR_SLEEPDEEP_Msk);  
 617              		.loc 1 799 3 view .LVU132
 618              		.loc 1 799 12 is_stmt 0 view .LVU133
 619 0020 044A     		ldr	r2, .L55+4
 620 0022 1369     		ldr	r3, [r2, #16]
 621 0024 23F00403 		bic	r3, r3, #4
 622 0028 1361     		str	r3, [r2, #16]
 800:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** }
 623              		.loc 1 800 1 view .LVU134
 624 002a 7047     		bx	lr
 625              	.L54:
 791:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   }
 626              		.loc 1 791 5 is_stmt 1 view .LVU135
 627              		.syntax unified
 628              	@ 791 "Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c" 1
 629 002c 30BF     		wfi
 630              	@ 0 "" 2
 631              		.thumb
 632              		.syntax unified
 633 002e F7E7     		b	.L53
 634              	.L56:
 635              		.align	2
 636              	.L55:
 637 0030 00700040 		.word	1073770496
 638 0034 00ED00E0 		.word	-536810240
 639              		.cfi_endproc
 640              	.LFE144:
 642              		.section	.text.PWR_EnterSTANDBYMode,"ax",%progbits
 643              		.align	1
 644              		.global	PWR_EnterSTANDBYMode
 645              		.syntax unified
 646              		.thumb
 647              		.thumb_func
 648              		.fpu fpv4-sp-d16
 650              	PWR_EnterSTANDBYMode:
 651              	.LFB145:
 801:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** 
 802:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** /**
 803:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   * @brief  Enters STANDBY mode.
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccIvaTEZ.s 			page 26


 804:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   * @note   In Standby mode, all I/O pins are high impedance except for:
 805:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *          - Reset pad (still available) 
 806:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *          - RTC_AF1 pin (PC13) if configured for tamper, time-stamp, RTC 
 807:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *            Alarm out, or RTC clock calibration out.
 808:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *          - RTC_AF2 pin (PI8) if configured for tamper or time-stamp.  
 809:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *          - WKUP pin 1 (PA0) if enabled.
 810:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   * @note   The Wakeup flag (WUF) need to be cleared at application level before to call this funct
 811:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   * @param  None
 812:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   * @retval None
 813:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   */
 814:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** void PWR_EnterSTANDBYMode(void)
 815:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** {
 652              		.loc 1 815 1 view -0
 653              		.cfi_startproc
 654              		@ args = 0, pretend = 0, frame = 0
 655              		@ frame_needed = 0, uses_anonymous_args = 0
 656              		@ link register save eliminated.
 816:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   /* Select STANDBY mode */
 817:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   PWR->CR |= PWR_CR_PDDS;
 657              		.loc 1 817 3 view .LVU137
 658              		.loc 1 817 11 is_stmt 0 view .LVU138
 659 0000 054A     		ldr	r2, .L58
 660 0002 1368     		ldr	r3, [r2]
 661 0004 43F00203 		orr	r3, r3, #2
 662 0008 1360     		str	r3, [r2]
 818:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   
 819:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   /* Set SLEEPDEEP bit of Cortex System Control Register */
 820:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   SCB->SCR |= SCB_SCR_SLEEPDEEP_Msk;
 663              		.loc 1 820 3 is_stmt 1 view .LVU139
 664              		.loc 1 820 12 is_stmt 0 view .LVU140
 665 000a 044A     		ldr	r2, .L58+4
 666 000c 1369     		ldr	r3, [r2, #16]
 667 000e 43F00403 		orr	r3, r3, #4
 668 0012 1361     		str	r3, [r2, #16]
 821:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   
 822:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   /* This option is used to ensure that store operations are completed */
 823:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** #if defined ( __CC_ARM   )
 824:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   __force_stores();
 825:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** #endif
 826:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   /* Request Wait For Interrupt */
 827:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   __WFI();
 669              		.loc 1 827 3 is_stmt 1 view .LVU141
 670              		.syntax unified
 671              	@ 827 "Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c" 1
 672 0014 30BF     		wfi
 673              	@ 0 "" 2
 828:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** }
 674              		.loc 1 828 1 is_stmt 0 view .LVU142
 675              		.thumb
 676              		.syntax unified
 677 0016 7047     		bx	lr
 678              	.L59:
 679              		.align	2
 680              	.L58:
 681 0018 00700040 		.word	1073770496
 682 001c 00ED00E0 		.word	-536810240
 683              		.cfi_endproc
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccIvaTEZ.s 			page 27


 684              	.LFE145:
 686              		.section	.text.PWR_GetFlagStatus,"ax",%progbits
 687              		.align	1
 688              		.global	PWR_GetFlagStatus
 689              		.syntax unified
 690              		.thumb
 691              		.thumb_func
 692              		.fpu fpv4-sp-d16
 694              	PWR_GetFlagStatus:
 695              	.LVL34:
 696              	.LFB146:
 829:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** 
 830:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** /**
 831:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   * @}
 832:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   */
 833:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** 
 834:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** /** @defgroup PWR_Group7 Flags management functions
 835:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****  *  @brief   Flags management functions 
 836:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****  *
 837:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** @verbatim   
 838:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****  ===============================================================================
 839:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****                     ##### Flags management functions #####
 840:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****  ===============================================================================  
 841:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** 
 842:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** @endverbatim
 843:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   * @{
 844:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   */
 845:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** 
 846:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** /**
 847:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   * @brief  Checks whether the specified PWR flag is set or not.
 848:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   * @param  PWR_FLAG: specifies the flag to check.
 849:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *          This parameter can be one of the following values:
 850:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *            @arg PWR_FLAG_WU: Wake Up flag. This flag indicates that a wakeup event 
 851:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *                  was received from the WKUP pin or from the RTC alarm (Alarm A 
 852:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *                  or Alarm B), RTC Tamper event, RTC TimeStamp event or RTC Wakeup.
 853:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *                  An additional wakeup event is detected if the WKUP pin is enabled 
 854:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *                  (by setting the EWUP bit) when the WKUP pin level is already high.  
 855:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *            @arg PWR_FLAG_SB: StandBy flag. This flag indicates that the system was
 856:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *                  resumed from StandBy mode.    
 857:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *            @arg PWR_FLAG_PVDO: PVD Output. This flag is valid only if PVD is enabled 
 858:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *                  by the PWR_PVDCmd() function. The PVD is stopped by Standby mode 
 859:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *                  For this reason, this bit is equal to 0 after Standby or reset
 860:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *                  until the PVDE bit is set.
 861:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *            @arg PWR_FLAG_BRR: Backup regulator ready flag. This bit is not reset 
 862:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *                  when the device wakes up from Standby mode or by a system reset 
 863:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *                  or power reset.  
 864:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *            @arg PWR_FLAG_VOSRDY: This flag indicates that the Regulator voltage 
 865:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *                 scaling output selection is ready.
 866:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *            @arg PWR_FLAG_ODRDY: This flag indicates that the Over-drive mode
 867:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *                 is ready (STM32F42xxx/43xxx devices) 
 868:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *            @arg PWR_FLAG_ODSWRDY: This flag indicates that the Over-drive mode
 869:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *                 switcching is ready (STM32F42xxx/43xxx devices) 
 870:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *            @arg PWR_FLAG_UDRDY: This flag indicates that the Under-drive mode
 871:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *                 is enabled in Stop mode (STM32F42xxx/43xxx devices)
 872:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   * @retval The new state of PWR_FLAG (SET or RESET).
 873:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   */
 874:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** FlagStatus PWR_GetFlagStatus(uint32_t PWR_FLAG)
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccIvaTEZ.s 			page 28


 875:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** {
 697              		.loc 1 875 1 is_stmt 1 view -0
 698              		.cfi_startproc
 699              		@ args = 0, pretend = 0, frame = 0
 700              		@ frame_needed = 0, uses_anonymous_args = 0
 701              		@ link register save eliminated.
 876:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   FlagStatus bitstatus = RESET;
 702              		.loc 1 876 3 view .LVU144
 877:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   
 878:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   /* Check the parameters */
 879:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   assert_param(IS_PWR_GET_FLAG(PWR_FLAG));
 703              		.loc 1 879 3 view .LVU145
 880:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   
 881:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   if ((PWR->CSR & PWR_FLAG) != (uint32_t)RESET)
 704              		.loc 1 881 3 view .LVU146
 705              		.loc 1 881 11 is_stmt 0 view .LVU147
 706 0000 034B     		ldr	r3, .L63
 707 0002 5B68     		ldr	r3, [r3, #4]
 708              		.loc 1 881 6 view .LVU148
 709 0004 0342     		tst	r3, r0
 710 0006 01D0     		beq	.L62
 882:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   {
 883:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****     bitstatus = SET;
 711              		.loc 1 883 15 view .LVU149
 712 0008 0120     		movs	r0, #1
 713              	.LVL35:
 714              		.loc 1 883 15 view .LVU150
 715 000a 7047     		bx	lr
 716              	.LVL36:
 717              	.L62:
 884:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   }
 885:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   else
 886:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   {
 887:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****     bitstatus = RESET;
 718              		.loc 1 887 15 view .LVU151
 719 000c 0020     		movs	r0, #0
 720              	.LVL37:
 888:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   }
 889:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   /* Return the flag status */
 890:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   return bitstatus;
 721              		.loc 1 890 3 is_stmt 1 view .LVU152
 891:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** }
 722              		.loc 1 891 1 is_stmt 0 view .LVU153
 723 000e 7047     		bx	lr
 724              	.L64:
 725              		.align	2
 726              	.L63:
 727 0010 00700040 		.word	1073770496
 728              		.cfi_endproc
 729              	.LFE146:
 731              		.section	.text.PWR_ClearFlag,"ax",%progbits
 732              		.align	1
 733              		.global	PWR_ClearFlag
 734              		.syntax unified
 735              		.thumb
 736              		.thumb_func
 737              		.fpu fpv4-sp-d16
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccIvaTEZ.s 			page 29


 739              	PWR_ClearFlag:
 740              	.LVL38:
 741              	.LFB147:
 892:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** 
 893:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** /**
 894:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   * @brief  Clears the PWR's pending flags.
 895:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   * @param  PWR_FLAG: specifies the flag to clear.
 896:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *          This parameter can be one of the following values:
 897:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *            @arg PWR_FLAG_WU: Wake Up flag
 898:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *            @arg PWR_FLAG_SB: StandBy flag
 899:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   *            @arg PWR_FLAG_UDRDY: Under-drive ready flag (STM32F42xxx/43xxx devices)
 900:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   * @retval None
 901:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   */
 902:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** void PWR_ClearFlag(uint32_t PWR_FLAG)
 903:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** {
 742              		.loc 1 903 1 is_stmt 1 view -0
 743              		.cfi_startproc
 744              		@ args = 0, pretend = 0, frame = 0
 745              		@ frame_needed = 0, uses_anonymous_args = 0
 746              		@ link register save eliminated.
 904:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   /* Check the parameters */
 905:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   assert_param(IS_PWR_CLEAR_FLAG(PWR_FLAG));
 747              		.loc 1 905 3 view .LVU155
 906:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   
 907:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** #if defined (STM32F427_437xx) || defined (STM32F429_439xx)
 908:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   if (PWR_FLAG != PWR_FLAG_UDRDY)
 909:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   {
 910:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****     PWR->CR |=  PWR_FLAG << 2;
 911:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   }
 912:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   else
 913:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   {
 914:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****     PWR->CSR |= PWR_FLAG_UDRDY;
 915:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   }
 916:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** #endif /* STM32F427_437xx ||  STM32F429_439xx */
 917:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** 
 918:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** #if defined (STM32F40_41xxx) || defined (STM32F401xx) || defined (STM32F411xE) 
 919:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c ****   PWR->CR |=  PWR_FLAG << 2;
 748              		.loc 1 919 3 view .LVU156
 749              		.loc 1 919 11 is_stmt 0 view .LVU157
 750 0000 024A     		ldr	r2, .L66
 751 0002 1368     		ldr	r3, [r2]
 752 0004 43EA8003 		orr	r3, r3, r0, lsl #2
 753 0008 1360     		str	r3, [r2]
 920:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** #endif /* STM32F40_41xxx  || STM32F401xx || STM32F411xE */
 921:Drivers/STM32F4xx_FWLIB/src/stm32f4xx_pwr.c **** }
 754              		.loc 1 921 1 view .LVU158
 755 000a 7047     		bx	lr
 756              	.L67:
 757              		.align	2
 758              	.L66:
 759 000c 00700040 		.word	1073770496
 760              		.cfi_endproc
 761              	.LFE147:
 763              		.text
 764              	.Letext0:
 765              		.file 2 "d:\\install\\gnu arm embedded toolchain\\10 2020-q4-major\\arm-none-eabi\\include\\machin
 766              		.file 3 "d:\\install\\gnu arm embedded toolchain\\10 2020-q4-major\\arm-none-eabi\\include\\sys\\_
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccIvaTEZ.s 			page 30


 767              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 768              		.file 5 "Core/Inc/stm32f4xx.h"
 769              		.file 6 "Drivers/STM32F4xx_FWLIB/inc/stm32f4xx_rcc.h"
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccIvaTEZ.s 			page 31


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_pwr.c
C:\Users\ADMIN\AppData\Local\Temp\ccIvaTEZ.s:18     .text.PWR_DeInit:00000000 $t
C:\Users\ADMIN\AppData\Local\Temp\ccIvaTEZ.s:26     .text.PWR_DeInit:00000000 PWR_DeInit
C:\Users\ADMIN\AppData\Local\Temp\ccIvaTEZ.s:54     .text.PWR_BackupAccessCmd:00000000 $t
C:\Users\ADMIN\AppData\Local\Temp\ccIvaTEZ.s:61     .text.PWR_BackupAccessCmd:00000000 PWR_BackupAccessCmd
C:\Users\ADMIN\AppData\Local\Temp\ccIvaTEZ.s:79     .text.PWR_BackupAccessCmd:00000008 $d
C:\Users\ADMIN\AppData\Local\Temp\ccIvaTEZ.s:84     .text.PWR_PVDLevelConfig:00000000 $t
C:\Users\ADMIN\AppData\Local\Temp\ccIvaTEZ.s:91     .text.PWR_PVDLevelConfig:00000000 PWR_PVDLevelConfig
C:\Users\ADMIN\AppData\Local\Temp\ccIvaTEZ.s:122    .text.PWR_PVDLevelConfig:00000010 $d
C:\Users\ADMIN\AppData\Local\Temp\ccIvaTEZ.s:127    .text.PWR_PVDCmd:00000000 $t
C:\Users\ADMIN\AppData\Local\Temp\ccIvaTEZ.s:134    .text.PWR_PVDCmd:00000000 PWR_PVDCmd
C:\Users\ADMIN\AppData\Local\Temp\ccIvaTEZ.s:152    .text.PWR_PVDCmd:00000008 $d
C:\Users\ADMIN\AppData\Local\Temp\ccIvaTEZ.s:157    .text.PWR_WakeUpPinCmd:00000000 $t
C:\Users\ADMIN\AppData\Local\Temp\ccIvaTEZ.s:164    .text.PWR_WakeUpPinCmd:00000000 PWR_WakeUpPinCmd
C:\Users\ADMIN\AppData\Local\Temp\ccIvaTEZ.s:182    .text.PWR_WakeUpPinCmd:00000008 $d
C:\Users\ADMIN\AppData\Local\Temp\ccIvaTEZ.s:187    .text.PWR_BackupRegulatorCmd:00000000 $t
C:\Users\ADMIN\AppData\Local\Temp\ccIvaTEZ.s:194    .text.PWR_BackupRegulatorCmd:00000000 PWR_BackupRegulatorCmd
C:\Users\ADMIN\AppData\Local\Temp\ccIvaTEZ.s:212    .text.PWR_BackupRegulatorCmd:00000008 $d
C:\Users\ADMIN\AppData\Local\Temp\ccIvaTEZ.s:217    .text.PWR_MainRegulatorModeConfig:00000000 $t
C:\Users\ADMIN\AppData\Local\Temp\ccIvaTEZ.s:224    .text.PWR_MainRegulatorModeConfig:00000000 PWR_MainRegulatorModeConfig
C:\Users\ADMIN\AppData\Local\Temp\ccIvaTEZ.s:255    .text.PWR_MainRegulatorModeConfig:00000010 $d
C:\Users\ADMIN\AppData\Local\Temp\ccIvaTEZ.s:260    .text.PWR_OverDriveCmd:00000000 $t
C:\Users\ADMIN\AppData\Local\Temp\ccIvaTEZ.s:267    .text.PWR_OverDriveCmd:00000000 PWR_OverDriveCmd
C:\Users\ADMIN\AppData\Local\Temp\ccIvaTEZ.s:285    .text.PWR_OverDriveCmd:00000008 $d
C:\Users\ADMIN\AppData\Local\Temp\ccIvaTEZ.s:290    .text.PWR_OverDriveSWCmd:00000000 $t
C:\Users\ADMIN\AppData\Local\Temp\ccIvaTEZ.s:297    .text.PWR_OverDriveSWCmd:00000000 PWR_OverDriveSWCmd
C:\Users\ADMIN\AppData\Local\Temp\ccIvaTEZ.s:315    .text.PWR_OverDriveSWCmd:00000008 $d
C:\Users\ADMIN\AppData\Local\Temp\ccIvaTEZ.s:320    .text.PWR_UnderDriveCmd:00000000 $t
C:\Users\ADMIN\AppData\Local\Temp\ccIvaTEZ.s:327    .text.PWR_UnderDriveCmd:00000000 PWR_UnderDriveCmd
C:\Users\ADMIN\AppData\Local\Temp\ccIvaTEZ.s:358    .text.PWR_UnderDriveCmd:0000001c $d
C:\Users\ADMIN\AppData\Local\Temp\ccIvaTEZ.s:363    .text.PWR_MainRegulatorLowVoltageCmd:00000000 $t
C:\Users\ADMIN\AppData\Local\Temp\ccIvaTEZ.s:370    .text.PWR_MainRegulatorLowVoltageCmd:00000000 PWR_MainRegulatorLowVoltageCmd
C:\Users\ADMIN\AppData\Local\Temp\ccIvaTEZ.s:399    .text.PWR_MainRegulatorLowVoltageCmd:00000014 $d
C:\Users\ADMIN\AppData\Local\Temp\ccIvaTEZ.s:404    .text.PWR_LowRegulatorLowVoltageCmd:00000000 $t
C:\Users\ADMIN\AppData\Local\Temp\ccIvaTEZ.s:411    .text.PWR_LowRegulatorLowVoltageCmd:00000000 PWR_LowRegulatorLowVoltageCmd
C:\Users\ADMIN\AppData\Local\Temp\ccIvaTEZ.s:440    .text.PWR_LowRegulatorLowVoltageCmd:00000014 $d
C:\Users\ADMIN\AppData\Local\Temp\ccIvaTEZ.s:445    .text.PWR_FlashPowerDownCmd:00000000 $t
C:\Users\ADMIN\AppData\Local\Temp\ccIvaTEZ.s:452    .text.PWR_FlashPowerDownCmd:00000000 PWR_FlashPowerDownCmd
C:\Users\ADMIN\AppData\Local\Temp\ccIvaTEZ.s:470    .text.PWR_FlashPowerDownCmd:00000008 $d
C:\Users\ADMIN\AppData\Local\Temp\ccIvaTEZ.s:475    .text.PWR_EnterSTOPMode:00000000 $t
C:\Users\ADMIN\AppData\Local\Temp\ccIvaTEZ.s:482    .text.PWR_EnterSTOPMode:00000000 PWR_EnterSTOPMode
C:\Users\ADMIN\AppData\Local\Temp\ccIvaTEZ.s:553    .text.PWR_EnterSTOPMode:00000030 $d
C:\Users\ADMIN\AppData\Local\Temp\ccIvaTEZ.s:559    .text.PWR_EnterUnderDriveSTOPMode:00000000 $t
C:\Users\ADMIN\AppData\Local\Temp\ccIvaTEZ.s:566    .text.PWR_EnterUnderDriveSTOPMode:00000000 PWR_EnterUnderDriveSTOPMode
C:\Users\ADMIN\AppData\Local\Temp\ccIvaTEZ.s:637    .text.PWR_EnterUnderDriveSTOPMode:00000030 $d
C:\Users\ADMIN\AppData\Local\Temp\ccIvaTEZ.s:643    .text.PWR_EnterSTANDBYMode:00000000 $t
C:\Users\ADMIN\AppData\Local\Temp\ccIvaTEZ.s:650    .text.PWR_EnterSTANDBYMode:00000000 PWR_EnterSTANDBYMode
C:\Users\ADMIN\AppData\Local\Temp\ccIvaTEZ.s:681    .text.PWR_EnterSTANDBYMode:00000018 $d
C:\Users\ADMIN\AppData\Local\Temp\ccIvaTEZ.s:687    .text.PWR_GetFlagStatus:00000000 $t
C:\Users\ADMIN\AppData\Local\Temp\ccIvaTEZ.s:694    .text.PWR_GetFlagStatus:00000000 PWR_GetFlagStatus
C:\Users\ADMIN\AppData\Local\Temp\ccIvaTEZ.s:727    .text.PWR_GetFlagStatus:00000010 $d
C:\Users\ADMIN\AppData\Local\Temp\ccIvaTEZ.s:732    .text.PWR_ClearFlag:00000000 $t
C:\Users\ADMIN\AppData\Local\Temp\ccIvaTEZ.s:739    .text.PWR_ClearFlag:00000000 PWR_ClearFlag
C:\Users\ADMIN\AppData\Local\Temp\ccIvaTEZ.s:759    .text.PWR_ClearFlag:0000000c $d

UNDEFINED SYMBOLS
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccIvaTEZ.s 			page 32


RCC_APB1PeriphResetCmd
