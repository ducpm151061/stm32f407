ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccLEaW5f.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"fattester.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.mf_mount,"ax",%progbits
  18              		.align	1
  19              		.global	mf_mount
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	mf_mount:
  27              	.LVL0:
  28              	.LFB133:
  29              		.file 1 "Core/Src/fattester.c"
   1:Core/Src/fattester.c **** #include "fattester.h"	 
   2:Core/Src/fattester.c **** #include "sdio_sdcard.h"
   3:Core/Src/fattester.c **** #include "usart.h"
   4:Core/Src/fattester.c **** #include "exfuns.h"
   5:Core/Src/fattester.c **** #include "malloc.h"		  
   6:Core/Src/fattester.c **** #include "ff.h"
   7:Core/Src/fattester.c **** #include "string.h"
   8:Core/Src/fattester.c ****  	
   9:Core/Src/fattester.c ****     
  10:Core/Src/fattester.c **** //为磁盘注册工作区	 
  11:Core/Src/fattester.c **** //path:磁盘路径，比如"0:"、"1:"
  12:Core/Src/fattester.c **** //mt:0，不立即注册（稍后注册）；1，立即注册
  13:Core/Src/fattester.c **** //返回值:执行结果
  14:Core/Src/fattester.c **** u8 mf_mount(u8* path,u8 mt)
  15:Core/Src/fattester.c **** {		   
  30              		.loc 1 15 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 15 1 is_stmt 0 view .LVU1
  35 0000 08B5     		push	{r3, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 8
  38              		.cfi_offset 3, -8
  39              		.cfi_offset 14, -4
  40 0002 0A46     		mov	r2, r1
  16:Core/Src/fattester.c **** 	return f_mount(fs[0],(const TCHAR*)path,mt); 
  41              		.loc 1 16 2 is_stmt 1 view .LVU2
  42              		.loc 1 16 9 is_stmt 0 view .LVU3
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccLEaW5f.s 			page 2


  43 0004 0146     		mov	r1, r0
  44              	.LVL1:
  45              		.loc 1 16 9 view .LVU4
  46 0006 024B     		ldr	r3, .L3
  47 0008 1868     		ldr	r0, [r3]
  48              	.LVL2:
  49              		.loc 1 16 9 view .LVU5
  50 000a FFF7FEFF 		bl	f_mount
  51              	.LVL3:
  17:Core/Src/fattester.c **** }
  52              		.loc 1 17 1 view .LVU6
  53 000e 08BD     		pop	{r3, pc}
  54              	.L4:
  55              		.align	2
  56              	.L3:
  57 0010 00000000 		.word	fs
  58              		.cfi_endproc
  59              	.LFE133:
  61              		.section	.text.mf_open,"ax",%progbits
  62              		.align	1
  63              		.global	mf_open
  64              		.syntax unified
  65              		.thumb
  66              		.thumb_func
  67              		.fpu fpv4-sp-d16
  69              	mf_open:
  70              	.LVL4:
  71              	.LFB134:
  18:Core/Src/fattester.c **** //打开路径下的文件
  19:Core/Src/fattester.c **** //path:路径+文件名
  20:Core/Src/fattester.c **** //mode:打开模式
  21:Core/Src/fattester.c **** //返回值:执行结果
  22:Core/Src/fattester.c **** u8 mf_open(u8*path,u8 mode)
  23:Core/Src/fattester.c **** {
  72              		.loc 1 23 1 is_stmt 1 view -0
  73              		.cfi_startproc
  74              		@ args = 0, pretend = 0, frame = 0
  75              		@ frame_needed = 0, uses_anonymous_args = 0
  76              		.loc 1 23 1 is_stmt 0 view .LVU8
  77 0000 08B5     		push	{r3, lr}
  78              	.LCFI1:
  79              		.cfi_def_cfa_offset 8
  80              		.cfi_offset 3, -8
  81              		.cfi_offset 14, -4
  82 0002 0A46     		mov	r2, r1
  24:Core/Src/fattester.c **** 	u8 res;	 
  83              		.loc 1 24 2 is_stmt 1 view .LVU9
  25:Core/Src/fattester.c **** 	res=f_open(file,(const TCHAR*)path,mode);//打开文件夹
  84              		.loc 1 25 2 view .LVU10
  85              		.loc 1 25 6 is_stmt 0 view .LVU11
  86 0004 0146     		mov	r1, r0
  87              	.LVL5:
  88              		.loc 1 25 6 view .LVU12
  89 0006 024B     		ldr	r3, .L7
  90 0008 1868     		ldr	r0, [r3]
  91              	.LVL6:
  92              		.loc 1 25 6 view .LVU13
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccLEaW5f.s 			page 3


  93 000a FFF7FEFF 		bl	f_open
  94              	.LVL7:
  26:Core/Src/fattester.c **** 	return res;
  95              		.loc 1 26 2 is_stmt 1 view .LVU14
  27:Core/Src/fattester.c **** } 
  96              		.loc 1 27 1 is_stmt 0 view .LVU15
  97 000e 08BD     		pop	{r3, pc}
  98              	.L8:
  99              		.align	2
 100              	.L7:
 101 0010 00000000 		.word	file
 102              		.cfi_endproc
 103              	.LFE134:
 105              		.section	.text.mf_close,"ax",%progbits
 106              		.align	1
 107              		.global	mf_close
 108              		.syntax unified
 109              		.thumb
 110              		.thumb_func
 111              		.fpu fpv4-sp-d16
 113              	mf_close:
 114              	.LFB135:
  28:Core/Src/fattester.c **** //关闭文件
  29:Core/Src/fattester.c **** //返回值:执行结果
  30:Core/Src/fattester.c **** u8 mf_close(void)
  31:Core/Src/fattester.c **** {
 115              		.loc 1 31 1 is_stmt 1 view -0
 116              		.cfi_startproc
 117              		@ args = 0, pretend = 0, frame = 0
 118              		@ frame_needed = 0, uses_anonymous_args = 0
 119 0000 08B5     		push	{r3, lr}
 120              	.LCFI2:
 121              		.cfi_def_cfa_offset 8
 122              		.cfi_offset 3, -8
 123              		.cfi_offset 14, -4
  32:Core/Src/fattester.c **** 	f_close(file);
 124              		.loc 1 32 2 view .LVU17
 125 0002 034B     		ldr	r3, .L11
 126 0004 1868     		ldr	r0, [r3]
 127 0006 FFF7FEFF 		bl	f_close
 128              	.LVL8:
  33:Core/Src/fattester.c **** 	return 0;
 129              		.loc 1 33 2 view .LVU18
  34:Core/Src/fattester.c **** }
 130              		.loc 1 34 1 is_stmt 0 view .LVU19
 131 000a 0020     		movs	r0, #0
 132 000c 08BD     		pop	{r3, pc}
 133              	.L12:
 134 000e 00BF     		.align	2
 135              	.L11:
 136 0010 00000000 		.word	file
 137              		.cfi_endproc
 138              	.LFE135:
 140              		.section	.rodata.mf_read.str1.4,"aMS",%progbits,1
 141              		.align	2
 142              	.LC0:
 143 0000 0D0A5265 		.ascii	"\015\012Read file data is:\015\000"
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccLEaW5f.s 			page 4


 143      61642066 
 143      696C6520 
 143      64617461 
 143      2069733A 
 144 0016 0000     		.align	2
 145              	.LC1:
 146 0018 52656164 		.ascii	"Read Error:%d\015\012\000"
 146      20457272 
 146      6F723A25 
 146      640D0A00 
 147              		.align	2
 148              	.LC2:
 149 0028 0D0A5265 		.ascii	"\015\012Read Error:%d\015\012\000"
 149      61642045 
 149      72726F72 
 149      3A25640D 
 149      0A00
 150 003a 0000     		.align	2
 151              	.LC3:
 152 003c 0D0A5265 		.ascii	"\015\012Readed data len:%d\015\012\000"
 152      61646564 
 152      20646174 
 152      61206C65 
 152      6E3A2564 
 153 0053 00       		.align	2
 154              	.LC4:
 155 0054 52656164 		.ascii	"Read data over\015\000"
 155      20646174 
 155      61206F76 
 155      65720D00 
 156              		.section	.text.mf_read,"ax",%progbits
 157              		.align	1
 158              		.global	mf_read
 159              		.syntax unified
 160              		.thumb
 161              		.thumb_func
 162              		.fpu fpv4-sp-d16
 164              	mf_read:
 165              	.LVL9:
 166              	.LFB136:
  35:Core/Src/fattester.c **** //读出数据
  36:Core/Src/fattester.c **** //len:读出的长度
  37:Core/Src/fattester.c **** //返回值:执行结果
  38:Core/Src/fattester.c **** u8 mf_read(u16 len)
  39:Core/Src/fattester.c **** {
 167              		.loc 1 39 1 is_stmt 1 view -0
 168              		.cfi_startproc
 169              		@ args = 0, pretend = 0, frame = 0
 170              		@ frame_needed = 0, uses_anonymous_args = 0
 171              		.loc 1 39 1 is_stmt 0 view .LVU21
 172 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 173              	.LCFI3:
 174              		.cfi_def_cfa_offset 24
 175              		.cfi_offset 4, -24
 176              		.cfi_offset 5, -20
 177              		.cfi_offset 6, -16
 178              		.cfi_offset 7, -12
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccLEaW5f.s 			page 5


 179              		.cfi_offset 8, -8
 180              		.cfi_offset 14, -4
 181 0004 0746     		mov	r7, r0
  40:Core/Src/fattester.c **** 	u16 i,t;
 182              		.loc 1 40 2 is_stmt 1 view .LVU22
  41:Core/Src/fattester.c **** 	u8 res=0;
 183              		.loc 1 41 2 view .LVU23
 184              	.LVL10:
  42:Core/Src/fattester.c **** 	u16 tlen=0;
 185              		.loc 1 42 2 view .LVU24
  43:Core/Src/fattester.c **** 	printf("\r\nRead file data is:\r\n");
 186              		.loc 1 43 2 view .LVU25
 187 0006 2E48     		ldr	r0, .L30
 188              	.LVL11:
 189              		.loc 1 43 2 is_stmt 0 view .LVU26
 190 0008 FFF7FEFF 		bl	puts
 191              	.LVL12:
  44:Core/Src/fattester.c **** 	for(i=0;i<len/512;i++)
 192              		.loc 1 44 2 is_stmt 1 view .LVU27
  42:Core/Src/fattester.c **** 	u16 tlen=0;
 193              		.loc 1 42 6 is_stmt 0 view .LVU28
 194 000c 0026     		movs	r6, #0
  41:Core/Src/fattester.c **** 	u16 tlen=0;
 195              		.loc 1 41 5 view .LVU29
 196 000e B046     		mov	r8, r6
 197              		.loc 1 44 7 view .LVU30
 198 0010 3546     		mov	r5, r6
 199              		.loc 1 44 2 view .LVU31
 200 0012 1BE0     		b	.L14
 201              	.LVL13:
 202              	.L28:
  45:Core/Src/fattester.c **** 	{
  46:Core/Src/fattester.c **** 		res=f_read(file,fatbuf,512,&br);
  47:Core/Src/fattester.c **** 		if(res)
  48:Core/Src/fattester.c **** 		{
  49:Core/Src/fattester.c **** 			printf("Read Error:%d\r\n",res);
 203              		.loc 1 49 4 is_stmt 1 view .LVU32
 204 0014 0146     		mov	r1, r0
 205 0016 2B48     		ldr	r0, .L30+4
 206              	.LVL14:
 207              		.loc 1 49 4 is_stmt 0 view .LVU33
 208 0018 FFF7FEFF 		bl	printf
 209              	.LVL15:
  50:Core/Src/fattester.c **** 			break;
 210              		.loc 1 50 4 is_stmt 1 view .LVU34
 211              	.L16:
  51:Core/Src/fattester.c **** 		}else
  52:Core/Src/fattester.c **** 		{
  53:Core/Src/fattester.c **** 			tlen+=br;
  54:Core/Src/fattester.c **** 			for(t=0;t<br;t++)printf("%c",fatbuf[t]); 
  55:Core/Src/fattester.c **** 		}
  56:Core/Src/fattester.c **** 	}
  57:Core/Src/fattester.c **** 	if(len%512)
 212              		.loc 1 57 2 view .LVU35
 213              		.loc 1 57 5 is_stmt 0 view .LVU36
 214 001c C7F30802 		ubfx	r2, r7, #0, #9
 215              		.loc 1 57 4 view .LVU37
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccLEaW5f.s 			page 6


 216 0020 4ABB     		cbnz	r2, .L26
 217              	.LVL16:
 218              	.L20:
  58:Core/Src/fattester.c **** 	{
  59:Core/Src/fattester.c **** 		res=f_read(file,fatbuf,len%512,&br);
  60:Core/Src/fattester.c **** 		if(res)	//读数据出错了
  61:Core/Src/fattester.c **** 		{
  62:Core/Src/fattester.c **** 			printf("\r\nRead Error:%d\r\n",res);   
  63:Core/Src/fattester.c **** 		}else
  64:Core/Src/fattester.c **** 		{
  65:Core/Src/fattester.c **** 			tlen+=br;
  66:Core/Src/fattester.c **** 			for(t=0;t<br;t++)printf("%c",fatbuf[t]); 
  67:Core/Src/fattester.c **** 		}	 
  68:Core/Src/fattester.c **** 	}
  69:Core/Src/fattester.c **** 	if(tlen)printf("\r\nReaded data len:%d\r\n",tlen);//读到的数据长度
 219              		.loc 1 69 2 is_stmt 1 view .LVU38
 220              		.loc 1 69 4 is_stmt 0 view .LVU39
 221 0022 002E     		cmp	r6, #0
 222 0024 47D1     		bne	.L27
 223              	.L24:
  70:Core/Src/fattester.c **** 	printf("Read data over\r\n");	 
 224              		.loc 1 70 2 is_stmt 1 view .LVU40
 225 0026 2848     		ldr	r0, .L30+8
 226 0028 FFF7FEFF 		bl	puts
 227              	.LVL17:
  71:Core/Src/fattester.c **** 	return res;
 228              		.loc 1 71 2 view .LVU41
  72:Core/Src/fattester.c **** }
 229              		.loc 1 72 1 is_stmt 0 view .LVU42
 230 002c 4046     		mov	r0, r8
 231 002e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 232              	.LVL18:
 233              	.L18:
  54:Core/Src/fattester.c **** 		}
 234              		.loc 1 54 21 is_stmt 1 discriminator 3 view .LVU43
  54:Core/Src/fattester.c **** 		}
 235              		.loc 1 54 39 is_stmt 0 discriminator 3 view .LVU44
 236 0032 264B     		ldr	r3, .L30+12
 237 0034 1B68     		ldr	r3, [r3]
  54:Core/Src/fattester.c **** 		}
 238              		.loc 1 54 21 discriminator 3 view .LVU45
 239 0036 185D     		ldrb	r0, [r3, r4]	@ zero_extendqisi2
 240 0038 FFF7FEFF 		bl	putchar
 241              	.LVL19:
  54:Core/Src/fattester.c **** 		}
 242              		.loc 1 54 17 is_stmt 1 discriminator 3 view .LVU46
  54:Core/Src/fattester.c **** 		}
 243              		.loc 1 54 18 is_stmt 0 discriminator 3 view .LVU47
 244 003c 0134     		adds	r4, r4, #1
 245              	.LVL20:
  54:Core/Src/fattester.c **** 		}
 246              		.loc 1 54 18 discriminator 3 view .LVU48
 247 003e A4B2     		uxth	r4, r4
 248              	.LVL21:
 249              	.L17:
  54:Core/Src/fattester.c **** 		}
 250              		.loc 1 54 12 is_stmt 1 discriminator 1 view .LVU49
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccLEaW5f.s 			page 7


  54:Core/Src/fattester.c **** 		}
 251              		.loc 1 54 13 is_stmt 0 discriminator 1 view .LVU50
 252 0040 234B     		ldr	r3, .L30+16
 253 0042 1B68     		ldr	r3, [r3]
  54:Core/Src/fattester.c **** 		}
 254              		.loc 1 54 4 discriminator 1 view .LVU51
 255 0044 9C42     		cmp	r4, r3
 256 0046 F4D3     		bcc	.L18
  44:Core/Src/fattester.c **** 	{
 257              		.loc 1 44 20 is_stmt 1 discriminator 2 view .LVU52
  44:Core/Src/fattester.c **** 	{
 258              		.loc 1 44 21 is_stmt 0 discriminator 2 view .LVU53
 259 0048 0135     		adds	r5, r5, #1
 260              	.LVL22:
  44:Core/Src/fattester.c **** 	{
 261              		.loc 1 44 21 discriminator 2 view .LVU54
 262 004a ADB2     		uxth	r5, r5
 263              	.LVL23:
 264              	.L14:
  44:Core/Src/fattester.c **** 	{
 265              		.loc 1 44 10 is_stmt 1 discriminator 1 view .LVU55
  44:Core/Src/fattester.c **** 	{
 266              		.loc 1 44 2 is_stmt 0 discriminator 1 view .LVU56
 267 004c B5EB572F 		cmp	r5, r7, lsr #9
 268 0050 E4D2     		bcs	.L16
  46:Core/Src/fattester.c **** 		if(res)
 269              		.loc 1 46 3 is_stmt 1 view .LVU57
  46:Core/Src/fattester.c **** 		if(res)
 270              		.loc 1 46 7 is_stmt 0 view .LVU58
 271 0052 1F4B     		ldr	r3, .L30+16
 272 0054 4FF40072 		mov	r2, #512
 273 0058 1C49     		ldr	r1, .L30+12
 274 005a 0968     		ldr	r1, [r1]
 275 005c 1D48     		ldr	r0, .L30+20
 276 005e 0068     		ldr	r0, [r0]
 277 0060 FFF7FEFF 		bl	f_read
 278              	.LVL24:
  47:Core/Src/fattester.c **** 		{
 279              		.loc 1 47 3 is_stmt 1 view .LVU59
  47:Core/Src/fattester.c **** 		{
 280              		.loc 1 47 5 is_stmt 0 view .LVU60
 281 0064 8046     		mov	r8, r0
 282 0066 0028     		cmp	r0, #0
 283 0068 D4D1     		bne	.L28
  53:Core/Src/fattester.c **** 			for(t=0;t<br;t++)printf("%c",fatbuf[t]); 
 284              		.loc 1 53 4 is_stmt 1 view .LVU61
  53:Core/Src/fattester.c **** 			for(t=0;t<br;t++)printf("%c",fatbuf[t]); 
 285              		.loc 1 53 8 is_stmt 0 view .LVU62
 286 006a 194B     		ldr	r3, .L30+16
 287 006c 1B68     		ldr	r3, [r3]
 288 006e 1E44     		add	r6, r6, r3
 289              	.LVL25:
  53:Core/Src/fattester.c **** 			for(t=0;t<br;t++)printf("%c",fatbuf[t]); 
 290              		.loc 1 53 8 view .LVU63
 291 0070 B6B2     		uxth	r6, r6
 292              	.LVL26:
  54:Core/Src/fattester.c **** 		}
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccLEaW5f.s 			page 8


 293              		.loc 1 54 4 is_stmt 1 view .LVU64
  54:Core/Src/fattester.c **** 		}
 294              		.loc 1 54 9 is_stmt 0 view .LVU65
 295 0072 0024     		movs	r4, #0
  54:Core/Src/fattester.c **** 		}
 296              		.loc 1 54 4 view .LVU66
 297 0074 E4E7     		b	.L17
 298              	.LVL27:
 299              	.L26:
  59:Core/Src/fattester.c **** 		if(res)	//读数据出错了
 300              		.loc 1 59 3 is_stmt 1 view .LVU67
  59:Core/Src/fattester.c **** 		if(res)	//读数据出错了
 301              		.loc 1 59 7 is_stmt 0 view .LVU68
 302 0076 164B     		ldr	r3, .L30+16
 303 0078 1449     		ldr	r1, .L30+12
 304 007a 0968     		ldr	r1, [r1]
 305 007c 1548     		ldr	r0, .L30+20
 306 007e 0068     		ldr	r0, [r0]
 307 0080 FFF7FEFF 		bl	f_read
 308              	.LVL28:
  60:Core/Src/fattester.c **** 		{
 309              		.loc 1 60 3 is_stmt 1 view .LVU69
  60:Core/Src/fattester.c **** 		{
 310              		.loc 1 60 5 is_stmt 0 view .LVU70
 311 0084 8046     		mov	r8, r0
 312 0086 28B9     		cbnz	r0, .L29
  65:Core/Src/fattester.c **** 			for(t=0;t<br;t++)printf("%c",fatbuf[t]); 
 313              		.loc 1 65 4 is_stmt 1 view .LVU71
  65:Core/Src/fattester.c **** 			for(t=0;t<br;t++)printf("%c",fatbuf[t]); 
 314              		.loc 1 65 8 is_stmt 0 view .LVU72
 315 0088 114B     		ldr	r3, .L30+16
 316 008a 1B68     		ldr	r3, [r3]
 317 008c 1E44     		add	r6, r6, r3
 318              	.LVL29:
  65:Core/Src/fattester.c **** 			for(t=0;t<br;t++)printf("%c",fatbuf[t]); 
 319              		.loc 1 65 8 view .LVU73
 320 008e B6B2     		uxth	r6, r6
 321              	.LVL30:
  66:Core/Src/fattester.c **** 		}	 
 322              		.loc 1 66 4 is_stmt 1 view .LVU74
  66:Core/Src/fattester.c **** 		}	 
 323              		.loc 1 66 9 is_stmt 0 view .LVU75
 324 0090 0024     		movs	r4, #0
  66:Core/Src/fattester.c **** 		}	 
 325              		.loc 1 66 4 view .LVU76
 326 0092 0BE0     		b	.L22
 327              	.LVL31:
 328              	.L29:
  62:Core/Src/fattester.c **** 		}else
 329              		.loc 1 62 4 is_stmt 1 view .LVU77
 330 0094 0146     		mov	r1, r0
 331 0096 1048     		ldr	r0, .L30+24
 332              	.LVL32:
  62:Core/Src/fattester.c **** 		}else
 333              		.loc 1 62 4 is_stmt 0 view .LVU78
 334 0098 FFF7FEFF 		bl	printf
 335              	.LVL33:
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccLEaW5f.s 			page 9


 336 009c C1E7     		b	.L20
 337              	.LVL34:
 338              	.L23:
  66:Core/Src/fattester.c **** 		}	 
 339              		.loc 1 66 21 is_stmt 1 discriminator 3 view .LVU79
  66:Core/Src/fattester.c **** 		}	 
 340              		.loc 1 66 39 is_stmt 0 discriminator 3 view .LVU80
 341 009e 0B4B     		ldr	r3, .L30+12
 342 00a0 1B68     		ldr	r3, [r3]
  66:Core/Src/fattester.c **** 		}	 
 343              		.loc 1 66 21 discriminator 3 view .LVU81
 344 00a2 185D     		ldrb	r0, [r3, r4]	@ zero_extendqisi2
 345 00a4 FFF7FEFF 		bl	putchar
 346              	.LVL35:
  66:Core/Src/fattester.c **** 		}	 
 347              		.loc 1 66 17 is_stmt 1 discriminator 3 view .LVU82
  66:Core/Src/fattester.c **** 		}	 
 348              		.loc 1 66 18 is_stmt 0 discriminator 3 view .LVU83
 349 00a8 0134     		adds	r4, r4, #1
 350              	.LVL36:
  66:Core/Src/fattester.c **** 		}	 
 351              		.loc 1 66 18 discriminator 3 view .LVU84
 352 00aa A4B2     		uxth	r4, r4
 353              	.LVL37:
 354              	.L22:
  66:Core/Src/fattester.c **** 		}	 
 355              		.loc 1 66 12 is_stmt 1 discriminator 1 view .LVU85
  66:Core/Src/fattester.c **** 		}	 
 356              		.loc 1 66 13 is_stmt 0 discriminator 1 view .LVU86
 357 00ac 084B     		ldr	r3, .L30+16
 358 00ae 1B68     		ldr	r3, [r3]
  66:Core/Src/fattester.c **** 		}	 
 359              		.loc 1 66 4 discriminator 1 view .LVU87
 360 00b0 9C42     		cmp	r4, r3
 361 00b2 F4D3     		bcc	.L23
 362 00b4 B5E7     		b	.L20
 363              	.LVL38:
 364              	.L27:
  69:Core/Src/fattester.c **** 	printf("Read data over\r\n");	 
 365              		.loc 1 69 10 is_stmt 1 discriminator 1 view .LVU88
 366 00b6 3146     		mov	r1, r6
 367 00b8 0848     		ldr	r0, .L30+28
 368 00ba FFF7FEFF 		bl	printf
 369              	.LVL39:
 370 00be B2E7     		b	.L24
 371              	.L31:
 372              		.align	2
 373              	.L30:
 374 00c0 00000000 		.word	.LC0
 375 00c4 18000000 		.word	.LC1
 376 00c8 54000000 		.word	.LC4
 377 00cc 00000000 		.word	fatbuf
 378 00d0 00000000 		.word	br
 379 00d4 00000000 		.word	file
 380 00d8 28000000 		.word	.LC2
 381 00dc 3C000000 		.word	.LC3
 382              		.cfi_endproc
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccLEaW5f.s 			page 10


 383              	.LFE136:
 385              		.section	.rodata.mf_write.str1.4,"aMS",%progbits,1
 386              		.align	2
 387              	.LC5:
 388 0000 0D0A4265 		.ascii	"\015\012Begin Write file...\015\000"
 388      67696E20 
 388      57726974 
 388      65206669 
 388      6C652E2E 
 389 0017 00       		.align	2
 390              	.LC6:
 391 0018 57726974 		.ascii	"Write data len:%d\015\012\000"
 391      65206461 
 391      7461206C 
 391      656E3A25 
 391      640D0A00 
 392              		.align	2
 393              	.LC7:
 394 002c 57726974 		.ascii	"Write Error:%d\015\012\000"
 394      65204572 
 394      726F723A 
 394      25640D0A 
 394      00
 395 003d 000000   		.align	2
 396              	.LC8:
 397 0040 57726974 		.ascii	"Writed data len:%d\015\012\000"
 397      65642064 
 397      61746120 
 397      6C656E3A 
 397      25640D0A 
 398 0055 000000   		.align	2
 399              	.LC9:
 400 0058 57726974 		.ascii	"Write data over.\015\000"
 400      65206461 
 400      7461206F 
 400      7665722E 
 400      0D00
 401              		.section	.text.mf_write,"ax",%progbits
 402              		.align	1
 403              		.global	mf_write
 404              		.syntax unified
 405              		.thumb
 406              		.thumb_func
 407              		.fpu fpv4-sp-d16
 409              	mf_write:
 410              	.LVL40:
 411              	.LFB137:
  73:Core/Src/fattester.c **** //写入数据
  74:Core/Src/fattester.c **** //dat:数据缓存区
  75:Core/Src/fattester.c **** //len:写入长度
  76:Core/Src/fattester.c **** //返回值:执行结果
  77:Core/Src/fattester.c **** u8 mf_write(u8*dat,u16 len)
  78:Core/Src/fattester.c **** {			    
 412              		.loc 1 78 1 view -0
 413              		.cfi_startproc
 414              		@ args = 0, pretend = 0, frame = 0
 415              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccLEaW5f.s 			page 11


 416              		.loc 1 78 1 is_stmt 0 view .LVU90
 417 0000 38B5     		push	{r3, r4, r5, lr}
 418              	.LCFI4:
 419              		.cfi_def_cfa_offset 16
 420              		.cfi_offset 3, -16
 421              		.cfi_offset 4, -12
 422              		.cfi_offset 5, -8
 423              		.cfi_offset 14, -4
 424 0002 0546     		mov	r5, r0
 425 0004 0C46     		mov	r4, r1
  79:Core/Src/fattester.c **** 	u8 res;	   					   
 426              		.loc 1 79 2 is_stmt 1 view .LVU91
  80:Core/Src/fattester.c **** 
  81:Core/Src/fattester.c **** 	printf("\r\nBegin Write file...\r\n");
 427              		.loc 1 81 2 view .LVU92
 428 0006 0F48     		ldr	r0, .L36
 429              	.LVL41:
 430              		.loc 1 81 2 is_stmt 0 view .LVU93
 431 0008 FFF7FEFF 		bl	puts
 432              	.LVL42:
  82:Core/Src/fattester.c **** 	printf("Write data len:%d\r\n",len);	 
 433              		.loc 1 82 2 is_stmt 1 view .LVU94
 434 000c 2146     		mov	r1, r4
 435 000e 0E48     		ldr	r0, .L36+4
 436 0010 FFF7FEFF 		bl	printf
 437              	.LVL43:
  83:Core/Src/fattester.c **** 	res=f_write(file,dat,len,&bw);
 438              		.loc 1 83 2 view .LVU95
 439              		.loc 1 83 6 is_stmt 0 view .LVU96
 440 0014 0D4B     		ldr	r3, .L36+8
 441 0016 2246     		mov	r2, r4
 442 0018 2946     		mov	r1, r5
 443 001a 0D48     		ldr	r0, .L36+12
 444 001c 0068     		ldr	r0, [r0]
 445 001e FFF7FEFF 		bl	f_write
 446              	.LVL44:
  84:Core/Src/fattester.c **** 	if(res)
 447              		.loc 1 84 2 is_stmt 1 view .LVU97
 448              		.loc 1 84 4 is_stmt 0 view .LVU98
 449 0022 0446     		mov	r4, r0
 450 0024 40B1     		cbz	r0, .L33
  85:Core/Src/fattester.c **** 	{
  86:Core/Src/fattester.c **** 		printf("Write Error:%d\r\n",res);   
 451              		.loc 1 86 3 is_stmt 1 view .LVU99
 452 0026 0146     		mov	r1, r0
 453 0028 0A48     		ldr	r0, .L36+16
 454              	.LVL45:
 455              		.loc 1 86 3 is_stmt 0 view .LVU100
 456 002a FFF7FEFF 		bl	printf
 457              	.LVL46:
 458              	.L34:
  87:Core/Src/fattester.c **** 	}else printf("Writed data len:%d\r\n",bw);
  88:Core/Src/fattester.c **** 	printf("Write data over.\r\n");
 459              		.loc 1 88 2 is_stmt 1 view .LVU101
 460 002e 0A48     		ldr	r0, .L36+20
 461 0030 FFF7FEFF 		bl	puts
 462              	.LVL47:
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccLEaW5f.s 			page 12


  89:Core/Src/fattester.c **** 	return res;
 463              		.loc 1 89 2 view .LVU102
  90:Core/Src/fattester.c **** }
 464              		.loc 1 90 1 is_stmt 0 view .LVU103
 465 0034 2046     		mov	r0, r4
 466 0036 38BD     		pop	{r3, r4, r5, pc}
 467              	.LVL48:
 468              	.L33:
  87:Core/Src/fattester.c **** 	}else printf("Writed data len:%d\r\n",bw);
 469              		.loc 1 87 8 is_stmt 1 view .LVU104
 470 0038 044B     		ldr	r3, .L36+8
 471 003a 1968     		ldr	r1, [r3]
 472 003c 0748     		ldr	r0, .L36+24
 473              	.LVL49:
  87:Core/Src/fattester.c **** 	}else printf("Writed data len:%d\r\n",bw);
 474              		.loc 1 87 8 is_stmt 0 view .LVU105
 475 003e FFF7FEFF 		bl	printf
 476              	.LVL50:
 477 0042 F4E7     		b	.L34
 478              	.L37:
 479              		.align	2
 480              	.L36:
 481 0044 00000000 		.word	.LC5
 482 0048 18000000 		.word	.LC6
 483 004c 00000000 		.word	bw
 484 0050 00000000 		.word	file
 485 0054 2C000000 		.word	.LC7
 486 0058 58000000 		.word	.LC9
 487 005c 40000000 		.word	.LC8
 488              		.cfi_endproc
 489              	.LFE137:
 491              		.section	.text.mf_opendir,"ax",%progbits
 492              		.align	1
 493              		.global	mf_opendir
 494              		.syntax unified
 495              		.thumb
 496              		.thumb_func
 497              		.fpu fpv4-sp-d16
 499              	mf_opendir:
 500              	.LVL51:
 501              	.LFB138:
  91:Core/Src/fattester.c **** 
  92:Core/Src/fattester.c **** //打开目录
  93:Core/Src/fattester.c ****  //path:路径
  94:Core/Src/fattester.c **** //返回值:执行结果
  95:Core/Src/fattester.c **** u8 mf_opendir(u8* path)
  96:Core/Src/fattester.c **** {
 502              		.loc 1 96 1 is_stmt 1 view -0
 503              		.cfi_startproc
 504              		@ args = 0, pretend = 0, frame = 0
 505              		@ frame_needed = 0, uses_anonymous_args = 0
 506              		.loc 1 96 1 is_stmt 0 view .LVU107
 507 0000 08B5     		push	{r3, lr}
 508              	.LCFI5:
 509              		.cfi_def_cfa_offset 8
 510              		.cfi_offset 3, -8
 511              		.cfi_offset 14, -4
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccLEaW5f.s 			page 13


 512 0002 0146     		mov	r1, r0
  97:Core/Src/fattester.c **** 	return f_opendir(&dir,(const TCHAR*)path);	
 513              		.loc 1 97 2 is_stmt 1 view .LVU108
 514              		.loc 1 97 9 is_stmt 0 view .LVU109
 515 0004 0148     		ldr	r0, .L40
 516              	.LVL52:
 517              		.loc 1 97 9 view .LVU110
 518 0006 FFF7FEFF 		bl	f_opendir
 519              	.LVL53:
  98:Core/Src/fattester.c **** }
 520              		.loc 1 98 1 view .LVU111
 521 000a 08BD     		pop	{r3, pc}
 522              	.L41:
 523              		.align	2
 524              	.L40:
 525 000c 00000000 		.word	dir
 526              		.cfi_endproc
 527              	.LFE138:
 529              		.section	.text.mf_closedir,"ax",%progbits
 530              		.align	1
 531              		.global	mf_closedir
 532              		.syntax unified
 533              		.thumb
 534              		.thumb_func
 535              		.fpu fpv4-sp-d16
 537              	mf_closedir:
 538              	.LFB139:
  99:Core/Src/fattester.c **** //关闭目录 
 100:Core/Src/fattester.c **** //返回值:执行结果
 101:Core/Src/fattester.c **** u8 mf_closedir(void)
 102:Core/Src/fattester.c **** {
 539              		.loc 1 102 1 is_stmt 1 view -0
 540              		.cfi_startproc
 541              		@ args = 0, pretend = 0, frame = 0
 542              		@ frame_needed = 0, uses_anonymous_args = 0
 543 0000 08B5     		push	{r3, lr}
 544              	.LCFI6:
 545              		.cfi_def_cfa_offset 8
 546              		.cfi_offset 3, -8
 547              		.cfi_offset 14, -4
 103:Core/Src/fattester.c **** 	return f_closedir(&dir);	
 548              		.loc 1 103 2 view .LVU113
 549              		.loc 1 103 9 is_stmt 0 view .LVU114
 550 0002 0248     		ldr	r0, .L44
 551 0004 FFF7FEFF 		bl	f_closedir
 552              	.LVL54:
 104:Core/Src/fattester.c **** }
 553              		.loc 1 104 1 view .LVU115
 554 0008 08BD     		pop	{r3, pc}
 555              	.L45:
 556 000a 00BF     		.align	2
 557              	.L44:
 558 000c 00000000 		.word	dir
 559              		.cfi_endproc
 560              	.LFE139:
 562              		.section	.rodata.mf_readdir.str1.4,"aMS",%progbits,1
 563              		.align	2
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccLEaW5f.s 			page 14


 564              	.LC10:
 565 0000 0D0A2044 		.ascii	"\015\012 DIR info:\015\000"
 565      49522069 
 565      6E666F3A 
 565      0D00
 566 000e 0000     		.align	2
 567              	.LC11:
 568 0010 6469722E 		.ascii	"dir.id:%d\015\012\000"
 568      69643A25 
 568      640D0A00 
 569              		.align	2
 570              	.LC12:
 571 001c 6469722E 		.ascii	"dir.index:%d\015\012\000"
 571      696E6465 
 571      783A2564 
 571      0D0A00
 572 002b 00       		.align	2
 573              	.LC13:
 574 002c 6469722E 		.ascii	"dir.sclust:%d\015\012\000"
 574      73636C75 
 574      73743A25 
 574      640D0A00 
 575              		.align	2
 576              	.LC14:
 577 003c 6469722E 		.ascii	"dir.clust:%d\015\012\000"
 577      636C7573 
 577      743A2564 
 577      0D0A00
 578 004b 00       		.align	2
 579              	.LC15:
 580 004c 6469722E 		.ascii	"dir.sect:%d\015\012\000"
 580      73656374 
 580      3A25640D 
 580      0A00
 581 005a 0000     		.align	2
 582              	.LC16:
 583 005c 0D00     		.ascii	"\015\000"
 584 005e 0000     		.align	2
 585              	.LC17:
 586 0060 46696C65 		.ascii	"File Name is:%s\015\012\000"
 586      204E616D 
 586      65206973 
 586      3A25730D 
 586      0A00
 587 0072 0000     		.align	2
 588              	.LC18:
 589 0074 46696C65 		.ascii	"File Size is:%d\015\012\000"
 589      2053697A 
 589      65206973 
 589      3A25640D 
 589      0A00
 590 0086 0000     		.align	2
 591              	.LC19:
 592 0088 46696C65 		.ascii	"File data is:%d\015\012\000"
 592      20646174 
 592      61206973 
 592      3A25640D 
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccLEaW5f.s 			page 15


 592      0A00
 593 009a 0000     		.align	2
 594              	.LC20:
 595 009c 46696C65 		.ascii	"File time is:%d\015\012\000"
 595      2074696D 
 595      65206973 
 595      3A25640D 
 595      0A00
 596 00ae 0000     		.align	2
 597              	.LC21:
 598 00b0 46696C65 		.ascii	"File Attr is:%d\015\012\000"
 598      20417474 
 598      72206973 
 598      3A25640D 
 598      0A00
 599              		.section	.text.mf_readdir,"ax",%progbits
 600              		.align	1
 601              		.global	mf_readdir
 602              		.syntax unified
 603              		.thumb
 604              		.thumb_func
 605              		.fpu fpv4-sp-d16
 607              	mf_readdir:
 608              	.LFB140:
 105:Core/Src/fattester.c **** //打读取文件夹
 106:Core/Src/fattester.c **** //返回值:执行结果
 107:Core/Src/fattester.c **** u8 mf_readdir(void)
 108:Core/Src/fattester.c **** {
 609              		.loc 1 108 1 is_stmt 1 view -0
 610              		.cfi_startproc
 611              		@ args = 0, pretend = 0, frame = 0
 612              		@ frame_needed = 0, uses_anonymous_args = 0
 613 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 614              	.LCFI7:
 615              		.cfi_def_cfa_offset 24
 616              		.cfi_offset 3, -24
 617              		.cfi_offset 4, -20
 618              		.cfi_offset 5, -16
 619              		.cfi_offset 6, -12
 620              		.cfi_offset 7, -8
 621              		.cfi_offset 14, -4
 109:Core/Src/fattester.c **** 	u8 res;
 622              		.loc 1 109 2 view .LVU117
 110:Core/Src/fattester.c **** 	char *fn;			 
 623              		.loc 1 110 2 view .LVU118
 111:Core/Src/fattester.c **** #if _USE_LFN
 112:Core/Src/fattester.c ****  	fileinfo.lfsize = _MAX_LFN * 2 + 1;
 624              		.loc 1 112 3 view .LVU119
 625              		.loc 1 112 19 is_stmt 0 view .LVU120
 626 0002 2B4C     		ldr	r4, .L52
 627 0004 40F2FF11 		movw	r1, #511
 628 0008 E161     		str	r1, [r4, #28]
 113:Core/Src/fattester.c **** 	fileinfo.lfname = mymalloc(SRAMIN,fileinfo.lfsize);
 629              		.loc 1 113 2 is_stmt 1 view .LVU121
 630              		.loc 1 113 20 is_stmt 0 view .LVU122
 631 000a 0020     		movs	r0, #0
 632 000c FFF7FEFF 		bl	mymalloc
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccLEaW5f.s 			page 16


 633              	.LVL55:
 634              		.loc 1 113 18 view .LVU123
 635 0010 A061     		str	r0, [r4, #24]
 114:Core/Src/fattester.c **** #endif		  
 115:Core/Src/fattester.c **** 	res=f_readdir(&dir,&fileinfo);//读取一个文件的信息
 636              		.loc 1 115 2 is_stmt 1 view .LVU124
 637              		.loc 1 115 6 is_stmt 0 view .LVU125
 638 0012 2146     		mov	r1, r4
 639 0014 2748     		ldr	r0, .L52+4
 640 0016 FFF7FEFF 		bl	f_readdir
 641              	.LVL56:
 116:Core/Src/fattester.c **** 	if(res!=FR_OK||fileinfo.fname[0]==0)
 642              		.loc 1 116 2 is_stmt 1 view .LVU126
 643              		.loc 1 116 4 is_stmt 0 view .LVU127
 644 001a 0546     		mov	r5, r0
 645 001c 0028     		cmp	r0, #0
 646 001e 41D1     		bne	.L47
 647              		.loc 1 116 31 discriminator 1 view .LVU128
 648 0020 637A     		ldrb	r3, [r4, #9]	@ zero_extendqisi2
 649              		.loc 1 116 15 discriminator 1 view .LVU129
 650 0022 002B     		cmp	r3, #0
 651 0024 3ED0     		beq	.L47
 117:Core/Src/fattester.c **** 	{
 118:Core/Src/fattester.c **** 		myfree(SRAMIN,fileinfo.lfname);
 119:Core/Src/fattester.c **** 		return res;//读完了.
 120:Core/Src/fattester.c **** 	}
 121:Core/Src/fattester.c **** #if _USE_LFN
 122:Core/Src/fattester.c **** 	fn=*fileinfo.lfname ? fileinfo.lfname : fileinfo.fname;
 652              		.loc 1 122 2 is_stmt 1 view .LVU130
 653              		.loc 1 122 14 is_stmt 0 view .LVU131
 654 0026 224B     		ldr	r3, .L52
 655 0028 9E69     		ldr	r6, [r3, #24]
 656              		.loc 1 122 5 view .LVU132
 657 002a 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 658              		.loc 1 122 40 view .LVU133
 659 002c 03B9     		cbnz	r3, .L50
 660 002e 224E     		ldr	r6, .L52+8
 661              	.L50:
 662              	.LVL57:
 123:Core/Src/fattester.c **** #else
 124:Core/Src/fattester.c **** 	fn=fileinfo.fname;;
 125:Core/Src/fattester.c **** #endif	
 126:Core/Src/fattester.c **** 	printf("\r\n DIR info:\r\n");
 663              		.loc 1 126 2 is_stmt 1 discriminator 4 view .LVU134
 664 0030 2248     		ldr	r0, .L52+12
 665              	.LVL58:
 666              		.loc 1 126 2 is_stmt 0 discriminator 4 view .LVU135
 667 0032 FFF7FEFF 		bl	puts
 668              	.LVL59:
 127:Core/Src/fattester.c **** 
 128:Core/Src/fattester.c **** 	printf("dir.id:%d\r\n",dir.id);
 669              		.loc 1 128 2 is_stmt 1 discriminator 4 view .LVU136
 670              		.loc 1 128 28 is_stmt 0 discriminator 4 view .LVU137
 671 0036 1F4C     		ldr	r4, .L52+4
 672              		.loc 1 128 2 discriminator 4 view .LVU138
 673 0038 A188     		ldrh	r1, [r4, #4]
 674 003a 2148     		ldr	r0, .L52+16
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccLEaW5f.s 			page 17


 675 003c FFF7FEFF 		bl	printf
 676              	.LVL60:
 129:Core/Src/fattester.c **** 	printf("dir.index:%d\r\n",dir.index);
 677              		.loc 1 129 2 is_stmt 1 discriminator 4 view .LVU139
 678 0040 E188     		ldrh	r1, [r4, #6]
 679 0042 2048     		ldr	r0, .L52+20
 680 0044 FFF7FEFF 		bl	printf
 681              	.LVL61:
 130:Core/Src/fattester.c **** 	printf("dir.sclust:%d\r\n",dir.sclust);
 682              		.loc 1 130 2 discriminator 4 view .LVU140
 683 0048 A168     		ldr	r1, [r4, #8]
 684 004a 1F48     		ldr	r0, .L52+24
 685 004c FFF7FEFF 		bl	printf
 686              	.LVL62:
 131:Core/Src/fattester.c **** 	printf("dir.clust:%d\r\n",dir.clust);
 687              		.loc 1 131 2 discriminator 4 view .LVU141
 688 0050 E168     		ldr	r1, [r4, #12]
 689 0052 1E48     		ldr	r0, .L52+28
 690 0054 FFF7FEFF 		bl	printf
 691              	.LVL63:
 132:Core/Src/fattester.c **** 	printf("dir.sect:%d\r\n",dir.sect);	  
 692              		.loc 1 132 2 discriminator 4 view .LVU142
 693 0058 2169     		ldr	r1, [r4, #16]
 694 005a 1D48     		ldr	r0, .L52+32
 695 005c FFF7FEFF 		bl	printf
 696              	.LVL64:
 133:Core/Src/fattester.c **** 
 134:Core/Src/fattester.c **** 	printf("\r\n");
 697              		.loc 1 134 2 discriminator 4 view .LVU143
 698 0060 1C4F     		ldr	r7, .L52+36
 699 0062 3846     		mov	r0, r7
 700 0064 FFF7FEFF 		bl	puts
 701              	.LVL65:
 135:Core/Src/fattester.c **** 	printf("File Name is:%s\r\n",fn);
 702              		.loc 1 135 2 discriminator 4 view .LVU144
 703 0068 3146     		mov	r1, r6
 704 006a 1B48     		ldr	r0, .L52+40
 705 006c FFF7FEFF 		bl	printf
 706              	.LVL66:
 136:Core/Src/fattester.c **** 	printf("File Size is:%d\r\n",fileinfo.fsize);
 707              		.loc 1 136 2 discriminator 4 view .LVU145
 708 0070 0F4C     		ldr	r4, .L52
 709 0072 2168     		ldr	r1, [r4]
 710 0074 1948     		ldr	r0, .L52+44
 711 0076 FFF7FEFF 		bl	printf
 712              	.LVL67:
 137:Core/Src/fattester.c **** 	printf("File data is:%d\r\n",fileinfo.fdate);
 713              		.loc 1 137 2 discriminator 4 view .LVU146
 714 007a A188     		ldrh	r1, [r4, #4]
 715 007c 1848     		ldr	r0, .L52+48
 716 007e FFF7FEFF 		bl	printf
 717              	.LVL68:
 138:Core/Src/fattester.c **** 	printf("File time is:%d\r\n",fileinfo.ftime);
 718              		.loc 1 138 2 discriminator 4 view .LVU147
 719 0082 E188     		ldrh	r1, [r4, #6]
 720 0084 1748     		ldr	r0, .L52+52
 721 0086 FFF7FEFF 		bl	printf
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccLEaW5f.s 			page 18


 722              	.LVL69:
 139:Core/Src/fattester.c **** 	printf("File Attr is:%d\r\n",fileinfo.fattrib);
 723              		.loc 1 139 2 discriminator 4 view .LVU148
 724 008a 217A     		ldrb	r1, [r4, #8]	@ zero_extendqisi2
 725 008c 1648     		ldr	r0, .L52+56
 726 008e FFF7FEFF 		bl	printf
 727              	.LVL70:
 140:Core/Src/fattester.c **** 	printf("\r\n");
 728              		.loc 1 140 2 discriminator 4 view .LVU149
 729 0092 3846     		mov	r0, r7
 730 0094 FFF7FEFF 		bl	puts
 731              	.LVL71:
 141:Core/Src/fattester.c **** 	myfree(SRAMIN,fileinfo.lfname);
 732              		.loc 1 141 2 discriminator 4 view .LVU150
 733 0098 A169     		ldr	r1, [r4, #24]
 734 009a 0020     		movs	r0, #0
 735 009c FFF7FEFF 		bl	myfree
 736              	.LVL72:
 142:Core/Src/fattester.c **** 	return 0;
 737              		.loc 1 142 2 discriminator 4 view .LVU151
 738              	.L49:
 143:Core/Src/fattester.c **** }			 
 739              		.loc 1 143 1 is_stmt 0 view .LVU152
 740 00a0 2846     		mov	r0, r5
 741 00a2 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 742              	.LVL73:
 743              	.L47:
 118:Core/Src/fattester.c **** 		return res;//读完了.
 744              		.loc 1 118 3 is_stmt 1 view .LVU153
 745 00a4 024B     		ldr	r3, .L52
 746 00a6 9969     		ldr	r1, [r3, #24]
 747 00a8 0020     		movs	r0, #0
 748              	.LVL74:
 118:Core/Src/fattester.c **** 		return res;//读完了.
 749              		.loc 1 118 3 is_stmt 0 view .LVU154
 750 00aa FFF7FEFF 		bl	myfree
 751              	.LVL75:
 119:Core/Src/fattester.c **** 	}
 752              		.loc 1 119 3 is_stmt 1 view .LVU155
 119:Core/Src/fattester.c **** 	}
 753              		.loc 1 119 10 is_stmt 0 view .LVU156
 754 00ae F7E7     		b	.L49
 755              	.L53:
 756              		.align	2
 757              	.L52:
 758 00b0 00000000 		.word	fileinfo
 759 00b4 00000000 		.word	dir
 760 00b8 09000000 		.word	fileinfo+9
 761 00bc 00000000 		.word	.LC10
 762 00c0 10000000 		.word	.LC11
 763 00c4 1C000000 		.word	.LC12
 764 00c8 2C000000 		.word	.LC13
 765 00cc 3C000000 		.word	.LC14
 766 00d0 4C000000 		.word	.LC15
 767 00d4 5C000000 		.word	.LC16
 768 00d8 60000000 		.word	.LC17
 769 00dc 74000000 		.word	.LC18
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccLEaW5f.s 			page 19


 770 00e0 88000000 		.word	.LC19
 771 00e4 9C000000 		.word	.LC20
 772 00e8 B0000000 		.word	.LC21
 773              		.cfi_endproc
 774              	.LFE140:
 776              		.section	.rodata.mf_scan_files.str1.4,"aMS",%progbits,1
 777              		.align	2
 778              	.LC22:
 779 0000 25732F00 		.ascii	"%s/\000"
 780              		.align	2
 781              	.LC23:
 782 0004 25730D0A 		.ascii	"%s\015\012\000"
 782      00
 783              		.section	.text.mf_scan_files,"ax",%progbits
 784              		.align	1
 785              		.global	mf_scan_files
 786              		.syntax unified
 787              		.thumb
 788              		.thumb_func
 789              		.fpu fpv4-sp-d16
 791              	mf_scan_files:
 792              	.LVL76:
 793              	.LFB141:
 144:Core/Src/fattester.c **** 
 145:Core/Src/fattester.c ****  //遍历文件
 146:Core/Src/fattester.c ****  //path:路径
 147:Core/Src/fattester.c ****  //返回值:执行结果
 148:Core/Src/fattester.c **** u8 mf_scan_files(u8 * path)
 149:Core/Src/fattester.c **** {
 794              		.loc 1 149 1 is_stmt 1 view -0
 795              		.cfi_startproc
 796              		@ args = 0, pretend = 0, frame = 0
 797              		@ frame_needed = 0, uses_anonymous_args = 0
 798              		.loc 1 149 1 is_stmt 0 view .LVU158
 799 0000 38B5     		push	{r3, r4, r5, lr}
 800              	.LCFI8:
 801              		.cfi_def_cfa_offset 16
 802              		.cfi_offset 3, -16
 803              		.cfi_offset 4, -12
 804              		.cfi_offset 5, -8
 805              		.cfi_offset 14, -4
 806 0002 0546     		mov	r5, r0
 150:Core/Src/fattester.c **** 	FRESULT res;	  
 807              		.loc 1 150 2 is_stmt 1 view .LVU159
 151:Core/Src/fattester.c ****     char *fn;   /* This function is assuming non-Unicode cfg. */
 808              		.loc 1 151 5 view .LVU160
 152:Core/Src/fattester.c **** #if _USE_LFN
 153:Core/Src/fattester.c ****  	fileinfo.lfsize = _MAX_LFN * 2 + 1;
 809              		.loc 1 153 3 view .LVU161
 810              		.loc 1 153 19 is_stmt 0 view .LVU162
 811 0004 194C     		ldr	r4, .L60
 812 0006 40F2FF11 		movw	r1, #511
 813 000a E161     		str	r1, [r4, #28]
 154:Core/Src/fattester.c **** 	fileinfo.lfname = mymalloc(SRAMIN,fileinfo.lfsize);
 814              		.loc 1 154 2 is_stmt 1 view .LVU163
 815              		.loc 1 154 20 is_stmt 0 view .LVU164
 816 000c 0020     		movs	r0, #0
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccLEaW5f.s 			page 20


 817              	.LVL77:
 818              		.loc 1 154 20 view .LVU165
 819 000e FFF7FEFF 		bl	mymalloc
 820              	.LVL78:
 821              		.loc 1 154 18 view .LVU166
 822 0012 A061     		str	r0, [r4, #24]
 155:Core/Src/fattester.c **** #endif		  
 156:Core/Src/fattester.c **** 
 157:Core/Src/fattester.c ****     res = f_opendir(&dir,(const TCHAR*)path); //打开一个目录
 823              		.loc 1 157 5 is_stmt 1 view .LVU167
 824              		.loc 1 157 11 is_stmt 0 view .LVU168
 825 0014 2946     		mov	r1, r5
 826 0016 1648     		ldr	r0, .L60+4
 827 0018 FFF7FEFF 		bl	f_opendir
 828              	.LVL79:
 158:Core/Src/fattester.c ****     if (res == FR_OK) 
 829              		.loc 1 158 5 is_stmt 1 view .LVU169
 830              		.loc 1 158 8 is_stmt 0 view .LVU170
 831 001c 0446     		mov	r4, r0
 832 001e 30B1     		cbz	r0, .L59
 833              	.L55:
 834              	.LVL80:
 159:Core/Src/fattester.c **** 	{	
 160:Core/Src/fattester.c **** 		printf("\r\n"); 
 161:Core/Src/fattester.c **** 		while(1)
 162:Core/Src/fattester.c **** 		{
 163:Core/Src/fattester.c **** 	        res = f_readdir(&dir, &fileinfo);                   //读取目录下的一个文件
 164:Core/Src/fattester.c **** 	        if (res != FR_OK || fileinfo.fname[0] == 0) break;  //错误了/到末尾了,退出
 165:Core/Src/fattester.c **** 	        //if (fileinfo.fname[0] == '.') continue;             //忽略上级目录
 166:Core/Src/fattester.c **** #if _USE_LFN
 167:Core/Src/fattester.c ****         	fn = *fileinfo.lfname ? fileinfo.lfname : fileinfo.fname;
 168:Core/Src/fattester.c **** #else							   
 169:Core/Src/fattester.c ****         	fn = fileinfo.fname;
 170:Core/Src/fattester.c **** #endif	                                              /* It is a file. */
 171:Core/Src/fattester.c **** 			printf("%s/", path);//打印路径	
 172:Core/Src/fattester.c **** 			printf("%s\r\n",  fn);//打印文件名	  
 173:Core/Src/fattester.c **** 		} 
 174:Core/Src/fattester.c ****     }	  
 175:Core/Src/fattester.c **** 	myfree(SRAMIN,fileinfo.lfname);
 835              		.loc 1 175 2 is_stmt 1 view .LVU171
 836 0020 124B     		ldr	r3, .L60
 837 0022 9969     		ldr	r1, [r3, #24]
 838 0024 0020     		movs	r0, #0
 839 0026 FFF7FEFF 		bl	myfree
 840              	.LVL81:
 176:Core/Src/fattester.c ****     return res;	  
 841              		.loc 1 176 5 view .LVU172
 177:Core/Src/fattester.c **** }
 842              		.loc 1 177 1 is_stmt 0 view .LVU173
 843 002a 2046     		mov	r0, r4
 844 002c 38BD     		pop	{r3, r4, r5, pc}
 845              	.LVL82:
 846              	.L59:
 160:Core/Src/fattester.c **** 		while(1)
 847              		.loc 1 160 3 is_stmt 1 view .LVU174
 848 002e 1148     		ldr	r0, .L60+8
 849              	.LVL83:
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccLEaW5f.s 			page 21


 160:Core/Src/fattester.c **** 		while(1)
 850              		.loc 1 160 3 is_stmt 0 view .LVU175
 851 0030 FFF7FEFF 		bl	puts
 852              	.LVL84:
 853 0034 07E0     		b	.L57
 854              	.LVL85:
 855              	.L56:
 171:Core/Src/fattester.c **** 			printf("%s\r\n",  fn);//打印文件名	  
 856              		.loc 1 171 4 is_stmt 1 discriminator 4 view .LVU176
 857 0036 2946     		mov	r1, r5
 858 0038 0F48     		ldr	r0, .L60+12
 859              	.LVL86:
 171:Core/Src/fattester.c **** 			printf("%s\r\n",  fn);//打印文件名	  
 860              		.loc 1 171 4 is_stmt 0 discriminator 4 view .LVU177
 861 003a FFF7FEFF 		bl	printf
 862              	.LVL87:
 172:Core/Src/fattester.c **** 		} 
 863              		.loc 1 172 4 is_stmt 1 discriminator 4 view .LVU178
 864 003e 2146     		mov	r1, r4
 865 0040 0E48     		ldr	r0, .L60+16
 866 0042 FFF7FEFF 		bl	printf
 867              	.LVL88:
 161:Core/Src/fattester.c **** 		{
 868              		.loc 1 161 8 discriminator 4 view .LVU179
 869              	.L57:
 161:Core/Src/fattester.c **** 		{
 870              		.loc 1 161 3 view .LVU180
 163:Core/Src/fattester.c **** 	        if (res != FR_OK || fileinfo.fname[0] == 0) break;  //错误了/到末尾了,退出
 871              		.loc 1 163 10 view .LVU181
 163:Core/Src/fattester.c **** 	        if (res != FR_OK || fileinfo.fname[0] == 0) break;  //错误了/到末尾了,退出
 872              		.loc 1 163 16 is_stmt 0 view .LVU182
 873 0046 0949     		ldr	r1, .L60
 874 0048 0948     		ldr	r0, .L60+4
 875 004a FFF7FEFF 		bl	f_readdir
 876              	.LVL89:
 164:Core/Src/fattester.c **** 	        //if (fileinfo.fname[0] == '.') continue;             //忽略上级目录
 877              		.loc 1 164 10 is_stmt 1 view .LVU183
 164:Core/Src/fattester.c **** 	        //if (fileinfo.fname[0] == '.') continue;             //忽略上级目录
 878              		.loc 1 164 13 is_stmt 0 view .LVU184
 879 004e 0446     		mov	r4, r0
 880 0050 0028     		cmp	r0, #0
 881 0052 E5D1     		bne	.L55
 164:Core/Src/fattester.c **** 	        //if (fileinfo.fname[0] == '.') continue;             //忽略上级目录
 882              		.loc 1 164 44 discriminator 1 view .LVU185
 883 0054 054B     		ldr	r3, .L60
 884 0056 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 164:Core/Src/fattester.c **** 	        //if (fileinfo.fname[0] == '.') continue;             //忽略上级目录
 885              		.loc 1 164 27 discriminator 1 view .LVU186
 886 0058 002B     		cmp	r3, #0
 887 005a E1D0     		beq	.L55
 167:Core/Src/fattester.c **** #else							   
 888              		.loc 1 167 10 is_stmt 1 view .LVU187
 167:Core/Src/fattester.c **** #else							   
 889              		.loc 1 167 24 is_stmt 0 view .LVU188
 890 005c 034B     		ldr	r3, .L60
 891 005e 9C69     		ldr	r4, [r3, #24]
 167:Core/Src/fattester.c **** #else							   
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccLEaW5f.s 			page 22


 892              		.loc 1 167 15 view .LVU189
 893 0060 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 167:Core/Src/fattester.c **** #else							   
 894              		.loc 1 167 50 view .LVU190
 895 0062 002B     		cmp	r3, #0
 896 0064 E7D1     		bne	.L56
 897 0066 064C     		ldr	r4, .L60+20
 898 0068 E5E7     		b	.L56
 899              	.L61:
 900 006a 00BF     		.align	2
 901              	.L60:
 902 006c 00000000 		.word	fileinfo
 903 0070 00000000 		.word	dir
 904 0074 5C000000 		.word	.LC16
 905 0078 00000000 		.word	.LC22
 906 007c 04000000 		.word	.LC23
 907 0080 09000000 		.word	fileinfo+9
 908              		.cfi_endproc
 909              	.LFE141:
 911              		.section	.rodata.mf_showfree.str1.4,"aMS",%progbits,1
 912              		.align	2
 913              	.LC24:
 914 0000 0D0AB4C5 		.ascii	"\015\012\264\305\305\314\327\334\310\335\301\277:%d"
 914      C5CCD7DC 
 914      C8DDC1BF 
 914      3A2564
 915 000f 204B420D 		.ascii	" KB\015\012\277\311\323\303\277\325\274\344:%d KB\015"
 915      0ABFC9D3 
 915      C3BFD5BC 
 915      E43A2564 
 915      204B420D 
 916 0023 0A00     		.ascii	"\012\000"
 917 0025 000000   		.align	2
 918              	.LC25:
 919 0028 0D0AB4C5 		.ascii	"\015\012\264\305\305\314\327\334\310\335\301\277:%d"
 919      C5CCD7DC 
 919      C8DDC1BF 
 919      3A2564
 920 0037 204D420D 		.ascii	" MB\015\012\277\311\323\303\277\325\274\344:%d MB\015"
 920      0ABFC9D3 
 920      C3BFD5BC 
 920      E43A2564 
 920      204D420D 
 921 004b 0A00     		.ascii	"\012\000"
 922              		.section	.text.mf_showfree,"ax",%progbits
 923              		.align	1
 924              		.global	mf_showfree
 925              		.syntax unified
 926              		.thumb
 927              		.thumb_func
 928              		.fpu fpv4-sp-d16
 930              	mf_showfree:
 931              	.LVL90:
 932              	.LFB142:
 178:Core/Src/fattester.c **** //显示剩余容量
 179:Core/Src/fattester.c **** //drv:盘符
 180:Core/Src/fattester.c **** //返回值:剩余容量(字节)
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccLEaW5f.s 			page 23


 181:Core/Src/fattester.c **** u32 mf_showfree(u8 *drv)
 182:Core/Src/fattester.c **** {
 933              		.loc 1 182 1 is_stmt 1 view -0
 934              		.cfi_startproc
 935              		@ args = 0, pretend = 0, frame = 8
 936              		@ frame_needed = 0, uses_anonymous_args = 0
 937              		.loc 1 182 1 is_stmt 0 view .LVU192
 938 0000 10B5     		push	{r4, lr}
 939              	.LCFI9:
 940              		.cfi_def_cfa_offset 8
 941              		.cfi_offset 4, -8
 942              		.cfi_offset 14, -4
 943 0002 82B0     		sub	sp, sp, #8
 944              	.LCFI10:
 945              		.cfi_def_cfa_offset 16
 183:Core/Src/fattester.c **** 	FATFS *fs1;
 946              		.loc 1 183 2 is_stmt 1 view .LVU193
 184:Core/Src/fattester.c **** 	u8 res;
 947              		.loc 1 184 2 view .LVU194
 185:Core/Src/fattester.c ****     u32 fre_clust=0, fre_sect=0, tot_sect=0;
 948              		.loc 1 185 5 view .LVU195
 949              		.loc 1 185 9 is_stmt 0 view .LVU196
 950 0004 0023     		movs	r3, #0
 951 0006 0093     		str	r3, [sp]
 952              	.LVL91:
 186:Core/Src/fattester.c ****     //得到磁盘信息及空闲簇数量
 187:Core/Src/fattester.c ****     res = f_getfree((const TCHAR*)drv,(DWORD*)&fre_clust, &fs1);
 953              		.loc 1 187 5 is_stmt 1 view .LVU197
 954              		.loc 1 187 11 is_stmt 0 view .LVU198
 955 0008 01AA     		add	r2, sp, #4
 956 000a 6946     		mov	r1, sp
 957 000c FFF7FEFF 		bl	f_getfree
 958              	.LVL92:
 188:Core/Src/fattester.c ****     if(res==0)
 959              		.loc 1 188 5 is_stmt 1 view .LVU199
 960              		.loc 1 188 7 is_stmt 0 view .LVU200
 961 0010 B8B9     		cbnz	r0, .L65
 189:Core/Src/fattester.c **** 	{											   
 190:Core/Src/fattester.c **** 	    tot_sect = (fs1->n_fatent - 2) * fs1->csize;//得到总扇区数
 962              		.loc 1 190 6 is_stmt 1 view .LVU201
 963              		.loc 1 190 21 is_stmt 0 view .LVU202
 964 0012 019B     		ldr	r3, [sp, #4]
 965 0014 5969     		ldr	r1, [r3, #20]
 966              		.loc 1 190 32 view .LVU203
 967 0016 0239     		subs	r1, r1, #2
 968              		.loc 1 190 42 view .LVU204
 969 0018 9C78     		ldrb	r4, [r3, #2]	@ zero_extendqisi2
 970              		.loc 1 190 15 view .LVU205
 971 001a 04FB01F1 		mul	r1, r4, r1
 972              	.LVL93:
 191:Core/Src/fattester.c **** 	    fre_sect = fre_clust * fs1->csize;			//得到空闲扇区数	   
 973              		.loc 1 191 6 is_stmt 1 view .LVU206
 974              		.loc 1 191 27 is_stmt 0 view .LVU207
 975 001e 009B     		ldr	r3, [sp]
 976              		.loc 1 191 15 view .LVU208
 977 0020 03FB04F4 		mul	r4, r3, r4
 978              	.LVL94:
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccLEaW5f.s 			page 24


 192:Core/Src/fattester.c **** #if _MAX_SS!=512
 193:Core/Src/fattester.c **** 		tot_sect*=fs1->ssize/512;
 194:Core/Src/fattester.c **** 		fre_sect*=fs1->ssize/512;
 195:Core/Src/fattester.c **** #endif	  
 196:Core/Src/fattester.c **** 		if(tot_sect<20480)//总容量小于10M
 979              		.loc 1 196 3 is_stmt 1 view .LVU209
 980              		.loc 1 196 5 is_stmt 0 view .LVU210
 981 0024 B1F5A04F 		cmp	r1, #20480
 982 0028 05D2     		bcs	.L64
 197:Core/Src/fattester.c **** 		{
 198:Core/Src/fattester.c **** 		    /* Print free space in unit of KB (assuming 512 bytes/sector) */
 199:Core/Src/fattester.c **** 		    printf("\r\n磁盘总容量:%d KB\r\n"
 983              		.loc 1 199 7 is_stmt 1 view .LVU211
 984 002a 6208     		lsrs	r2, r4, #1
 985 002c 4908     		lsrs	r1, r1, #1
 986              	.LVL95:
 987              		.loc 1 199 7 is_stmt 0 view .LVU212
 988 002e 0748     		ldr	r0, .L67
 989              	.LVL96:
 990              		.loc 1 199 7 view .LVU213
 991 0030 FFF7FEFF 		bl	printf
 992              	.LVL97:
 993              		.loc 1 199 7 view .LVU214
 994 0034 06E0     		b	.L62
 995              	.LVL98:
 996              	.L64:
 200:Core/Src/fattester.c **** 		           "可用空间:%d KB\r\n",
 201:Core/Src/fattester.c **** 		           tot_sect>>1,fre_sect>>1);
 202:Core/Src/fattester.c **** 		}else
 203:Core/Src/fattester.c **** 		{
 204:Core/Src/fattester.c **** 		    /* Print free space in unit of KB (assuming 512 bytes/sector) */
 205:Core/Src/fattester.c **** 		    printf("\r\n磁盘总容量:%d MB\r\n"
 997              		.loc 1 205 7 is_stmt 1 view .LVU215
 998 0036 E20A     		lsrs	r2, r4, #11
 999 0038 C90A     		lsrs	r1, r1, #11
 1000              	.LVL99:
 1001              		.loc 1 205 7 is_stmt 0 view .LVU216
 1002 003a 0548     		ldr	r0, .L67+4
 1003              	.LVL100:
 1004              		.loc 1 205 7 view .LVU217
 1005 003c FFF7FEFF 		bl	printf
 1006              	.LVL101:
 1007              		.loc 1 205 7 view .LVU218
 1008 0040 00E0     		b	.L62
 1009              	.LVL102:
 1010              	.L65:
 185:Core/Src/fattester.c ****     //得到磁盘信息及空闲簇数量
 1011              		.loc 1 185 22 view .LVU219
 1012 0042 0024     		movs	r4, #0
 206:Core/Src/fattester.c **** 		           "可用空间:%d MB\r\n",
 207:Core/Src/fattester.c **** 		           tot_sect>>11,fre_sect>>11);
 208:Core/Src/fattester.c **** 		}
 209:Core/Src/fattester.c **** 	}
 210:Core/Src/fattester.c **** 	return fre_sect;
 1013              		.loc 1 210 2 is_stmt 1 view .LVU220
 1014              	.LVL103:
 1015              	.L62:
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccLEaW5f.s 			page 25


 211:Core/Src/fattester.c **** }		    
 1016              		.loc 1 211 1 is_stmt 0 view .LVU221
 1017 0044 2046     		mov	r0, r4
 1018 0046 02B0     		add	sp, sp, #8
 1019              	.LCFI11:
 1020              		.cfi_def_cfa_offset 8
 1021              		@ sp needed
 1022 0048 10BD     		pop	{r4, pc}
 1023              	.L68:
 1024 004a 00BF     		.align	2
 1025              	.L67:
 1026 004c 00000000 		.word	.LC24
 1027 0050 28000000 		.word	.LC25
 1028              		.cfi_endproc
 1029              	.LFE142:
 1031              		.section	.text.mf_lseek,"ax",%progbits
 1032              		.align	1
 1033              		.global	mf_lseek
 1034              		.syntax unified
 1035              		.thumb
 1036              		.thumb_func
 1037              		.fpu fpv4-sp-d16
 1039              	mf_lseek:
 1040              	.LVL104:
 1041              	.LFB143:
 212:Core/Src/fattester.c **** //文件读写指针偏移
 213:Core/Src/fattester.c **** //offset:相对首地址的偏移量
 214:Core/Src/fattester.c **** //返回值:执行结果.
 215:Core/Src/fattester.c **** u8 mf_lseek(u32 offset)
 216:Core/Src/fattester.c **** {
 1042              		.loc 1 216 1 is_stmt 1 view -0
 1043              		.cfi_startproc
 1044              		@ args = 0, pretend = 0, frame = 0
 1045              		@ frame_needed = 0, uses_anonymous_args = 0
 1046              		.loc 1 216 1 is_stmt 0 view .LVU223
 1047 0000 08B5     		push	{r3, lr}
 1048              	.LCFI12:
 1049              		.cfi_def_cfa_offset 8
 1050              		.cfi_offset 3, -8
 1051              		.cfi_offset 14, -4
 1052 0002 0146     		mov	r1, r0
 217:Core/Src/fattester.c **** 	return f_lseek(file,offset);
 1053              		.loc 1 217 2 is_stmt 1 view .LVU224
 1054              		.loc 1 217 9 is_stmt 0 view .LVU225
 1055 0004 024B     		ldr	r3, .L71
 1056 0006 1868     		ldr	r0, [r3]
 1057              	.LVL105:
 1058              		.loc 1 217 9 view .LVU226
 1059 0008 FFF7FEFF 		bl	f_lseek
 1060              	.LVL106:
 218:Core/Src/fattester.c **** }
 1061              		.loc 1 218 1 view .LVU227
 1062 000c 08BD     		pop	{r3, pc}
 1063              	.L72:
 1064 000e 00BF     		.align	2
 1065              	.L71:
 1066 0010 00000000 		.word	file
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccLEaW5f.s 			page 26


 1067              		.cfi_endproc
 1068              	.LFE143:
 1070              		.section	.text.mf_tell,"ax",%progbits
 1071              		.align	1
 1072              		.global	mf_tell
 1073              		.syntax unified
 1074              		.thumb
 1075              		.thumb_func
 1076              		.fpu fpv4-sp-d16
 1078              	mf_tell:
 1079              	.LFB144:
 219:Core/Src/fattester.c **** //读取文件当前读写指针的位置.
 220:Core/Src/fattester.c **** //返回值:位置
 221:Core/Src/fattester.c **** u32 mf_tell(void)
 222:Core/Src/fattester.c **** {
 1080              		.loc 1 222 1 is_stmt 1 view -0
 1081              		.cfi_startproc
 1082              		@ args = 0, pretend = 0, frame = 0
 1083              		@ frame_needed = 0, uses_anonymous_args = 0
 1084              		@ link register save eliminated.
 223:Core/Src/fattester.c **** 	return f_tell(file);
 1085              		.loc 1 223 2 view .LVU229
 1086              		.loc 1 223 9 is_stmt 0 view .LVU230
 1087 0000 014B     		ldr	r3, .L74
 1088 0002 1B68     		ldr	r3, [r3]
 224:Core/Src/fattester.c **** }
 1089              		.loc 1 224 1 view .LVU231
 1090 0004 9868     		ldr	r0, [r3, #8]
 1091 0006 7047     		bx	lr
 1092              	.L75:
 1093              		.align	2
 1094              	.L74:
 1095 0008 00000000 		.word	file
 1096              		.cfi_endproc
 1097              	.LFE144:
 1099              		.section	.text.mf_size,"ax",%progbits
 1100              		.align	1
 1101              		.global	mf_size
 1102              		.syntax unified
 1103              		.thumb
 1104              		.thumb_func
 1105              		.fpu fpv4-sp-d16
 1107              	mf_size:
 1108              	.LFB145:
 225:Core/Src/fattester.c **** //读取文件大小
 226:Core/Src/fattester.c **** //返回值:文件大小
 227:Core/Src/fattester.c **** u32 mf_size(void)
 228:Core/Src/fattester.c **** {
 1109              		.loc 1 228 1 is_stmt 1 view -0
 1110              		.cfi_startproc
 1111              		@ args = 0, pretend = 0, frame = 0
 1112              		@ frame_needed = 0, uses_anonymous_args = 0
 1113              		@ link register save eliminated.
 229:Core/Src/fattester.c **** 	return f_size(file);
 1114              		.loc 1 229 2 view .LVU233
 1115              		.loc 1 229 9 is_stmt 0 view .LVU234
 1116 0000 014B     		ldr	r3, .L77
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccLEaW5f.s 			page 27


 1117 0002 1B68     		ldr	r3, [r3]
 230:Core/Src/fattester.c **** } 
 1118              		.loc 1 230 1 view .LVU235
 1119 0004 D868     		ldr	r0, [r3, #12]
 1120 0006 7047     		bx	lr
 1121              	.L78:
 1122              		.align	2
 1123              	.L77:
 1124 0008 00000000 		.word	file
 1125              		.cfi_endproc
 1126              	.LFE145:
 1128              		.section	.text.mf_mkdir,"ax",%progbits
 1129              		.align	1
 1130              		.global	mf_mkdir
 1131              		.syntax unified
 1132              		.thumb
 1133              		.thumb_func
 1134              		.fpu fpv4-sp-d16
 1136              	mf_mkdir:
 1137              	.LVL107:
 1138              	.LFB146:
 231:Core/Src/fattester.c **** //创建目录
 232:Core/Src/fattester.c **** //pname:目录路径+名字
 233:Core/Src/fattester.c **** //返回值:执行结果
 234:Core/Src/fattester.c **** u8 mf_mkdir(u8*pname)
 235:Core/Src/fattester.c **** {
 1139              		.loc 1 235 1 is_stmt 1 view -0
 1140              		.cfi_startproc
 1141              		@ args = 0, pretend = 0, frame = 0
 1142              		@ frame_needed = 0, uses_anonymous_args = 0
 1143              		.loc 1 235 1 is_stmt 0 view .LVU237
 1144 0000 08B5     		push	{r3, lr}
 1145              	.LCFI13:
 1146              		.cfi_def_cfa_offset 8
 1147              		.cfi_offset 3, -8
 1148              		.cfi_offset 14, -4
 236:Core/Src/fattester.c **** 	return f_mkdir((const TCHAR *)pname);
 1149              		.loc 1 236 2 is_stmt 1 view .LVU238
 1150              		.loc 1 236 9 is_stmt 0 view .LVU239
 1151 0002 FFF7FEFF 		bl	f_mkdir
 1152              	.LVL108:
 237:Core/Src/fattester.c **** }
 1153              		.loc 1 237 1 view .LVU240
 1154 0006 08BD     		pop	{r3, pc}
 1155              		.cfi_endproc
 1156              	.LFE146:
 1158              		.section	.text.mf_fmkfs,"ax",%progbits
 1159              		.align	1
 1160              		.global	mf_fmkfs
 1161              		.syntax unified
 1162              		.thumb
 1163              		.thumb_func
 1164              		.fpu fpv4-sp-d16
 1166              	mf_fmkfs:
 1167              	.LVL109:
 1168              	.LFB147:
 238:Core/Src/fattester.c **** //格式化
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccLEaW5f.s 			page 28


 239:Core/Src/fattester.c **** //path:磁盘路径，比如"0:"、"1:"
 240:Core/Src/fattester.c **** //mode:模式
 241:Core/Src/fattester.c **** //au:簇大小
 242:Core/Src/fattester.c **** //返回值:执行结果
 243:Core/Src/fattester.c **** u8 mf_fmkfs(u8* path,u8 mode,u16 au)
 244:Core/Src/fattester.c **** {
 1169              		.loc 1 244 1 is_stmt 1 view -0
 1170              		.cfi_startproc
 1171              		@ args = 0, pretend = 0, frame = 0
 1172              		@ frame_needed = 0, uses_anonymous_args = 0
 1173              		.loc 1 244 1 is_stmt 0 view .LVU242
 1174 0000 08B5     		push	{r3, lr}
 1175              	.LCFI14:
 1176              		.cfi_def_cfa_offset 8
 1177              		.cfi_offset 3, -8
 1178              		.cfi_offset 14, -4
 245:Core/Src/fattester.c **** 	return f_mkfs((const TCHAR*)path,mode,au);//格式化,drv:盘符;mode:模式;au:簇大小
 1179              		.loc 1 245 2 is_stmt 1 view .LVU243
 1180              		.loc 1 245 9 is_stmt 0 view .LVU244
 1181 0002 FFF7FEFF 		bl	f_mkfs
 1182              	.LVL110:
 246:Core/Src/fattester.c **** } 
 1183              		.loc 1 246 1 view .LVU245
 1184 0006 08BD     		pop	{r3, pc}
 1185              		.cfi_endproc
 1186              	.LFE147:
 1188              		.section	.text.mf_unlink,"ax",%progbits
 1189              		.align	1
 1190              		.global	mf_unlink
 1191              		.syntax unified
 1192              		.thumb
 1193              		.thumb_func
 1194              		.fpu fpv4-sp-d16
 1196              	mf_unlink:
 1197              	.LVL111:
 1198              	.LFB148:
 247:Core/Src/fattester.c **** //删除文件/目录
 248:Core/Src/fattester.c **** //pname:文件/目录路径+名字
 249:Core/Src/fattester.c **** //返回值:执行结果
 250:Core/Src/fattester.c **** u8 mf_unlink(u8 *pname)
 251:Core/Src/fattester.c **** {
 1199              		.loc 1 251 1 is_stmt 1 view -0
 1200              		.cfi_startproc
 1201              		@ args = 0, pretend = 0, frame = 0
 1202              		@ frame_needed = 0, uses_anonymous_args = 0
 1203              		.loc 1 251 1 is_stmt 0 view .LVU247
 1204 0000 08B5     		push	{r3, lr}
 1205              	.LCFI15:
 1206              		.cfi_def_cfa_offset 8
 1207              		.cfi_offset 3, -8
 1208              		.cfi_offset 14, -4
 252:Core/Src/fattester.c **** 	return  f_unlink((const TCHAR *)pname);
 1209              		.loc 1 252 2 is_stmt 1 view .LVU248
 1210              		.loc 1 252 10 is_stmt 0 view .LVU249
 1211 0002 FFF7FEFF 		bl	f_unlink
 1212              	.LVL112:
 253:Core/Src/fattester.c **** }
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccLEaW5f.s 			page 29


 1213              		.loc 1 253 1 view .LVU250
 1214 0006 08BD     		pop	{r3, pc}
 1215              		.cfi_endproc
 1216              	.LFE148:
 1218              		.section	.text.mf_rename,"ax",%progbits
 1219              		.align	1
 1220              		.global	mf_rename
 1221              		.syntax unified
 1222              		.thumb
 1223              		.thumb_func
 1224              		.fpu fpv4-sp-d16
 1226              	mf_rename:
 1227              	.LVL113:
 1228              	.LFB149:
 254:Core/Src/fattester.c **** 
 255:Core/Src/fattester.c **** //修改文件/目录名字(如果目录不同,还可以移动文件哦!)
 256:Core/Src/fattester.c **** //oldname:之前的名字
 257:Core/Src/fattester.c **** //newname:新名字
 258:Core/Src/fattester.c **** //返回值:执行结果
 259:Core/Src/fattester.c **** u8 mf_rename(u8 *oldname,u8* newname)
 260:Core/Src/fattester.c **** {
 1229              		.loc 1 260 1 is_stmt 1 view -0
 1230              		.cfi_startproc
 1231              		@ args = 0, pretend = 0, frame = 0
 1232              		@ frame_needed = 0, uses_anonymous_args = 0
 1233              		.loc 1 260 1 is_stmt 0 view .LVU252
 1234 0000 08B5     		push	{r3, lr}
 1235              	.LCFI16:
 1236              		.cfi_def_cfa_offset 8
 1237              		.cfi_offset 3, -8
 1238              		.cfi_offset 14, -4
 261:Core/Src/fattester.c **** 	return  f_rename((const TCHAR *)oldname,(const TCHAR *)newname);
 1239              		.loc 1 261 2 is_stmt 1 view .LVU253
 1240              		.loc 1 261 10 is_stmt 0 view .LVU254
 1241 0002 FFF7FEFF 		bl	f_rename
 1242              	.LVL114:
 262:Core/Src/fattester.c **** }
 1243              		.loc 1 262 1 view .LVU255
 1244 0006 08BD     		pop	{r3, pc}
 1245              		.cfi_endproc
 1246              	.LFE149:
 1248              		.section	.rodata.mf_getlabel.str1.4,"aMS",%progbits,1
 1249              		.align	2
 1250              	.LC26:
 1251 0000 0D0AB4C5 		.ascii	"\015\012\264\305\305\314%s \265\304\305\314\267\373"
 1251      C5CC2573 
 1251      20B5C4C5 
 1251      CCB7FB
 1252 000f CEAA3A25 		.ascii	"\316\252:%s\015\012\000"
 1252      730D0A00 
 1253 0017 00       		.align	2
 1254              	.LC27:
 1255 0018 B4C5C5CC 		.ascii	"\264\305\305\314%s \265\304\320\362\301\320\272\305"
 1255      257320B5 
 1255      C4D0F2C1 
 1255      D0BAC5
 1256 0027 3A25580D 		.ascii	":%X\015\012\015\012\000"
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccLEaW5f.s 			page 30


 1256      0A0D0A00 
 1257 002f 00       		.align	2
 1258              	.LC28:
 1259 0030 0D0ABBF1 		.ascii	"\015\012\273\361\310\241\312\247\260\334\243\254\264"
 1259      C8A1CAA7 
 1259      B0DCA3AC 
 1259      B4
 1260 003d EDCEF3C2 		.ascii	"\355\316\363\302\353:%X\015\012\000"
 1260      EB3A2558 
 1260      0D0A00
 1261              		.section	.text.mf_getlabel,"ax",%progbits
 1262              		.align	1
 1263              		.global	mf_getlabel
 1264              		.syntax unified
 1265              		.thumb
 1266              		.thumb_func
 1267              		.fpu fpv4-sp-d16
 1269              	mf_getlabel:
 1270              	.LVL115:
 1271              	.LFB150:
 263:Core/Src/fattester.c **** //获取盘符（磁盘名字）
 264:Core/Src/fattester.c **** //path:磁盘路径，比如"0:"、"1:"  
 265:Core/Src/fattester.c **** void mf_getlabel(u8 *path)
 266:Core/Src/fattester.c **** {
 1272              		.loc 1 266 1 is_stmt 1 view -0
 1273              		.cfi_startproc
 1274              		@ args = 0, pretend = 0, frame = 24
 1275              		@ frame_needed = 0, uses_anonymous_args = 0
 1276              		.loc 1 266 1 is_stmt 0 view .LVU257
 1277 0000 10B5     		push	{r4, lr}
 1278              	.LCFI17:
 1279              		.cfi_def_cfa_offset 8
 1280              		.cfi_offset 4, -8
 1281              		.cfi_offset 14, -4
 1282 0002 86B0     		sub	sp, sp, #24
 1283              	.LCFI18:
 1284              		.cfi_def_cfa_offset 32
 1285 0004 0446     		mov	r4, r0
 267:Core/Src/fattester.c **** 	u8 buf[20];
 1286              		.loc 1 267 2 is_stmt 1 view .LVU258
 268:Core/Src/fattester.c **** 	u32 sn=0;
 1287              		.loc 1 268 2 view .LVU259
 1288              		.loc 1 268 6 is_stmt 0 view .LVU260
 1289 0006 0023     		movs	r3, #0
 1290 0008 0093     		str	r3, [sp]
 269:Core/Src/fattester.c **** 	u8 res;
 1291              		.loc 1 269 2 is_stmt 1 view .LVU261
 270:Core/Src/fattester.c **** 	res=f_getlabel ((const TCHAR *)path,(TCHAR *)buf,(DWORD*)&sn);
 1292              		.loc 1 270 2 view .LVU262
 1293              		.loc 1 270 6 is_stmt 0 view .LVU263
 1294 000a 6A46     		mov	r2, sp
 1295 000c 01A9     		add	r1, sp, #4
 1296 000e FFF7FEFF 		bl	f_getlabel
 1297              	.LVL116:
 271:Core/Src/fattester.c **** 	if(res==FR_OK)
 1298              		.loc 1 271 2 is_stmt 1 view .LVU264
 1299              		.loc 1 271 4 is_stmt 0 view .LVU265
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccLEaW5f.s 			page 31


 1300 0012 58B9     		cbnz	r0, .L88
 272:Core/Src/fattester.c **** 	{
 273:Core/Src/fattester.c **** 		printf("\r\n磁盘%s 的盘符为:%s\r\n",path,buf);
 1301              		.loc 1 273 3 is_stmt 1 view .LVU266
 1302 0014 01AA     		add	r2, sp, #4
 1303 0016 2146     		mov	r1, r4
 1304 0018 0748     		ldr	r0, .L91
 1305              	.LVL117:
 1306              		.loc 1 273 3 is_stmt 0 view .LVU267
 1307 001a FFF7FEFF 		bl	printf
 1308              	.LVL118:
 274:Core/Src/fattester.c **** 		printf("磁盘%s 的序列号:%X\r\n\r\n",path,sn); 
 1309              		.loc 1 274 3 is_stmt 1 view .LVU268
 1310 001e 009A     		ldr	r2, [sp]
 1311 0020 2146     		mov	r1, r4
 1312 0022 0648     		ldr	r0, .L91+4
 1313 0024 FFF7FEFF 		bl	printf
 1314              	.LVL119:
 1315              	.L87:
 275:Core/Src/fattester.c **** 	}else printf("\r\n获取失败，错误码:%X\r\n",res);
 276:Core/Src/fattester.c **** }
 1316              		.loc 1 276 1 is_stmt 0 view .LVU269
 1317 0028 06B0     		add	sp, sp, #24
 1318              	.LCFI19:
 1319              		.cfi_remember_state
 1320              		.cfi_def_cfa_offset 8
 1321              		@ sp needed
 1322 002a 10BD     		pop	{r4, pc}
 1323              	.LVL120:
 1324              	.L88:
 1325              	.LCFI20:
 1326              		.cfi_restore_state
 1327              		.loc 1 276 1 view .LVU270
 1328 002c 0146     		mov	r1, r0
 275:Core/Src/fattester.c **** 	}else printf("\r\n获取失败，错误码:%X\r\n",res);
 1329              		.loc 1 275 8 is_stmt 1 view .LVU271
 1330 002e 0448     		ldr	r0, .L91+8
 1331              	.LVL121:
 275:Core/Src/fattester.c **** 	}else printf("\r\n获取失败，错误码:%X\r\n",res);
 1332              		.loc 1 275 8 is_stmt 0 view .LVU272
 1333 0030 FFF7FEFF 		bl	printf
 1334              	.LVL122:
 1335              		.loc 1 276 1 view .LVU273
 1336 0034 F8E7     		b	.L87
 1337              	.L92:
 1338 0036 00BF     		.align	2
 1339              	.L91:
 1340 0038 00000000 		.word	.LC26
 1341 003c 18000000 		.word	.LC27
 1342 0040 30000000 		.word	.LC28
 1343              		.cfi_endproc
 1344              	.LFE150:
 1346              		.section	.rodata.mf_setlabel.str1.4,"aMS",%progbits,1
 1347              		.align	2
 1348              	.LC29:
 1349 0000 0D0AB4C5 		.ascii	"\015\012\264\305\305\314\305\314\267\373\311\350\326"
 1349      C5CCC5CC 
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccLEaW5f.s 			page 32


 1349      B7FBC9E8 
 1349      D6
 1350 000d C3B3C9B9 		.ascii	"\303\263\311\271\246:%s\015\012\000"
 1350      A63A2573 
 1350      0D0A00
 1351              		.align	2
 1352              	.LC30:
 1353 0018 0D0AB4C5 		.ascii	"\015\012\264\305\305\314\305\314\267\373\311\350\326"
 1353      C5CCC5CC 
 1353      B7FBC9E8 
 1353      D6
 1354 0025 C3CAA7B0 		.ascii	"\303\312\247\260\334\243\254\264\355\316\363\302\353"
 1354      DCA3ACB4 
 1354      EDCEF3C2 
 1354      EB
 1355 0032 3A25580D 		.ascii	":%X\015\012\000"
 1355      0A00
 1356              		.section	.text.mf_setlabel,"ax",%progbits
 1357              		.align	1
 1358              		.global	mf_setlabel
 1359              		.syntax unified
 1360              		.thumb
 1361              		.thumb_func
 1362              		.fpu fpv4-sp-d16
 1364              	mf_setlabel:
 1365              	.LVL123:
 1366              	.LFB151:
 277:Core/Src/fattester.c **** //设置盘符（磁盘名字），最长11个字符！！，支持数字和大写字母组合以及汉字等
 278:Core/Src/fattester.c **** //path:磁盘号+名字，比如"0:DISK1"、"1:DISK2"  
 279:Core/Src/fattester.c **** void mf_setlabel(u8 *path)
 280:Core/Src/fattester.c **** {
 1367              		.loc 1 280 1 is_stmt 1 view -0
 1368              		.cfi_startproc
 1369              		@ args = 0, pretend = 0, frame = 0
 1370              		@ frame_needed = 0, uses_anonymous_args = 0
 1371              		.loc 1 280 1 is_stmt 0 view .LVU275
 1372 0000 10B5     		push	{r4, lr}
 1373              	.LCFI21:
 1374              		.cfi_def_cfa_offset 8
 1375              		.cfi_offset 4, -8
 1376              		.cfi_offset 14, -4
 1377 0002 0446     		mov	r4, r0
 281:Core/Src/fattester.c **** 	u8 res;
 1378              		.loc 1 281 2 is_stmt 1 view .LVU276
 282:Core/Src/fattester.c **** 	res=f_setlabel ((const TCHAR *)path);
 1379              		.loc 1 282 2 view .LVU277
 1380              		.loc 1 282 6 is_stmt 0 view .LVU278
 1381 0004 FFF7FEFF 		bl	f_setlabel
 1382              	.LVL124:
 283:Core/Src/fattester.c **** 	if(res==FR_OK)
 1383              		.loc 1 283 2 is_stmt 1 view .LVU279
 1384              		.loc 1 283 4 is_stmt 0 view .LVU280
 1385 0008 20B9     		cbnz	r0, .L94
 284:Core/Src/fattester.c **** 	{
 285:Core/Src/fattester.c **** 		printf("\r\n磁盘盘符设置成功:%s\r\n",path);
 1386              		.loc 1 285 3 is_stmt 1 view .LVU281
 1387 000a 2146     		mov	r1, r4
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccLEaW5f.s 			page 33


 1388 000c 0448     		ldr	r0, .L97
 1389              	.LVL125:
 1390              		.loc 1 285 3 is_stmt 0 view .LVU282
 1391 000e FFF7FEFF 		bl	printf
 1392              	.LVL126:
 1393              	.L93:
 286:Core/Src/fattester.c **** 	}else printf("\r\n磁盘盘符设置失败，错误码:%X\r\n",res);
 287:Core/Src/fattester.c **** } 
 1394              		.loc 1 287 1 view .LVU283
 1395 0012 10BD     		pop	{r4, pc}
 1396              	.LVL127:
 1397              	.L94:
 1398              		.loc 1 287 1 view .LVU284
 1399 0014 0146     		mov	r1, r0
 286:Core/Src/fattester.c **** 	}else printf("\r\n磁盘盘符设置失败，错误码:%X\r\n",res);
 1400              		.loc 1 286 8 is_stmt 1 view .LVU285
 1401 0016 0348     		ldr	r0, .L97+4
 1402              	.LVL128:
 286:Core/Src/fattester.c **** 	}else printf("\r\n磁盘盘符设置失败，错误码:%X\r\n",res);
 1403              		.loc 1 286 8 is_stmt 0 view .LVU286
 1404 0018 FFF7FEFF 		bl	printf
 1405              	.LVL129:
 1406              		.loc 1 287 1 view .LVU287
 1407 001c F9E7     		b	.L93
 1408              	.L98:
 1409 001e 00BF     		.align	2
 1410              	.L97:
 1411 0020 00000000 		.word	.LC29
 1412 0024 18000000 		.word	.LC30
 1413              		.cfi_endproc
 1414              	.LFE151:
 1416              		.section	.rodata.mf_gets.str1.4,"aMS",%progbits,1
 1417              		.align	2
 1418              	.LC31:
 1419 0000 0D0A5468 		.ascii	"\015\012The String Readed Is:%s\015\012\000"
 1419      65205374 
 1419      72696E67 
 1419      20526561 
 1419      64656420 
 1420              		.section	.text.mf_gets,"ax",%progbits
 1421              		.align	1
 1422              		.global	mf_gets
 1423              		.syntax unified
 1424              		.thumb
 1425              		.thumb_func
 1426              		.fpu fpv4-sp-d16
 1428              	mf_gets:
 1429              	.LVL130:
 1430              	.LFB152:
 288:Core/Src/fattester.c **** 
 289:Core/Src/fattester.c **** //从文件里面读取一段字符串
 290:Core/Src/fattester.c **** //size:要读取的长度
 291:Core/Src/fattester.c **** void mf_gets(u16 size)
 292:Core/Src/fattester.c **** {
 1431              		.loc 1 292 1 is_stmt 1 view -0
 1432              		.cfi_startproc
 1433              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccLEaW5f.s 			page 34


 1434              		@ frame_needed = 0, uses_anonymous_args = 0
 1435              		.loc 1 292 1 is_stmt 0 view .LVU289
 1436 0000 08B5     		push	{r3, lr}
 1437              	.LCFI22:
 1438              		.cfi_def_cfa_offset 8
 1439              		.cfi_offset 3, -8
 1440              		.cfi_offset 14, -4
 1441 0002 0146     		mov	r1, r0
 293:Core/Src/fattester.c ****  	TCHAR* rbuf;
 1442              		.loc 1 293 3 is_stmt 1 view .LVU290
 294:Core/Src/fattester.c **** 	rbuf=f_gets((TCHAR*)fatbuf,size,file);
 1443              		.loc 1 294 2 view .LVU291
 1444              		.loc 1 294 7 is_stmt 0 view .LVU292
 1445 0004 064B     		ldr	r3, .L103
 1446 0006 1A68     		ldr	r2, [r3]
 1447 0008 064B     		ldr	r3, .L103+4
 1448 000a 1868     		ldr	r0, [r3]
 1449              	.LVL131:
 1450              		.loc 1 294 7 view .LVU293
 1451 000c FFF7FEFF 		bl	f_gets
 1452              	.LVL132:
 295:Core/Src/fattester.c **** 	if(*rbuf==0)return  ;//没有数据读到
 1453              		.loc 1 295 2 is_stmt 1 view .LVU294
 1454              		.loc 1 295 5 is_stmt 0 view .LVU295
 1455 0010 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 1456              		.loc 1 295 4 view .LVU296
 1457 0012 03B9     		cbnz	r3, .L102
 1458              	.LVL133:
 1459              	.L99:
 296:Core/Src/fattester.c **** 	else
 297:Core/Src/fattester.c **** 	{
 298:Core/Src/fattester.c **** 		printf("\r\nThe String Readed Is:%s\r\n",rbuf);  	  
 299:Core/Src/fattester.c **** 	}			    	
 300:Core/Src/fattester.c **** }
 1460              		.loc 1 300 1 view .LVU297
 1461 0014 08BD     		pop	{r3, pc}
 1462              	.LVL134:
 1463              	.L102:
 298:Core/Src/fattester.c **** 	}			    	
 1464              		.loc 1 298 3 is_stmt 1 view .LVU298
 1465 0016 0146     		mov	r1, r0
 1466 0018 0348     		ldr	r0, .L103+8
 1467              	.LVL135:
 298:Core/Src/fattester.c **** 	}			    	
 1468              		.loc 1 298 3 is_stmt 0 view .LVU299
 1469 001a FFF7FEFF 		bl	printf
 1470              	.LVL136:
 298:Core/Src/fattester.c **** 	}			    	
 1471              		.loc 1 298 3 view .LVU300
 1472 001e F9E7     		b	.L99
 1473              	.L104:
 1474              		.align	2
 1475              	.L103:
 1476 0020 00000000 		.word	file
 1477 0024 00000000 		.word	fatbuf
 1478 0028 00000000 		.word	.LC31
 1479              		.cfi_endproc
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccLEaW5f.s 			page 35


 1480              	.LFE152:
 1482              		.section	.text.mf_putc,"ax",%progbits
 1483              		.align	1
 1484              		.global	mf_putc
 1485              		.syntax unified
 1486              		.thumb
 1487              		.thumb_func
 1488              		.fpu fpv4-sp-d16
 1490              	mf_putc:
 1491              	.LVL137:
 1492              	.LFB153:
 301:Core/Src/fattester.c **** //需要_USE_STRFUNC>=1
 302:Core/Src/fattester.c **** //写一个字符到文件
 303:Core/Src/fattester.c **** //c:要写入的字符
 304:Core/Src/fattester.c **** //返回值:执行结果
 305:Core/Src/fattester.c **** u8 mf_putc(u8 c)
 306:Core/Src/fattester.c **** {
 1493              		.loc 1 306 1 is_stmt 1 view -0
 1494              		.cfi_startproc
 1495              		@ args = 0, pretend = 0, frame = 0
 1496              		@ frame_needed = 0, uses_anonymous_args = 0
 1497              		.loc 1 306 1 is_stmt 0 view .LVU302
 1498 0000 08B5     		push	{r3, lr}
 1499              	.LCFI23:
 1500              		.cfi_def_cfa_offset 8
 1501              		.cfi_offset 3, -8
 1502              		.cfi_offset 14, -4
 307:Core/Src/fattester.c **** 	return f_putc((TCHAR)c,file);
 1503              		.loc 1 307 2 is_stmt 1 view .LVU303
 1504              		.loc 1 307 9 is_stmt 0 view .LVU304
 1505 0002 034B     		ldr	r3, .L107
 1506 0004 1968     		ldr	r1, [r3]
 1507 0006 FFF7FEFF 		bl	f_putc
 1508              	.LVL138:
 308:Core/Src/fattester.c **** }
 1509              		.loc 1 308 1 view .LVU305
 1510 000a C0B2     		uxtb	r0, r0
 1511 000c 08BD     		pop	{r3, pc}
 1512              	.L108:
 1513 000e 00BF     		.align	2
 1514              	.L107:
 1515 0010 00000000 		.word	file
 1516              		.cfi_endproc
 1517              	.LFE153:
 1519              		.section	.text.mf_puts,"ax",%progbits
 1520              		.align	1
 1521              		.global	mf_puts
 1522              		.syntax unified
 1523              		.thumb
 1524              		.thumb_func
 1525              		.fpu fpv4-sp-d16
 1527              	mf_puts:
 1528              	.LVL139:
 1529              	.LFB154:
 309:Core/Src/fattester.c **** //写字符串到文件
 310:Core/Src/fattester.c **** //c:要写入的字符串
 311:Core/Src/fattester.c **** //返回值:写入的字符串长度
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccLEaW5f.s 			page 36


 312:Core/Src/fattester.c **** u8 mf_puts(u8*c)
 313:Core/Src/fattester.c **** {
 1530              		.loc 1 313 1 is_stmt 1 view -0
 1531              		.cfi_startproc
 1532              		@ args = 0, pretend = 0, frame = 0
 1533              		@ frame_needed = 0, uses_anonymous_args = 0
 1534              		.loc 1 313 1 is_stmt 0 view .LVU307
 1535 0000 08B5     		push	{r3, lr}
 1536              	.LCFI24:
 1537              		.cfi_def_cfa_offset 8
 1538              		.cfi_offset 3, -8
 1539              		.cfi_offset 14, -4
 314:Core/Src/fattester.c **** 	return f_puts((TCHAR*)c,file);
 1540              		.loc 1 314 2 is_stmt 1 view .LVU308
 1541              		.loc 1 314 9 is_stmt 0 view .LVU309
 1542 0002 034B     		ldr	r3, .L111
 1543 0004 1968     		ldr	r1, [r3]
 1544 0006 FFF7FEFF 		bl	f_puts
 1545              	.LVL140:
 315:Core/Src/fattester.c **** }
 1546              		.loc 1 315 1 view .LVU310
 1547 000a C0B2     		uxtb	r0, r0
 1548 000c 08BD     		pop	{r3, pc}
 1549              	.L112:
 1550 000e 00BF     		.align	2
 1551              	.L111:
 1552 0010 00000000 		.word	file
 1553              		.cfi_endproc
 1554              	.LFE154:
 1556              		.text
 1557              	.Letext0:
 1558              		.file 2 "d:\\install\\gnu arm embedded toolchain\\10 2020-q4-major\\arm-none-eabi\\include\\machin
 1559              		.file 3 "d:\\install\\gnu arm embedded toolchain\\10 2020-q4-major\\arm-none-eabi\\include\\sys\\_
 1560              		.file 4 "Core/Inc/stm32f4xx.h"
 1561              		.file 5 "Core/Inc/integer.h"
 1562              		.file 6 "Core/Inc/ff.h"
 1563              		.file 7 "Core/Inc/exfuns.h"
 1564              		.file 8 "d:\\install\\gnu arm embedded toolchain\\10 2020-q4-major\\arm-none-eabi\\include\\stdio.
 1565              		.file 9 "Core/Inc/malloc.h"
 1566              		.file 10 "<built-in>"
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccLEaW5f.s 			page 37


DEFINED SYMBOLS
                            *ABS*:00000000 fattester.c
C:\Users\ADMIN\AppData\Local\Temp\ccLEaW5f.s:18     .text.mf_mount:00000000 $t
C:\Users\ADMIN\AppData\Local\Temp\ccLEaW5f.s:26     .text.mf_mount:00000000 mf_mount
C:\Users\ADMIN\AppData\Local\Temp\ccLEaW5f.s:57     .text.mf_mount:00000010 $d
C:\Users\ADMIN\AppData\Local\Temp\ccLEaW5f.s:62     .text.mf_open:00000000 $t
C:\Users\ADMIN\AppData\Local\Temp\ccLEaW5f.s:69     .text.mf_open:00000000 mf_open
C:\Users\ADMIN\AppData\Local\Temp\ccLEaW5f.s:101    .text.mf_open:00000010 $d
C:\Users\ADMIN\AppData\Local\Temp\ccLEaW5f.s:106    .text.mf_close:00000000 $t
C:\Users\ADMIN\AppData\Local\Temp\ccLEaW5f.s:113    .text.mf_close:00000000 mf_close
C:\Users\ADMIN\AppData\Local\Temp\ccLEaW5f.s:136    .text.mf_close:00000010 $d
C:\Users\ADMIN\AppData\Local\Temp\ccLEaW5f.s:141    .rodata.mf_read.str1.4:00000000 $d
C:\Users\ADMIN\AppData\Local\Temp\ccLEaW5f.s:157    .text.mf_read:00000000 $t
C:\Users\ADMIN\AppData\Local\Temp\ccLEaW5f.s:164    .text.mf_read:00000000 mf_read
C:\Users\ADMIN\AppData\Local\Temp\ccLEaW5f.s:374    .text.mf_read:000000c0 $d
C:\Users\ADMIN\AppData\Local\Temp\ccLEaW5f.s:386    .rodata.mf_write.str1.4:00000000 $d
C:\Users\ADMIN\AppData\Local\Temp\ccLEaW5f.s:402    .text.mf_write:00000000 $t
C:\Users\ADMIN\AppData\Local\Temp\ccLEaW5f.s:409    .text.mf_write:00000000 mf_write
C:\Users\ADMIN\AppData\Local\Temp\ccLEaW5f.s:481    .text.mf_write:00000044 $d
C:\Users\ADMIN\AppData\Local\Temp\ccLEaW5f.s:492    .text.mf_opendir:00000000 $t
C:\Users\ADMIN\AppData\Local\Temp\ccLEaW5f.s:499    .text.mf_opendir:00000000 mf_opendir
C:\Users\ADMIN\AppData\Local\Temp\ccLEaW5f.s:525    .text.mf_opendir:0000000c $d
C:\Users\ADMIN\AppData\Local\Temp\ccLEaW5f.s:530    .text.mf_closedir:00000000 $t
C:\Users\ADMIN\AppData\Local\Temp\ccLEaW5f.s:537    .text.mf_closedir:00000000 mf_closedir
C:\Users\ADMIN\AppData\Local\Temp\ccLEaW5f.s:558    .text.mf_closedir:0000000c $d
C:\Users\ADMIN\AppData\Local\Temp\ccLEaW5f.s:563    .rodata.mf_readdir.str1.4:00000000 $d
C:\Users\ADMIN\AppData\Local\Temp\ccLEaW5f.s:600    .text.mf_readdir:00000000 $t
C:\Users\ADMIN\AppData\Local\Temp\ccLEaW5f.s:607    .text.mf_readdir:00000000 mf_readdir
C:\Users\ADMIN\AppData\Local\Temp\ccLEaW5f.s:758    .text.mf_readdir:000000b0 $d
C:\Users\ADMIN\AppData\Local\Temp\ccLEaW5f.s:777    .rodata.mf_scan_files.str1.4:00000000 $d
C:\Users\ADMIN\AppData\Local\Temp\ccLEaW5f.s:784    .text.mf_scan_files:00000000 $t
C:\Users\ADMIN\AppData\Local\Temp\ccLEaW5f.s:791    .text.mf_scan_files:00000000 mf_scan_files
C:\Users\ADMIN\AppData\Local\Temp\ccLEaW5f.s:902    .text.mf_scan_files:0000006c $d
C:\Users\ADMIN\AppData\Local\Temp\ccLEaW5f.s:912    .rodata.mf_showfree.str1.4:00000000 $d
C:\Users\ADMIN\AppData\Local\Temp\ccLEaW5f.s:923    .text.mf_showfree:00000000 $t
C:\Users\ADMIN\AppData\Local\Temp\ccLEaW5f.s:930    .text.mf_showfree:00000000 mf_showfree
C:\Users\ADMIN\AppData\Local\Temp\ccLEaW5f.s:1026   .text.mf_showfree:0000004c $d
C:\Users\ADMIN\AppData\Local\Temp\ccLEaW5f.s:1032   .text.mf_lseek:00000000 $t
C:\Users\ADMIN\AppData\Local\Temp\ccLEaW5f.s:1039   .text.mf_lseek:00000000 mf_lseek
C:\Users\ADMIN\AppData\Local\Temp\ccLEaW5f.s:1066   .text.mf_lseek:00000010 $d
C:\Users\ADMIN\AppData\Local\Temp\ccLEaW5f.s:1071   .text.mf_tell:00000000 $t
C:\Users\ADMIN\AppData\Local\Temp\ccLEaW5f.s:1078   .text.mf_tell:00000000 mf_tell
C:\Users\ADMIN\AppData\Local\Temp\ccLEaW5f.s:1095   .text.mf_tell:00000008 $d
C:\Users\ADMIN\AppData\Local\Temp\ccLEaW5f.s:1100   .text.mf_size:00000000 $t
C:\Users\ADMIN\AppData\Local\Temp\ccLEaW5f.s:1107   .text.mf_size:00000000 mf_size
C:\Users\ADMIN\AppData\Local\Temp\ccLEaW5f.s:1124   .text.mf_size:00000008 $d
C:\Users\ADMIN\AppData\Local\Temp\ccLEaW5f.s:1129   .text.mf_mkdir:00000000 $t
C:\Users\ADMIN\AppData\Local\Temp\ccLEaW5f.s:1136   .text.mf_mkdir:00000000 mf_mkdir
C:\Users\ADMIN\AppData\Local\Temp\ccLEaW5f.s:1159   .text.mf_fmkfs:00000000 $t
C:\Users\ADMIN\AppData\Local\Temp\ccLEaW5f.s:1166   .text.mf_fmkfs:00000000 mf_fmkfs
C:\Users\ADMIN\AppData\Local\Temp\ccLEaW5f.s:1189   .text.mf_unlink:00000000 $t
C:\Users\ADMIN\AppData\Local\Temp\ccLEaW5f.s:1196   .text.mf_unlink:00000000 mf_unlink
C:\Users\ADMIN\AppData\Local\Temp\ccLEaW5f.s:1219   .text.mf_rename:00000000 $t
C:\Users\ADMIN\AppData\Local\Temp\ccLEaW5f.s:1226   .text.mf_rename:00000000 mf_rename
C:\Users\ADMIN\AppData\Local\Temp\ccLEaW5f.s:1249   .rodata.mf_getlabel.str1.4:00000000 $d
C:\Users\ADMIN\AppData\Local\Temp\ccLEaW5f.s:1262   .text.mf_getlabel:00000000 $t
C:\Users\ADMIN\AppData\Local\Temp\ccLEaW5f.s:1269   .text.mf_getlabel:00000000 mf_getlabel
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccLEaW5f.s 			page 38


C:\Users\ADMIN\AppData\Local\Temp\ccLEaW5f.s:1340   .text.mf_getlabel:00000038 $d
C:\Users\ADMIN\AppData\Local\Temp\ccLEaW5f.s:1347   .rodata.mf_setlabel.str1.4:00000000 $d
C:\Users\ADMIN\AppData\Local\Temp\ccLEaW5f.s:1357   .text.mf_setlabel:00000000 $t
C:\Users\ADMIN\AppData\Local\Temp\ccLEaW5f.s:1364   .text.mf_setlabel:00000000 mf_setlabel
C:\Users\ADMIN\AppData\Local\Temp\ccLEaW5f.s:1411   .text.mf_setlabel:00000020 $d
C:\Users\ADMIN\AppData\Local\Temp\ccLEaW5f.s:1417   .rodata.mf_gets.str1.4:00000000 $d
C:\Users\ADMIN\AppData\Local\Temp\ccLEaW5f.s:1421   .text.mf_gets:00000000 $t
C:\Users\ADMIN\AppData\Local\Temp\ccLEaW5f.s:1428   .text.mf_gets:00000000 mf_gets
C:\Users\ADMIN\AppData\Local\Temp\ccLEaW5f.s:1476   .text.mf_gets:00000020 $d
C:\Users\ADMIN\AppData\Local\Temp\ccLEaW5f.s:1483   .text.mf_putc:00000000 $t
C:\Users\ADMIN\AppData\Local\Temp\ccLEaW5f.s:1490   .text.mf_putc:00000000 mf_putc
C:\Users\ADMIN\AppData\Local\Temp\ccLEaW5f.s:1515   .text.mf_putc:00000010 $d
C:\Users\ADMIN\AppData\Local\Temp\ccLEaW5f.s:1520   .text.mf_puts:00000000 $t
C:\Users\ADMIN\AppData\Local\Temp\ccLEaW5f.s:1527   .text.mf_puts:00000000 mf_puts
C:\Users\ADMIN\AppData\Local\Temp\ccLEaW5f.s:1552   .text.mf_puts:00000010 $d

UNDEFINED SYMBOLS
f_mount
fs
f_open
file
f_close
puts
printf
putchar
f_read
fatbuf
br
f_write
bw
f_opendir
dir
f_closedir
mymalloc
f_readdir
myfree
fileinfo
f_getfree
f_lseek
f_mkdir
f_mkfs
f_unlink
f_rename
f_getlabel
f_setlabel
f_gets
f_putc
f_puts
