ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccUjJdUo.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"diskio.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.disk_initialize,"ax",%progbits
  18              		.align	1
  19              		.global	disk_initialize
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	disk_initialize:
  27              	.LVL0:
  28              	.LFB130:
  29              		.file 1 "Core/Src/diskio.c"
   1:Core/Src/diskio.c **** /*-----------------------------------------------------------------------*/
   2:Core/Src/diskio.c **** /* Low level disk I/O module skeleton for FatFs     (C)ChaN, 2013        */
   3:Core/Src/diskio.c **** /*-----------------------------------------------------------------------*/
   4:Core/Src/diskio.c **** /* If a working storage control module is available, it should be        */
   5:Core/Src/diskio.c **** /* attached to the FatFs via a glue function rather than modifying it.   */
   6:Core/Src/diskio.c **** /* This is an example of glue functions to attach various exsisting      */
   7:Core/Src/diskio.c **** /* storage control module to the FatFs module with a defined API.        */
   8:Core/Src/diskio.c **** /*-----------------------------------------------------------------------*/
   9:Core/Src/diskio.c **** 
  10:Core/Src/diskio.c **** #include "diskio.h"		/* FatFs lower layer API */
  11:Core/Src/diskio.c **** #include "sdio_sdcard.h"
  12:Core/Src/diskio.c **** #include "w25q64.h"
  13:Core/Src/diskio.c **** #include "malloc.h"		
  14:Core/Src/diskio.c **** 	 
  15:Core/Src/diskio.c **** 
  16:Core/Src/diskio.c **** #define SD_CARD	 0  //SD卡,卷标为0
  17:Core/Src/diskio.c **** #define EX_FLASH 1	//外部flash,卷标为1
  18:Core/Src/diskio.c **** 
  19:Core/Src/diskio.c **** #define FLASH_SECTOR_SIZE 	512			  
  20:Core/Src/diskio.c **** //对于W25Q64
  21:Core/Src/diskio.c **** //前10M字节给fatfs用,10M字节后,用于存放字库,字库占用3.09M.	14M字节以后,给客户自己用	 			    
  22:Core/Src/diskio.c **** u16	    FLASH_SECTOR_COUNT=2048*10;	//W25Q64,前10M字节给FATFS占用
  23:Core/Src/diskio.c **** #define FLASH_BLOCK_SIZE   	8     	//每个BLOCK有8个扇区
  24:Core/Src/diskio.c **** 
  25:Core/Src/diskio.c **** //初始化磁盘
  26:Core/Src/diskio.c **** DSTATUS disk_initialize (
  27:Core/Src/diskio.c **** 	BYTE pdrv				/* Physical drive nmuber (0..) */
  28:Core/Src/diskio.c **** )
  29:Core/Src/diskio.c **** {
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccUjJdUo.s 			page 2


  30              		.loc 1 29 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 29 1 is_stmt 0 view .LVU1
  35 0000 08B5     		push	{r3, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 8
  38              		.cfi_offset 3, -8
  39              		.cfi_offset 14, -4
  30:Core/Src/diskio.c **** 	u8 res=0;	    
  40              		.loc 1 30 2 is_stmt 1 view .LVU2
  41              	.LVL1:
  31:Core/Src/diskio.c **** 	switch(pdrv)
  42              		.loc 1 31 2 view .LVU3
  43 0002 18B1     		cbz	r0, .L2
  44 0004 0128     		cmp	r0, #1
  45 0006 06D0     		beq	.L3
  46              	.LVL2:
  47              	.L4:
  32:Core/Src/diskio.c **** 	{
  33:Core/Src/diskio.c **** 		case SD_CARD://SD卡
  34:Core/Src/diskio.c **** 			res = SD_Init();//SD_Init()  
  35:Core/Src/diskio.c ****   			break;
  36:Core/Src/diskio.c **** 		case EX_FLASH://外部flash
  37:Core/Src/diskio.c **** 			W25Q64_Init();
  38:Core/Src/diskio.c **** 			FLASH_SECTOR_COUNT=2048*10;//W25Q1218,前10M字节给FATFS占用 
  39:Core/Src/diskio.c ****  			break;
  40:Core/Src/diskio.c **** 		default:
  41:Core/Src/diskio.c **** 			res=1; 
  42:Core/Src/diskio.c **** 	}		 
  43:Core/Src/diskio.c **** 	if(res)return  STA_NOINIT;
  48              		.loc 1 43 9 discriminator 1 view .LVU4
  49              		.loc 1 43 17 is_stmt 0 discriminator 1 view .LVU5
  50 0008 0120     		movs	r0, #1
  51              	.L6:
  44:Core/Src/diskio.c **** 	else return 0; //初始化成功
  45:Core/Src/diskio.c **** }  
  52              		.loc 1 45 1 view .LVU6
  53 000a 08BD     		pop	{r3, pc}
  54              	.LVL3:
  55              	.L2:
  34:Core/Src/diskio.c ****   			break;
  56              		.loc 1 34 4 is_stmt 1 view .LVU7
  34:Core/Src/diskio.c ****   			break;
  57              		.loc 1 34 10 is_stmt 0 view .LVU8
  58 000c FFF7FEFF 		bl	SD_Init
  59              	.LVL4:
  35:Core/Src/diskio.c **** 		case EX_FLASH://外部flash
  60              		.loc 1 35 6 is_stmt 1 view .LVU9
  43:Core/Src/diskio.c **** 	else return 0; //初始化成功
  61              		.loc 1 43 2 view .LVU10
  43:Core/Src/diskio.c **** 	else return 0; //初始化成功
  62              		.loc 1 43 4 is_stmt 0 view .LVU11
  63 0010 0028     		cmp	r0, #0
  64 0012 F9D1     		bne	.L4
  65 0014 05E0     		b	.L5
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccUjJdUo.s 			page 3


  66              	.LVL5:
  67              	.L3:
  37:Core/Src/diskio.c **** 			FLASH_SECTOR_COUNT=2048*10;//W25Q1218,前10M字节给FATFS占用 
  68              		.loc 1 37 4 is_stmt 1 view .LVU12
  69 0016 FFF7FEFF 		bl	W25Q64_Init
  70              	.LVL6:
  38:Core/Src/diskio.c ****  			break;
  71              		.loc 1 38 4 view .LVU13
  38:Core/Src/diskio.c ****  			break;
  72              		.loc 1 38 22 is_stmt 0 view .LVU14
  73 001a 034B     		ldr	r3, .L8
  74 001c 4FF4A042 		mov	r2, #20480
  75 0020 1A80     		strh	r2, [r3]	@ movhi
  39:Core/Src/diskio.c **** 		default:
  76              		.loc 1 39 5 is_stmt 1 view .LVU15
  43:Core/Src/diskio.c **** 	else return 0; //初始化成功
  77              		.loc 1 43 2 view .LVU16
  78              	.LVL7:
  79              	.L5:
  44:Core/Src/diskio.c **** }  
  80              		.loc 1 44 7 view .LVU17
  44:Core/Src/diskio.c **** }  
  81              		.loc 1 44 14 is_stmt 0 view .LVU18
  82 0022 0020     		movs	r0, #0
  83 0024 F1E7     		b	.L6
  84              	.L9:
  85 0026 00BF     		.align	2
  86              	.L8:
  87 0028 00000000 		.word	.LANCHOR0
  88              		.cfi_endproc
  89              	.LFE130:
  91              		.section	.text.disk_status,"ax",%progbits
  92              		.align	1
  93              		.global	disk_status
  94              		.syntax unified
  95              		.thumb
  96              		.thumb_func
  97              		.fpu fpv4-sp-d16
  99              	disk_status:
 100              	.LVL8:
 101              	.LFB131:
  46:Core/Src/diskio.c **** 
  47:Core/Src/diskio.c **** //获得磁盘状态
  48:Core/Src/diskio.c **** DSTATUS disk_status (
  49:Core/Src/diskio.c **** 	BYTE pdrv		/* Physical drive nmuber (0..) */
  50:Core/Src/diskio.c **** )
  51:Core/Src/diskio.c **** { 
 102              		.loc 1 51 1 is_stmt 1 view -0
 103              		.cfi_startproc
 104              		@ args = 0, pretend = 0, frame = 0
 105              		@ frame_needed = 0, uses_anonymous_args = 0
 106              		@ link register save eliminated.
  52:Core/Src/diskio.c **** 	return 0;
 107              		.loc 1 52 2 view .LVU20
  53:Core/Src/diskio.c **** } 
 108              		.loc 1 53 1 is_stmt 0 view .LVU21
 109 0000 0020     		movs	r0, #0
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccUjJdUo.s 			page 4


 110              	.LVL9:
 111              		.loc 1 53 1 view .LVU22
 112 0002 7047     		bx	lr
 113              		.cfi_endproc
 114              	.LFE131:
 116              		.section	.text.disk_read,"ax",%progbits
 117              		.align	1
 118              		.global	disk_read
 119              		.syntax unified
 120              		.thumb
 121              		.thumb_func
 122              		.fpu fpv4-sp-d16
 124              	disk_read:
 125              	.LVL10:
 126              	.LFB132:
  54:Core/Src/diskio.c **** 
  55:Core/Src/diskio.c **** //读扇区
  56:Core/Src/diskio.c **** //drv:磁盘编号0~9
  57:Core/Src/diskio.c **** //*buff:数据接收缓冲首地址
  58:Core/Src/diskio.c **** //sector:扇区地址
  59:Core/Src/diskio.c **** //count:需要读取的扇区数
  60:Core/Src/diskio.c **** DRESULT disk_read (
  61:Core/Src/diskio.c **** 	BYTE pdrv,		/* Physical drive nmuber (0..) */
  62:Core/Src/diskio.c **** 	BYTE *buff,		/* Data buffer to store read data */
  63:Core/Src/diskio.c **** 	DWORD sector,	/* Sector address (LBA) */
  64:Core/Src/diskio.c **** 	UINT count		/* Number of sectors to read (1..128) */
  65:Core/Src/diskio.c **** )
  66:Core/Src/diskio.c **** {
 127              		.loc 1 66 1 is_stmt 1 view -0
 128              		.cfi_startproc
 129              		@ args = 0, pretend = 0, frame = 0
 130              		@ frame_needed = 0, uses_anonymous_args = 0
  67:Core/Src/diskio.c **** 	u8 res=0; 
 131              		.loc 1 67 2 view .LVU24
  68:Core/Src/diskio.c ****     if (!count)return RES_PARERR;//count不能等于0，否则返回参数错误		 	 
 132              		.loc 1 68 5 view .LVU25
 133              		.loc 1 68 8 is_stmt 0 view .LVU26
 134 0000 F3B1     		cbz	r3, .L18
  66:Core/Src/diskio.c **** 	u8 res=0; 
 135              		.loc 1 66 1 view .LVU27
 136 0002 70B5     		push	{r4, r5, r6, lr}
 137              	.LCFI1:
 138              		.cfi_def_cfa_offset 16
 139              		.cfi_offset 4, -16
 140              		.cfi_offset 5, -12
 141              		.cfi_offset 6, -8
 142              		.cfi_offset 14, -4
 143 0004 0C46     		mov	r4, r1
 144 0006 1546     		mov	r5, r2
 145 0008 1E46     		mov	r6, r3
  69:Core/Src/diskio.c **** 	switch(pdrv)
 146              		.loc 1 69 2 is_stmt 1 view .LVU28
 147 000a 18B1     		cbz	r0, .L13
 148 000c 0128     		cmp	r0, #1
 149 000e 13D0     		beq	.L14
 150              	.LVL11:
 151              	.L15:
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccUjJdUo.s 			page 5


  70:Core/Src/diskio.c **** 	{
  71:Core/Src/diskio.c **** 		case SD_CARD://SD卡
  72:Core/Src/diskio.c **** 			res=SD_ReadDisk(buff,sector,count);	  
  73:Core/Src/diskio.c **** 			break;
  74:Core/Src/diskio.c **** 		case EX_FLASH://外部flash
  75:Core/Src/diskio.c **** 			for(;count>0;count--)
  76:Core/Src/diskio.c **** 			{
  77:Core/Src/diskio.c **** 				W25Q64_Read(buff,sector*FLASH_SECTOR_SIZE,FLASH_SECTOR_SIZE);
  78:Core/Src/diskio.c **** 				sector++;
  79:Core/Src/diskio.c **** 				buff+=FLASH_SECTOR_SIZE;
  80:Core/Src/diskio.c **** 			}
  81:Core/Src/diskio.c **** 			res=0;
  82:Core/Src/diskio.c **** 			break;
  83:Core/Src/diskio.c **** 		default:
  84:Core/Src/diskio.c **** 			res=1; 
  85:Core/Src/diskio.c **** 	}
  86:Core/Src/diskio.c ****    //处理返回值，将SPI_SD_driver.c的返回值转成ff.c的返回值
  87:Core/Src/diskio.c ****     if(res==0x00)return RES_OK;	 
  88:Core/Src/diskio.c ****     else return RES_ERROR;	   
 152              		.loc 1 88 10 view .LVU29
 153              		.loc 1 88 17 is_stmt 0 view .LVU30
 154 0010 0120     		movs	r0, #1
 155              	.L12:
  89:Core/Src/diskio.c **** }
 156              		.loc 1 89 1 view .LVU31
 157 0012 70BD     		pop	{r4, r5, r6, pc}
 158              	.LVL12:
 159              	.L13:
  72:Core/Src/diskio.c **** 			break;
 160              		.loc 1 72 4 is_stmt 1 view .LVU32
  72:Core/Src/diskio.c **** 			break;
 161              		.loc 1 72 8 is_stmt 0 view .LVU33
 162 0014 DAB2     		uxtb	r2, r3
 163              	.LVL13:
  72:Core/Src/diskio.c **** 			break;
 164              		.loc 1 72 8 view .LVU34
 165 0016 2946     		mov	r1, r5
 166              	.LVL14:
  72:Core/Src/diskio.c **** 			break;
 167              		.loc 1 72 8 view .LVU35
 168 0018 2046     		mov	r0, r4
 169              	.LVL15:
  72:Core/Src/diskio.c **** 			break;
 170              		.loc 1 72 8 view .LVU36
 171 001a FFF7FEFF 		bl	SD_ReadDisk
 172              	.LVL16:
  73:Core/Src/diskio.c **** 		case EX_FLASH://外部flash
 173              		.loc 1 73 4 is_stmt 1 view .LVU37
 174              	.L16:
  87:Core/Src/diskio.c ****     else return RES_ERROR;	   
 175              		.loc 1 87 5 view .LVU38
  87:Core/Src/diskio.c ****     else return RES_ERROR;	   
 176              		.loc 1 87 7 is_stmt 0 view .LVU39
 177 001e 0028     		cmp	r0, #0
 178 0020 F7D0     		beq	.L12
 179 0022 F5E7     		b	.L15
 180              	.LVL17:
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccUjJdUo.s 			page 6


 181              	.L17:
  77:Core/Src/diskio.c **** 				sector++;
 182              		.loc 1 77 5 is_stmt 1 discriminator 2 view .LVU40
 183 0024 4FF40072 		mov	r2, #512
 184 0028 6902     		lsls	r1, r5, #9
 185 002a 2046     		mov	r0, r4
 186 002c FFF7FEFF 		bl	W25Q64_Read
 187              	.LVL18:
  78:Core/Src/diskio.c **** 				buff+=FLASH_SECTOR_SIZE;
 188              		.loc 1 78 5 discriminator 2 view .LVU41
  78:Core/Src/diskio.c **** 				buff+=FLASH_SECTOR_SIZE;
 189              		.loc 1 78 11 is_stmt 0 discriminator 2 view .LVU42
 190 0030 0135     		adds	r5, r5, #1
 191              	.LVL19:
  79:Core/Src/diskio.c **** 			}
 192              		.loc 1 79 5 is_stmt 1 discriminator 2 view .LVU43
  79:Core/Src/diskio.c **** 			}
 193              		.loc 1 79 9 is_stmt 0 discriminator 2 view .LVU44
 194 0032 04F50074 		add	r4, r4, #512
 195              	.LVL20:
  75:Core/Src/diskio.c **** 			{
 196              		.loc 1 75 17 is_stmt 1 discriminator 2 view .LVU45
  75:Core/Src/diskio.c **** 			{
 197              		.loc 1 75 22 is_stmt 0 discriminator 2 view .LVU46
 198 0036 013E     		subs	r6, r6, #1
 199              	.LVL21:
 200              	.L14:
  75:Core/Src/diskio.c **** 			{
 201              		.loc 1 75 9 is_stmt 1 discriminator 1 view .LVU47
  75:Core/Src/diskio.c **** 			{
 202              		.loc 1 75 4 is_stmt 0 discriminator 1 view .LVU48
 203 0038 002E     		cmp	r6, #0
 204 003a F3D1     		bne	.L17
  81:Core/Src/diskio.c **** 			break;
 205              		.loc 1 81 7 view .LVU49
 206 003c 0020     		movs	r0, #0
 207 003e EEE7     		b	.L16
 208              	.LVL22:
 209              	.L18:
 210              	.LCFI2:
 211              		.cfi_def_cfa_offset 0
 212              		.cfi_restore 4
 213              		.cfi_restore 5
 214              		.cfi_restore 6
 215              		.cfi_restore 14
  68:Core/Src/diskio.c **** 	switch(pdrv)
 216              		.loc 1 68 23 view .LVU50
 217 0040 0420     		movs	r0, #4
 218              	.LVL23:
 219              		.loc 1 89 1 view .LVU51
 220 0042 7047     		bx	lr
 221              		.cfi_endproc
 222              	.LFE132:
 224              		.section	.text.disk_write,"ax",%progbits
 225              		.align	1
 226              		.global	disk_write
 227              		.syntax unified
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccUjJdUo.s 			page 7


 228              		.thumb
 229              		.thumb_func
 230              		.fpu fpv4-sp-d16
 232              	disk_write:
 233              	.LVL24:
 234              	.LFB133:
  90:Core/Src/diskio.c **** 
  91:Core/Src/diskio.c **** //写扇区
  92:Core/Src/diskio.c **** //drv:磁盘编号0~9
  93:Core/Src/diskio.c **** //*buff:发送数据首地址
  94:Core/Src/diskio.c **** //sector:扇区地址
  95:Core/Src/diskio.c **** //count:需要写入的扇区数
  96:Core/Src/diskio.c **** #if _USE_WRITE
  97:Core/Src/diskio.c **** DRESULT disk_write (
  98:Core/Src/diskio.c **** 	BYTE pdrv,			/* Physical drive nmuber (0..) */
  99:Core/Src/diskio.c **** 	const BYTE *buff,	/* Data to be written */
 100:Core/Src/diskio.c **** 	DWORD sector,		/* Sector address (LBA) */
 101:Core/Src/diskio.c **** 	UINT count			/* Number of sectors to write (1..128) */
 102:Core/Src/diskio.c **** )
 103:Core/Src/diskio.c **** {
 235              		.loc 1 103 1 is_stmt 1 view -0
 236              		.cfi_startproc
 237              		@ args = 0, pretend = 0, frame = 0
 238              		@ frame_needed = 0, uses_anonymous_args = 0
 104:Core/Src/diskio.c **** 	u8 res=0;  
 239              		.loc 1 104 2 view .LVU53
 105:Core/Src/diskio.c ****     if (!count)return RES_PARERR;//count不能等于0，否则返回参数错误		 	 
 240              		.loc 1 105 5 view .LVU54
 241              		.loc 1 105 8 is_stmt 0 view .LVU55
 242 0000 F3B1     		cbz	r3, .L30
 103:Core/Src/diskio.c **** 	u8 res=0;  
 243              		.loc 1 103 1 view .LVU56
 244 0002 70B5     		push	{r4, r5, r6, lr}
 245              	.LCFI3:
 246              		.cfi_def_cfa_offset 16
 247              		.cfi_offset 4, -16
 248              		.cfi_offset 5, -12
 249              		.cfi_offset 6, -8
 250              		.cfi_offset 14, -4
 251 0004 0C46     		mov	r4, r1
 252 0006 1546     		mov	r5, r2
 253 0008 1E46     		mov	r6, r3
 106:Core/Src/diskio.c **** 	switch(pdrv)
 254              		.loc 1 106 2 is_stmt 1 view .LVU57
 255 000a 18B1     		cbz	r0, .L25
 256 000c 0128     		cmp	r0, #1
 257 000e 13D0     		beq	.L26
 258              	.LVL25:
 259              	.L27:
 107:Core/Src/diskio.c **** 	{
 108:Core/Src/diskio.c **** 		case SD_CARD://SD卡
 109:Core/Src/diskio.c **** 			res=SD_WriteDisk((u8*)buff,sector,count);
 110:Core/Src/diskio.c **** 			break;
 111:Core/Src/diskio.c **** 		case EX_FLASH://外部flash
 112:Core/Src/diskio.c **** 			for(;count>0;count--)
 113:Core/Src/diskio.c **** 			{										    
 114:Core/Src/diskio.c **** 				W25Q64_Write((u8*)buff,sector*FLASH_SECTOR_SIZE,FLASH_SECTOR_SIZE);
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccUjJdUo.s 			page 8


 115:Core/Src/diskio.c **** 				sector++;
 116:Core/Src/diskio.c **** 				buff+=FLASH_SECTOR_SIZE;
 117:Core/Src/diskio.c **** 			}
 118:Core/Src/diskio.c **** 			res=0;
 119:Core/Src/diskio.c **** 			break;
 120:Core/Src/diskio.c **** 		default:
 121:Core/Src/diskio.c **** 			res=1; 
 122:Core/Src/diskio.c **** 	}
 123:Core/Src/diskio.c ****     //处理返回值，将SPI_SD_driver.c的返回值转成ff.c的返回值
 124:Core/Src/diskio.c ****     if(res == 0x00)return RES_OK;	 
 125:Core/Src/diskio.c ****     else return RES_ERROR;	
 260              		.loc 1 125 10 view .LVU58
 261              		.loc 1 125 17 is_stmt 0 view .LVU59
 262 0010 0120     		movs	r0, #1
 263              	.L24:
 126:Core/Src/diskio.c **** }
 264              		.loc 1 126 1 view .LVU60
 265 0012 70BD     		pop	{r4, r5, r6, pc}
 266              	.LVL26:
 267              	.L25:
 109:Core/Src/diskio.c **** 			break;
 268              		.loc 1 109 4 is_stmt 1 view .LVU61
 109:Core/Src/diskio.c **** 			break;
 269              		.loc 1 109 8 is_stmt 0 view .LVU62
 270 0014 DAB2     		uxtb	r2, r3
 271              	.LVL27:
 109:Core/Src/diskio.c **** 			break;
 272              		.loc 1 109 8 view .LVU63
 273 0016 2946     		mov	r1, r5
 274              	.LVL28:
 109:Core/Src/diskio.c **** 			break;
 275              		.loc 1 109 8 view .LVU64
 276 0018 2046     		mov	r0, r4
 277              	.LVL29:
 109:Core/Src/diskio.c **** 			break;
 278              		.loc 1 109 8 view .LVU65
 279 001a FFF7FEFF 		bl	SD_WriteDisk
 280              	.LVL30:
 110:Core/Src/diskio.c **** 		case EX_FLASH://外部flash
 281              		.loc 1 110 4 is_stmt 1 view .LVU66
 282              	.L28:
 124:Core/Src/diskio.c ****     else return RES_ERROR;	
 283              		.loc 1 124 5 view .LVU67
 124:Core/Src/diskio.c ****     else return RES_ERROR;	
 284              		.loc 1 124 7 is_stmt 0 view .LVU68
 285 001e 0028     		cmp	r0, #0
 286 0020 F7D0     		beq	.L24
 287 0022 F5E7     		b	.L27
 288              	.LVL31:
 289              	.L29:
 114:Core/Src/diskio.c **** 				sector++;
 290              		.loc 1 114 5 is_stmt 1 discriminator 2 view .LVU69
 291 0024 4FF40072 		mov	r2, #512
 292 0028 6902     		lsls	r1, r5, #9
 293 002a 2046     		mov	r0, r4
 294 002c FFF7FEFF 		bl	W25Q64_Write
 295              	.LVL32:
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccUjJdUo.s 			page 9


 115:Core/Src/diskio.c **** 				buff+=FLASH_SECTOR_SIZE;
 296              		.loc 1 115 5 discriminator 2 view .LVU70
 115:Core/Src/diskio.c **** 				buff+=FLASH_SECTOR_SIZE;
 297              		.loc 1 115 11 is_stmt 0 discriminator 2 view .LVU71
 298 0030 0135     		adds	r5, r5, #1
 299              	.LVL33:
 116:Core/Src/diskio.c **** 			}
 300              		.loc 1 116 5 is_stmt 1 discriminator 2 view .LVU72
 116:Core/Src/diskio.c **** 			}
 301              		.loc 1 116 9 is_stmt 0 discriminator 2 view .LVU73
 302 0032 04F50074 		add	r4, r4, #512
 303              	.LVL34:
 112:Core/Src/diskio.c **** 			{										    
 304              		.loc 1 112 17 is_stmt 1 discriminator 2 view .LVU74
 112:Core/Src/diskio.c **** 			{										    
 305              		.loc 1 112 22 is_stmt 0 discriminator 2 view .LVU75
 306 0036 013E     		subs	r6, r6, #1
 307              	.LVL35:
 308              	.L26:
 112:Core/Src/diskio.c **** 			{										    
 309              		.loc 1 112 9 is_stmt 1 discriminator 1 view .LVU76
 112:Core/Src/diskio.c **** 			{										    
 310              		.loc 1 112 4 is_stmt 0 discriminator 1 view .LVU77
 311 0038 002E     		cmp	r6, #0
 312 003a F3D1     		bne	.L29
 118:Core/Src/diskio.c **** 			break;
 313              		.loc 1 118 7 view .LVU78
 314 003c 0020     		movs	r0, #0
 315 003e EEE7     		b	.L28
 316              	.LVL36:
 317              	.L30:
 318              	.LCFI4:
 319              		.cfi_def_cfa_offset 0
 320              		.cfi_restore 4
 321              		.cfi_restore 5
 322              		.cfi_restore 6
 323              		.cfi_restore 14
 105:Core/Src/diskio.c **** 	switch(pdrv)
 324              		.loc 1 105 23 view .LVU79
 325 0040 0420     		movs	r0, #4
 326              	.LVL37:
 327              		.loc 1 126 1 view .LVU80
 328 0042 7047     		bx	lr
 329              		.cfi_endproc
 330              	.LFE133:
 332              		.section	.text.disk_ioctl,"ax",%progbits
 333              		.align	1
 334              		.global	disk_ioctl
 335              		.syntax unified
 336              		.thumb
 337              		.thumb_func
 338              		.fpu fpv4-sp-d16
 340              	disk_ioctl:
 341              	.LVL38:
 342              	.LFB134:
 127:Core/Src/diskio.c **** #endif
 128:Core/Src/diskio.c **** 
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccUjJdUo.s 			page 10


 129:Core/Src/diskio.c **** 
 130:Core/Src/diskio.c **** //其他表参数的获得
 131:Core/Src/diskio.c ****  //drv:磁盘编号0~9
 132:Core/Src/diskio.c ****  //ctrl:控制代码
 133:Core/Src/diskio.c ****  //*buff:发送/接收缓冲区指针
 134:Core/Src/diskio.c **** #if _USE_IOCTL
 135:Core/Src/diskio.c **** DRESULT disk_ioctl (
 136:Core/Src/diskio.c **** 	BYTE pdrv,		/* Physical drive nmuber (0..) */
 137:Core/Src/diskio.c **** 	BYTE cmd,		/* Control code */
 138:Core/Src/diskio.c **** 	void *buff		/* Buffer to send/receive control data */
 139:Core/Src/diskio.c **** )
 140:Core/Src/diskio.c **** {
 343              		.loc 1 140 1 is_stmt 1 view -0
 344              		.cfi_startproc
 345              		@ args = 0, pretend = 0, frame = 0
 346              		@ frame_needed = 0, uses_anonymous_args = 0
 347              		@ link register save eliminated.
 141:Core/Src/diskio.c **** 	DRESULT res;						  			     
 348              		.loc 1 141 2 view .LVU82
 142:Core/Src/diskio.c **** 	if(pdrv==SD_CARD)//SD卡
 349              		.loc 1 142 2 view .LVU83
 350              		.loc 1 142 4 is_stmt 0 view .LVU84
 351 0000 0346     		mov	r3, r0
 352 0002 20BB     		cbnz	r0, .L36
 143:Core/Src/diskio.c **** 	{
 144:Core/Src/diskio.c **** 	    switch(cmd)
 353              		.loc 1 144 6 is_stmt 1 view .LVU85
 354 0004 0329     		cmp	r1, #3
 355 0006 3CD8     		bhi	.L49
 356 0008 DFE801F0 		tbb	[pc, r1]
 357              	.LVL39:
 358              	.L39:
 359 000c 02       		.byte	(.L42-.L39)/2
 360 000d 0E       		.byte	(.L41-.L39)/2
 361 000e 04       		.byte	(.L40-.L39)/2
 362 000f 09       		.byte	(.L38-.L39)/2
 363              		.p2align 1
 364              	.L42:
 142:Core/Src/diskio.c **** 	if(pdrv==SD_CARD)//SD卡
 365              		.loc 1 142 4 is_stmt 0 view .LVU86
 366 0010 0846     		mov	r0, r1
 367 0012 7047     		bx	lr
 368              	.L40:
 145:Core/Src/diskio.c **** 	    {
 146:Core/Src/diskio.c **** 		    case CTRL_SYNC:
 147:Core/Src/diskio.c **** 				res = RES_OK; 
 148:Core/Src/diskio.c **** 		        break;	 
 149:Core/Src/diskio.c **** 		    case GET_SECTOR_SIZE:
 150:Core/Src/diskio.c **** 				*(DWORD*)buff = 512; 
 369              		.loc 1 150 5 is_stmt 1 view .LVU87
 370              		.loc 1 150 19 is_stmt 0 view .LVU88
 371 0014 4FF40071 		mov	r1, #512
 372              	.LVL40:
 373              		.loc 1 150 19 view .LVU89
 374 0018 1160     		str	r1, [r2]
 151:Core/Src/diskio.c **** 		        res = RES_OK;
 375              		.loc 1 151 11 is_stmt 1 view .LVU90
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccUjJdUo.s 			page 11


 376              	.LVL41:
 152:Core/Src/diskio.c **** 		        break;	 
 377              		.loc 1 152 11 view .LVU91
 151:Core/Src/diskio.c **** 		        res = RES_OK;
 378              		.loc 1 151 15 is_stmt 0 view .LVU92
 379 001a 1846     		mov	r0, r3
 380              		.loc 1 152 11 view .LVU93
 381 001c 7047     		bx	lr
 382              	.LVL42:
 383              	.L38:
 153:Core/Src/diskio.c **** 		    case GET_BLOCK_SIZE:
 154:Core/Src/diskio.c **** 				*(WORD*)buff = SDCardInfo.CardBlockSize;
 384              		.loc 1 154 5 is_stmt 1 view .LVU94
 385              		.loc 1 154 30 is_stmt 0 view .LVU95
 386 001e 1B49     		ldr	r1, .L54
 387              	.LVL43:
 388              		.loc 1 154 30 view .LVU96
 389 0020 096D     		ldr	r1, [r1, #80]
 390              		.loc 1 154 18 view .LVU97
 391 0022 1180     		strh	r1, [r2]	@ movhi
 155:Core/Src/diskio.c **** 		        res = RES_OK;
 392              		.loc 1 155 11 is_stmt 1 view .LVU98
 393              	.LVL44:
 156:Core/Src/diskio.c **** 		        break;	 
 394              		.loc 1 156 11 view .LVU99
 155:Core/Src/diskio.c **** 		        res = RES_OK;
 395              		.loc 1 155 15 is_stmt 0 view .LVU100
 396 0024 1846     		mov	r0, r3
 397              		.loc 1 156 11 view .LVU101
 398 0026 7047     		bx	lr
 399              	.LVL45:
 400              	.L41:
 157:Core/Src/diskio.c **** 		    case GET_SECTOR_COUNT:
 158:Core/Src/diskio.c **** 		        *(DWORD*)buff = SDCardInfo.CardCapacity/512;
 401              		.loc 1 158 11 is_stmt 1 view .LVU102
 402              		.loc 1 158 37 is_stmt 0 view .LVU103
 403 0028 1848     		ldr	r0, .L54
 404 002a 816C     		ldr	r1, [r0, #72]
 405              	.LVL46:
 406              		.loc 1 158 37 view .LVU104
 407 002c C06C     		ldr	r0, [r0, #76]
 408              		.loc 1 158 50 view .LVU105
 409 002e 8446     		mov	ip, r0
 410 0030 0028     		cmp	r0, #0
 411 0032 05DB     		blt	.L52
 412              	.L43:
 413 0034 490A     		lsrs	r1, r1, #9
 414 0036 41EACC51 		orr	r1, r1, ip, lsl #23
 415              		.loc 1 158 25 view .LVU106
 416 003a 1160     		str	r1, [r2]
 159:Core/Src/diskio.c **** 		        res = RES_OK;
 417              		.loc 1 159 11 is_stmt 1 view .LVU107
 418              	.LVL47:
 160:Core/Src/diskio.c **** 		        break;
 419              		.loc 1 160 11 view .LVU108
 159:Core/Src/diskio.c **** 		        res = RES_OK;
 420              		.loc 1 159 15 is_stmt 0 view .LVU109
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccUjJdUo.s 			page 12


 421 003c 1846     		mov	r0, r3
 422              		.loc 1 160 11 view .LVU110
 423 003e 7047     		bx	lr
 424              	.LVL48:
 425              	.L52:
 158:Core/Src/diskio.c **** 		        res = RES_OK;
 426              		.loc 1 158 50 view .LVU111
 427 0040 40F2FF1C 		movw	ip, #511
 428 0044 11EB0C01 		adds	r1, r1, ip
 429 0048 40F1000C 		adc	ip, r0, #0
 430 004c F2E7     		b	.L43
 431              	.LVL49:
 432              	.L36:
 161:Core/Src/diskio.c **** 		    default:
 162:Core/Src/diskio.c **** 		        res = RES_PARERR;
 163:Core/Src/diskio.c **** 		        break;
 164:Core/Src/diskio.c **** 	    }
 165:Core/Src/diskio.c **** 	}else if(pdrv==EX_FLASH)	//外部FLASH  
 433              		.loc 1 165 8 is_stmt 1 view .LVU112
 434              		.loc 1 165 10 is_stmt 0 view .LVU113
 435 004e 0128     		cmp	r0, #1
 436 0050 01D0     		beq	.L53
 166:Core/Src/diskio.c **** 	{
 167:Core/Src/diskio.c **** 	    switch(cmd)
 168:Core/Src/diskio.c **** 	    {
 169:Core/Src/diskio.c **** 		    case CTRL_SYNC:
 170:Core/Src/diskio.c **** 				res = RES_OK; 
 171:Core/Src/diskio.c **** 		        break;	 
 172:Core/Src/diskio.c **** 		    case GET_SECTOR_SIZE:
 173:Core/Src/diskio.c **** 		        *(WORD*)buff = FLASH_SECTOR_SIZE;
 174:Core/Src/diskio.c **** 		        res = RES_OK;
 175:Core/Src/diskio.c **** 		        break;	 
 176:Core/Src/diskio.c **** 		    case GET_BLOCK_SIZE:
 177:Core/Src/diskio.c **** 		        *(WORD*)buff = FLASH_BLOCK_SIZE;
 178:Core/Src/diskio.c **** 		        res = RES_OK;
 179:Core/Src/diskio.c **** 		        break;	 
 180:Core/Src/diskio.c **** 		    case GET_SECTOR_COUNT:
 181:Core/Src/diskio.c **** 		        *(DWORD*)buff = FLASH_SECTOR_COUNT;
 182:Core/Src/diskio.c **** 		        res = RES_OK;
 183:Core/Src/diskio.c **** 		        break;
 184:Core/Src/diskio.c **** 		    default:
 185:Core/Src/diskio.c **** 		        res = RES_PARERR;
 186:Core/Src/diskio.c **** 		        break;
 187:Core/Src/diskio.c **** 	    }
 188:Core/Src/diskio.c **** 	}else res=RES_ERROR;//其他的不支持
 437              		.loc 1 188 11 view .LVU114
 438 0052 0120     		movs	r0, #1
 439              	.LVL50:
 440              		.loc 1 188 11 view .LVU115
 441 0054 7047     		bx	lr
 442              	.LVL51:
 443              	.L53:
 167:Core/Src/diskio.c **** 	    {
 444              		.loc 1 167 6 is_stmt 1 view .LVU116
 445 0056 0329     		cmp	r1, #3
 446 0058 15D8     		bhi	.L51
 447 005a DFE801F0 		tbb	[pc, r1]
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccUjJdUo.s 			page 13


 448              	.L45:
 449 005e 02       		.byte	(.L48-.L45)/2
 450 005f 0D       		.byte	(.L47-.L45)/2
 451 0060 04       		.byte	(.L46-.L45)/2
 452 0061 09       		.byte	(.L44-.L45)/2
 453              		.p2align 1
 454              	.L48:
 165:Core/Src/diskio.c **** 	{
 455              		.loc 1 165 10 is_stmt 0 view .LVU117
 456 0062 0846     		mov	r0, r1
 457              	.LVL52:
 165:Core/Src/diskio.c **** 	{
 458              		.loc 1 165 10 view .LVU118
 459 0064 7047     		bx	lr
 460              	.LVL53:
 461              	.L46:
 173:Core/Src/diskio.c **** 		        res = RES_OK;
 462              		.loc 1 173 11 is_stmt 1 view .LVU119
 173:Core/Src/diskio.c **** 		        res = RES_OK;
 463              		.loc 1 173 24 is_stmt 0 view .LVU120
 464 0066 4FF40073 		mov	r3, #512
 465 006a 1380     		strh	r3, [r2]	@ movhi
 174:Core/Src/diskio.c **** 		        break;	 
 466              		.loc 1 174 11 is_stmt 1 view .LVU121
 467              	.LVL54:
 175:Core/Src/diskio.c **** 		    case GET_BLOCK_SIZE:
 468              		.loc 1 175 11 view .LVU122
 174:Core/Src/diskio.c **** 		        break;	 
 469              		.loc 1 174 15 is_stmt 0 view .LVU123
 470 006c 0020     		movs	r0, #0
 471              	.LVL55:
 175:Core/Src/diskio.c **** 		    case GET_BLOCK_SIZE:
 472              		.loc 1 175 11 view .LVU124
 473 006e 7047     		bx	lr
 474              	.LVL56:
 475              	.L44:
 177:Core/Src/diskio.c **** 		        res = RES_OK;
 476              		.loc 1 177 11 is_stmt 1 view .LVU125
 177:Core/Src/diskio.c **** 		        res = RES_OK;
 477              		.loc 1 177 24 is_stmt 0 view .LVU126
 478 0070 0823     		movs	r3, #8
 479 0072 1380     		strh	r3, [r2]	@ movhi
 178:Core/Src/diskio.c **** 		        break;	 
 480              		.loc 1 178 11 is_stmt 1 view .LVU127
 481              	.LVL57:
 179:Core/Src/diskio.c **** 		    case GET_SECTOR_COUNT:
 482              		.loc 1 179 11 view .LVU128
 178:Core/Src/diskio.c **** 		        break;	 
 483              		.loc 1 178 15 is_stmt 0 view .LVU129
 484 0074 0020     		movs	r0, #0
 485              	.LVL58:
 179:Core/Src/diskio.c **** 		    case GET_SECTOR_COUNT:
 486              		.loc 1 179 11 view .LVU130
 487 0076 7047     		bx	lr
 488              	.LVL59:
 489              	.L47:
 181:Core/Src/diskio.c **** 		        res = RES_OK;
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccUjJdUo.s 			page 14


 490              		.loc 1 181 11 is_stmt 1 view .LVU131
 181:Core/Src/diskio.c **** 		        res = RES_OK;
 491              		.loc 1 181 25 is_stmt 0 view .LVU132
 492 0078 054B     		ldr	r3, .L54+4
 493 007a 1B88     		ldrh	r3, [r3]
 494 007c 1360     		str	r3, [r2]
 182:Core/Src/diskio.c **** 		        break;
 495              		.loc 1 182 11 is_stmt 1 view .LVU133
 496              	.LVL60:
 183:Core/Src/diskio.c **** 		    default:
 497              		.loc 1 183 11 view .LVU134
 182:Core/Src/diskio.c **** 		        break;
 498              		.loc 1 182 15 is_stmt 0 view .LVU135
 499 007e 0020     		movs	r0, #0
 500              	.LVL61:
 183:Core/Src/diskio.c **** 		    default:
 501              		.loc 1 183 11 view .LVU136
 502 0080 7047     		bx	lr
 503              	.LVL62:
 504              	.L49:
 162:Core/Src/diskio.c **** 		        break;
 505              		.loc 1 162 15 view .LVU137
 506 0082 0420     		movs	r0, #4
 507 0084 7047     		bx	lr
 508              	.LVL63:
 509              	.L51:
 185:Core/Src/diskio.c **** 		        break;
 510              		.loc 1 185 15 view .LVU138
 511 0086 0420     		movs	r0, #4
 512              	.LVL64:
 189:Core/Src/diskio.c ****     return res;
 513              		.loc 1 189 5 is_stmt 1 view .LVU139
 190:Core/Src/diskio.c **** }
 514              		.loc 1 190 1 is_stmt 0 view .LVU140
 515 0088 7047     		bx	lr
 516              	.L55:
 517 008a 00BF     		.align	2
 518              	.L54:
 519 008c 00000000 		.word	SDCardInfo
 520 0090 00000000 		.word	.LANCHOR0
 521              		.cfi_endproc
 522              	.LFE134:
 524              		.section	.text.get_fattime,"ax",%progbits
 525              		.align	1
 526              		.global	get_fattime
 527              		.syntax unified
 528              		.thumb
 529              		.thumb_func
 530              		.fpu fpv4-sp-d16
 532              	get_fattime:
 533              	.LFB135:
 191:Core/Src/diskio.c **** #endif
 192:Core/Src/diskio.c **** //获得时间
 193:Core/Src/diskio.c **** //User defined function to give a current time to fatfs module      */
 194:Core/Src/diskio.c **** //31-25: Year(0-127 org.1980), 24-21: Month(1-12), 20-16: Day(1-31) */                             
 195:Core/Src/diskio.c **** //15-11: Hour(0-23), 10-5: Minute(0-59), 4-0: Second(0-29 *2) */                                   
 196:Core/Src/diskio.c **** DWORD get_fattime (void)
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccUjJdUo.s 			page 15


 197:Core/Src/diskio.c **** {				 
 534              		.loc 1 197 1 is_stmt 1 view -0
 535              		.cfi_startproc
 536              		@ args = 0, pretend = 0, frame = 0
 537              		@ frame_needed = 0, uses_anonymous_args = 0
 538              		@ link register save eliminated.
 198:Core/Src/diskio.c **** 	return 0;
 539              		.loc 1 198 2 view .LVU142
 199:Core/Src/diskio.c **** }			 
 540              		.loc 1 199 1 is_stmt 0 view .LVU143
 541 0000 0020     		movs	r0, #0
 542 0002 7047     		bx	lr
 543              		.cfi_endproc
 544              	.LFE135:
 546              		.section	.text.ff_memalloc,"ax",%progbits
 547              		.align	1
 548              		.global	ff_memalloc
 549              		.syntax unified
 550              		.thumb
 551              		.thumb_func
 552              		.fpu fpv4-sp-d16
 554              	ff_memalloc:
 555              	.LVL65:
 556              	.LFB136:
 200:Core/Src/diskio.c **** //动态分配内存
 201:Core/Src/diskio.c **** void *ff_memalloc (UINT size)			
 202:Core/Src/diskio.c **** {
 557              		.loc 1 202 1 is_stmt 1 view -0
 558              		.cfi_startproc
 559              		@ args = 0, pretend = 0, frame = 0
 560              		@ frame_needed = 0, uses_anonymous_args = 0
 561              		.loc 1 202 1 is_stmt 0 view .LVU145
 562 0000 08B5     		push	{r3, lr}
 563              	.LCFI5:
 564              		.cfi_def_cfa_offset 8
 565              		.cfi_offset 3, -8
 566              		.cfi_offset 14, -4
 567 0002 0146     		mov	r1, r0
 203:Core/Src/diskio.c **** 	return (void*)mymalloc(SRAMIN,size);
 568              		.loc 1 203 2 is_stmt 1 view .LVU146
 569              		.loc 1 203 9 is_stmt 0 view .LVU147
 570 0004 0020     		movs	r0, #0
 571              	.LVL66:
 572              		.loc 1 203 9 view .LVU148
 573 0006 FFF7FEFF 		bl	mymalloc
 574              	.LVL67:
 204:Core/Src/diskio.c **** }
 575              		.loc 1 204 1 view .LVU149
 576 000a 08BD     		pop	{r3, pc}
 577              		.cfi_endproc
 578              	.LFE136:
 580              		.section	.text.ff_memfree,"ax",%progbits
 581              		.align	1
 582              		.global	ff_memfree
 583              		.syntax unified
 584              		.thumb
 585              		.thumb_func
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccUjJdUo.s 			page 16


 586              		.fpu fpv4-sp-d16
 588              	ff_memfree:
 589              	.LVL68:
 590              	.LFB137:
 205:Core/Src/diskio.c **** //释放内存
 206:Core/Src/diskio.c **** void ff_memfree (void* mf)		 
 207:Core/Src/diskio.c **** {
 591              		.loc 1 207 1 is_stmt 1 view -0
 592              		.cfi_startproc
 593              		@ args = 0, pretend = 0, frame = 0
 594              		@ frame_needed = 0, uses_anonymous_args = 0
 595              		.loc 1 207 1 is_stmt 0 view .LVU151
 596 0000 08B5     		push	{r3, lr}
 597              	.LCFI6:
 598              		.cfi_def_cfa_offset 8
 599              		.cfi_offset 3, -8
 600              		.cfi_offset 14, -4
 601 0002 0146     		mov	r1, r0
 208:Core/Src/diskio.c **** 	myfree(SRAMIN,mf);
 602              		.loc 1 208 2 is_stmt 1 view .LVU152
 603 0004 0020     		movs	r0, #0
 604              	.LVL69:
 605              		.loc 1 208 2 is_stmt 0 view .LVU153
 606 0006 FFF7FEFF 		bl	myfree
 607              	.LVL70:
 209:Core/Src/diskio.c **** }
 608              		.loc 1 209 1 view .LVU154
 609 000a 08BD     		pop	{r3, pc}
 610              		.cfi_endproc
 611              	.LFE137:
 613              		.global	FLASH_SECTOR_COUNT
 614              		.section	.data.FLASH_SECTOR_COUNT,"aw"
 615              		.align	1
 616              		.set	.LANCHOR0,. + 0
 619              	FLASH_SECTOR_COUNT:
 620 0000 0050     		.short	20480
 621              		.text
 622              	.Letext0:
 623              		.file 2 "Core/Inc/integer.h"
 624              		.file 3 "Core/Inc/diskio.h"
 625              		.file 4 "d:\\install\\gnu arm embedded toolchain\\10 2020-q4-major\\arm-none-eabi\\include\\machin
 626              		.file 5 "d:\\install\\gnu arm embedded toolchain\\10 2020-q4-major\\arm-none-eabi\\include\\sys\\_
 627              		.file 6 "Core/Inc/stm32f4xx.h"
 628              		.file 7 "Core/Inc/sdio_sdcard.h"
 629              		.file 8 "Core/Inc/malloc.h"
 630              		.file 9 "Core/Inc/w25q64.h"
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccUjJdUo.s 			page 17


DEFINED SYMBOLS
                            *ABS*:00000000 diskio.c
C:\Users\ADMIN\AppData\Local\Temp\ccUjJdUo.s:18     .text.disk_initialize:00000000 $t
C:\Users\ADMIN\AppData\Local\Temp\ccUjJdUo.s:26     .text.disk_initialize:00000000 disk_initialize
C:\Users\ADMIN\AppData\Local\Temp\ccUjJdUo.s:87     .text.disk_initialize:00000028 $d
C:\Users\ADMIN\AppData\Local\Temp\ccUjJdUo.s:92     .text.disk_status:00000000 $t
C:\Users\ADMIN\AppData\Local\Temp\ccUjJdUo.s:99     .text.disk_status:00000000 disk_status
C:\Users\ADMIN\AppData\Local\Temp\ccUjJdUo.s:117    .text.disk_read:00000000 $t
C:\Users\ADMIN\AppData\Local\Temp\ccUjJdUo.s:124    .text.disk_read:00000000 disk_read
C:\Users\ADMIN\AppData\Local\Temp\ccUjJdUo.s:225    .text.disk_write:00000000 $t
C:\Users\ADMIN\AppData\Local\Temp\ccUjJdUo.s:232    .text.disk_write:00000000 disk_write
C:\Users\ADMIN\AppData\Local\Temp\ccUjJdUo.s:333    .text.disk_ioctl:00000000 $t
C:\Users\ADMIN\AppData\Local\Temp\ccUjJdUo.s:340    .text.disk_ioctl:00000000 disk_ioctl
C:\Users\ADMIN\AppData\Local\Temp\ccUjJdUo.s:359    .text.disk_ioctl:0000000c $d
C:\Users\ADMIN\AppData\Local\Temp\ccUjJdUo.s:363    .text.disk_ioctl:00000010 $t
C:\Users\ADMIN\AppData\Local\Temp\ccUjJdUo.s:449    .text.disk_ioctl:0000005e $d
C:\Users\ADMIN\AppData\Local\Temp\ccUjJdUo.s:453    .text.disk_ioctl:00000062 $t
C:\Users\ADMIN\AppData\Local\Temp\ccUjJdUo.s:519    .text.disk_ioctl:0000008c $d
C:\Users\ADMIN\AppData\Local\Temp\ccUjJdUo.s:525    .text.get_fattime:00000000 $t
C:\Users\ADMIN\AppData\Local\Temp\ccUjJdUo.s:532    .text.get_fattime:00000000 get_fattime
C:\Users\ADMIN\AppData\Local\Temp\ccUjJdUo.s:547    .text.ff_memalloc:00000000 $t
C:\Users\ADMIN\AppData\Local\Temp\ccUjJdUo.s:554    .text.ff_memalloc:00000000 ff_memalloc
C:\Users\ADMIN\AppData\Local\Temp\ccUjJdUo.s:581    .text.ff_memfree:00000000 $t
C:\Users\ADMIN\AppData\Local\Temp\ccUjJdUo.s:588    .text.ff_memfree:00000000 ff_memfree
C:\Users\ADMIN\AppData\Local\Temp\ccUjJdUo.s:619    .data.FLASH_SECTOR_COUNT:00000000 FLASH_SECTOR_COUNT
C:\Users\ADMIN\AppData\Local\Temp\ccUjJdUo.s:615    .data.FLASH_SECTOR_COUNT:00000000 $d

UNDEFINED SYMBOLS
SD_Init
W25Q64_Init
SD_ReadDisk
W25Q64_Read
SD_WriteDisk
W25Q64_Write
SDCardInfo
mymalloc
myfree
