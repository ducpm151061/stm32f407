ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccABaL1e.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"gif.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.gif_check_head,"ax",%progbits
  18              		.align	1
  19              		.global	gif_check_head
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	gif_check_head:
  27              	.LVL0:
  28              	.LFB130:
  29              		.file 1 "Core/Src/gif.c"
   1:Core/Src/gif.c **** #include "piclib.h"
   2:Core/Src/gif.c **** #include "gif.h"	 
   3:Core/Src/gif.c **** #include "ff.h"	
   4:Core/Src/gif.c **** #include "delay.h"	    
   5:Core/Src/gif.c **** 
   6:Core/Src/gif.c **** 					    
   7:Core/Src/gif.c **** 
   8:Core/Src/gif.c **** const u16 _aMaskTbl[16] =
   9:Core/Src/gif.c **** {
  10:Core/Src/gif.c **** 	0x0000, 0x0001, 0x0003, 0x0007,
  11:Core/Src/gif.c **** 	0x000f, 0x001f, 0x003f, 0x007f,
  12:Core/Src/gif.c **** 	0x00ff, 0x01ff, 0x03ff, 0x07ff,
  13:Core/Src/gif.c **** 	0x0fff, 0x1fff, 0x3fff, 0x7fff,
  14:Core/Src/gif.c **** };	  
  15:Core/Src/gif.c **** const u8 _aInterlaceOffset[]={8,8,4,2};
  16:Core/Src/gif.c **** const u8 _aInterlaceYPos  []={0,4,2,1};
  17:Core/Src/gif.c ****  
  18:Core/Src/gif.c **** u8 gifdecoding=0;//标记GIF正在解码.
  19:Core/Src/gif.c **** 
  20:Core/Src/gif.c **** 
  21:Core/Src/gif.c **** //定义是否使用malloc,这里我们选择使用malloc
  22:Core/Src/gif.c **** #if GIF_USE_MALLOC==0 	
  23:Core/Src/gif.c **** gif89a tgif89a;			//gif89a文件
  24:Core/Src/gif.c **** FIL f_gfile;			//gif 文件
  25:Core/Src/gif.c **** LZW_INFO tlzw;			//lzw
  26:Core/Src/gif.c **** #endif
  27:Core/Src/gif.c **** 
  28:Core/Src/gif.c **** //检测GIF头
  29:Core/Src/gif.c **** //返回值:0,是GIF89a/87a;非零,非GIF89a/87a
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccABaL1e.s 			page 2


  30:Core/Src/gif.c **** u8 gif_check_head(FIL *file)
  31:Core/Src/gif.c **** {
  30              		.loc 1 31 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 16
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 31 1 is_stmt 0 view .LVU1
  35 0000 00B5     		push	{lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 4
  38              		.cfi_offset 14, -4
  39 0002 85B0     		sub	sp, sp, #20
  40              	.LCFI1:
  41              		.cfi_def_cfa_offset 24
  32:Core/Src/gif.c **** 	u8 gifversion[6];
  42              		.loc 1 32 2 is_stmt 1 view .LVU2
  33:Core/Src/gif.c **** 	u32 readed;
  43              		.loc 1 33 2 view .LVU3
  34:Core/Src/gif.c **** 	u8 res;
  44              		.loc 1 34 2 view .LVU4
  35:Core/Src/gif.c **** 	res=f_read(file,gifversion,6,(UINT*)&readed);
  45              		.loc 1 35 2 view .LVU5
  46              		.loc 1 35 6 is_stmt 0 view .LVU6
  47 0004 01AB     		add	r3, sp, #4
  48 0006 0622     		movs	r2, #6
  49 0008 02A9     		add	r1, sp, #8
  50 000a FFF7FEFF 		bl	f_read
  51              	.LVL1:
  36:Core/Src/gif.c **** 	if(res)return 1;	   
  52              		.loc 1 36 2 is_stmt 1 view .LVU7
  53              		.loc 1 36 4 is_stmt 0 view .LVU8
  54 000e D8B9     		cbnz	r0, .L4
  37:Core/Src/gif.c **** 	if((gifversion[0]!='G')||(gifversion[1]!='I')||(gifversion[2]!='F')||
  55              		.loc 1 37 2 is_stmt 1 view .LVU9
  56              		.loc 1 37 16 is_stmt 0 view .LVU10
  57 0010 9DF80830 		ldrb	r3, [sp, #8]	@ zero_extendqisi2
  58              		.loc 1 37 4 view .LVU11
  59 0014 472B     		cmp	r3, #71
  60 0016 1BD1     		bne	.L5
  61              		.loc 1 37 38 discriminator 1 view .LVU12
  62 0018 9DF80930 		ldrb	r3, [sp, #9]	@ zero_extendqisi2
  63              		.loc 1 37 25 discriminator 1 view .LVU13
  64 001c 492B     		cmp	r3, #73
  65 001e 19D1     		bne	.L6
  66              		.loc 1 37 60 discriminator 2 view .LVU14
  67 0020 9DF80A30 		ldrb	r3, [sp, #10]	@ zero_extendqisi2
  68              		.loc 1 37 47 discriminator 2 view .LVU15
  69 0024 462B     		cmp	r3, #70
  70 0026 17D1     		bne	.L7
  38:Core/Src/gif.c **** 	(gifversion[3]!='8')||((gifversion[4]!='7')&&(gifversion[4]!='9'))||
  71              		.loc 1 38 13 discriminator 3 view .LVU16
  72 0028 9DF80B30 		ldrb	r3, [sp, #11]	@ zero_extendqisi2
  37:Core/Src/gif.c **** 	if((gifversion[0]!='G')||(gifversion[1]!='I')||(gifversion[2]!='F')||
  73              		.loc 1 37 69 discriminator 3 view .LVU17
  74 002c 382B     		cmp	r3, #56
  75 002e 15D1     		bne	.L8
  76              		.loc 1 38 36 view .LVU18
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccABaL1e.s 			page 3


  77 0030 9DF80C30 		ldrb	r3, [sp, #12]	@ zero_extendqisi2
  78              		.loc 1 38 22 view .LVU19
  79 0034 372B     		cmp	r3, #55
  80 0036 01D0     		beq	.L3
  81              		.loc 1 38 45 discriminator 1 view .LVU20
  82 0038 392B     		cmp	r3, #57
  83 003a 11D1     		bne	.L9
  84              	.L3:
  39:Core/Src/gif.c **** 	(gifversion[5]!='a'))return 2;
  85              		.loc 1 39 13 discriminator 3 view .LVU21
  86 003c 9DF80D30 		ldrb	r3, [sp, #13]	@ zero_extendqisi2
  38:Core/Src/gif.c **** 	(gifversion[3]!='8')||((gifversion[4]!='7')&&(gifversion[4]!='9'))||
  87              		.loc 1 38 68 discriminator 3 view .LVU22
  88 0040 612B     		cmp	r3, #97
  89 0042 02D0     		beq	.L2
  90              		.loc 1 39 30 view .LVU23
  91 0044 0220     		movs	r0, #2
  92 0046 00E0     		b	.L2
  93              	.L4:
  36:Core/Src/gif.c **** 	if((gifversion[0]!='G')||(gifversion[1]!='I')||(gifversion[2]!='F')||
  94              		.loc 1 36 16 view .LVU24
  95 0048 0120     		movs	r0, #1
  96              	.L2:
  40:Core/Src/gif.c **** 	else return 0;	
  41:Core/Src/gif.c **** }
  97              		.loc 1 41 1 view .LVU25
  98 004a 05B0     		add	sp, sp, #20
  99              	.LCFI2:
 100              		.cfi_remember_state
 101              		.cfi_def_cfa_offset 4
 102              		@ sp needed
 103 004c 5DF804FB 		ldr	pc, [sp], #4
 104              	.LVL2:
 105              	.L5:
 106              	.LCFI3:
 107              		.cfi_restore_state
  39:Core/Src/gif.c **** 	else return 0;	
 108              		.loc 1 39 30 view .LVU26
 109 0050 0220     		movs	r0, #2
 110 0052 FAE7     		b	.L2
 111              	.L6:
 112 0054 0220     		movs	r0, #2
 113 0056 F8E7     		b	.L2
 114              	.L7:
 115 0058 0220     		movs	r0, #2
 116 005a F6E7     		b	.L2
 117              	.L8:
 118 005c 0220     		movs	r0, #2
 119 005e F4E7     		b	.L2
 120              	.L9:
 121 0060 0220     		movs	r0, #2
 122 0062 F2E7     		b	.L2
 123              		.cfi_endproc
 124              	.LFE130:
 126              		.section	.text.gif_getrgb565,"ax",%progbits
 127              		.align	1
 128              		.global	gif_getrgb565
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccABaL1e.s 			page 4


 129              		.syntax unified
 130              		.thumb
 131              		.thumb_func
 132              		.fpu fpv4-sp-d16
 134              	gif_getrgb565:
 135              	.LVL3:
 136              	.LFB131:
  42:Core/Src/gif.c **** //将RGB888转为RGB565
  43:Core/Src/gif.c **** //ctb:RGB888颜色数组首地址.
  44:Core/Src/gif.c **** //返回值:RGB565颜色.
  45:Core/Src/gif.c **** u16 gif_getrgb565(u8 *ctb) 
  46:Core/Src/gif.c **** {
 137              		.loc 1 46 1 is_stmt 1 view -0
 138              		.cfi_startproc
 139              		@ args = 0, pretend = 0, frame = 0
 140              		@ frame_needed = 0, uses_anonymous_args = 0
 141              		@ link register save eliminated.
 142              		.loc 1 46 1 is_stmt 0 view .LVU28
 143 0000 0346     		mov	r3, r0
  47:Core/Src/gif.c **** 	u16 r,g,b;
 144              		.loc 1 47 2 is_stmt 1 view .LVU29
  48:Core/Src/gif.c **** 	r=(ctb[0]>>3)&0X1F;
 145              		.loc 1 48 2 view .LVU30
 146              		.loc 1 48 8 is_stmt 0 view .LVU31
 147 0002 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 148              	.LVL4:
 149              		.loc 1 48 15 view .LVU32
 150 0004 C208     		lsrs	r2, r0, #3
 151              	.LVL5:
  49:Core/Src/gif.c **** 	g=(ctb[1]>>2)&0X3F;
 152              		.loc 1 49 2 is_stmt 1 view .LVU33
 153              		.loc 1 49 8 is_stmt 0 view .LVU34
 154 0006 5878     		ldrb	r0, [r3, #1]	@ zero_extendqisi2
 155              		.loc 1 49 15 view .LVU35
 156 0008 8008     		lsrs	r0, r0, #2
 157              	.LVL6:
  50:Core/Src/gif.c **** 	b=(ctb[2]>>3)&0X1F;
 158              		.loc 1 50 2 is_stmt 1 view .LVU36
 159              		.loc 1 50 8 is_stmt 0 view .LVU37
 160 000a 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 161              	.LVL7:
  51:Core/Src/gif.c **** 	return b+(g<<5)+(r<<11);
 162              		.loc 1 51 2 is_stmt 1 view .LVU38
 163              		.loc 1 51 13 is_stmt 0 view .LVU39
 164 000c 4001     		lsls	r0, r0, #5
 165              	.LVL8:
 166              		.loc 1 51 10 view .LVU40
 167 000e 00EBD300 		add	r0, r0, r3, lsr #3
 168              		.loc 1 51 17 view .LVU41
 169 0012 00EBC220 		add	r0, r0, r2, lsl #11
  52:Core/Src/gif.c **** }
 170              		.loc 1 52 1 view .LVU42
 171 0016 80B2     		uxth	r0, r0
 172 0018 7047     		bx	lr
 173              		.cfi_endproc
 174              	.LFE131:
 176              		.section	.text.gif_readcolortbl,"ax",%progbits
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccABaL1e.s 			page 5


 177              		.align	1
 178              		.global	gif_readcolortbl
 179              		.syntax unified
 180              		.thumb
 181              		.thumb_func
 182              		.fpu fpv4-sp-d16
 184              	gif_readcolortbl:
 185              	.LVL9:
 186              	.LFB132:
  53:Core/Src/gif.c **** //读取颜色表
  54:Core/Src/gif.c **** //file:文件;
  55:Core/Src/gif.c **** //gif:gif信息;
  56:Core/Src/gif.c **** //num:tbl大小.
  57:Core/Src/gif.c **** //返回值:0,OK;其他,失败;
  58:Core/Src/gif.c **** u8 gif_readcolortbl(FIL *file,gif89a * gif,u16 num)
  59:Core/Src/gif.c **** {
 187              		.loc 1 59 1 is_stmt 1 view -0
 188              		.cfi_startproc
 189              		@ args = 0, pretend = 0, frame = 8
 190              		@ frame_needed = 0, uses_anonymous_args = 0
 191              		.loc 1 59 1 is_stmt 0 view .LVU44
 192 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 193              	.LCFI4:
 194              		.cfi_def_cfa_offset 20
 195              		.cfi_offset 4, -20
 196              		.cfi_offset 5, -16
 197              		.cfi_offset 6, -12
 198              		.cfi_offset 7, -8
 199              		.cfi_offset 14, -4
 200 0002 83B0     		sub	sp, sp, #12
 201              	.LCFI5:
 202              		.cfi_def_cfa_offset 32
 203 0004 0646     		mov	r6, r0
 204 0006 0F46     		mov	r7, r1
 205 0008 1546     		mov	r5, r2
  60:Core/Src/gif.c **** 	u8 rgb[3];
 206              		.loc 1 60 2 is_stmt 1 view .LVU45
  61:Core/Src/gif.c **** 	u16 t;
 207              		.loc 1 61 2 view .LVU46
  62:Core/Src/gif.c **** 	u8 res;
 208              		.loc 1 62 2 view .LVU47
  63:Core/Src/gif.c **** 	u32 readed;
 209              		.loc 1 63 2 view .LVU48
  64:Core/Src/gif.c **** 	for(t=0;t<num;t++)
 210              		.loc 1 64 2 view .LVU49
 211              	.LVL10:
 212              		.loc 1 64 7 is_stmt 0 view .LVU50
 213 000a 0024     		movs	r4, #0
 214              		.loc 1 64 2 view .LVU51
 215 000c 09E0     		b	.L13
 216              	.LVL11:
 217              	.L19:
  65:Core/Src/gif.c **** 	{
  66:Core/Src/gif.c **** 		res=f_read(file,rgb,3,(UINT*)&readed);
  67:Core/Src/gif.c **** 		if(res)return 1;//读错误
  68:Core/Src/gif.c **** 		gif->colortbl[t]=gif_getrgb565(rgb);
 218              		.loc 1 68 3 is_stmt 1 discriminator 2 view .LVU52
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccABaL1e.s 			page 6


 219              		.loc 1 68 20 is_stmt 0 discriminator 2 view .LVU53
 220 000e 01A8     		add	r0, sp, #4
 221              	.LVL12:
 222              		.loc 1 68 20 discriminator 2 view .LVU54
 223 0010 FFF7FEFF 		bl	gif_getrgb565
 224              	.LVL13:
 225              		.loc 1 68 19 discriminator 2 view .LVU55
 226 0014 04F10803 		add	r3, r4, #8
 227 0018 07EB4303 		add	r3, r7, r3, lsl #1
 228 001c 5880     		strh	r0, [r3, #2]	@ movhi
  64:Core/Src/gif.c **** 	for(t=0;t<num;t++)
 229              		.loc 1 64 16 is_stmt 1 discriminator 2 view .LVU56
  64:Core/Src/gif.c **** 	for(t=0;t<num;t++)
 230              		.loc 1 64 17 is_stmt 0 discriminator 2 view .LVU57
 231 001e 0134     		adds	r4, r4, #1
 232              	.LVL14:
  64:Core/Src/gif.c **** 	for(t=0;t<num;t++)
 233              		.loc 1 64 17 discriminator 2 view .LVU58
 234 0020 A4B2     		uxth	r4, r4
 235              	.LVL15:
 236              	.L13:
  64:Core/Src/gif.c **** 	for(t=0;t<num;t++)
 237              		.loc 1 64 10 is_stmt 1 discriminator 1 view .LVU59
  64:Core/Src/gif.c **** 	for(t=0;t<num;t++)
 238              		.loc 1 64 2 is_stmt 0 discriminator 1 view .LVU60
 239 0022 AC42     		cmp	r4, r5
 240 0024 09D2     		bcs	.L18
  66:Core/Src/gif.c **** 		if(res)return 1;//读错误
 241              		.loc 1 66 3 is_stmt 1 view .LVU61
  66:Core/Src/gif.c **** 		if(res)return 1;//读错误
 242              		.loc 1 66 7 is_stmt 0 view .LVU62
 243 0026 6B46     		mov	r3, sp
 244 0028 0322     		movs	r2, #3
 245 002a 01A9     		add	r1, sp, #4
 246 002c 3046     		mov	r0, r6
 247 002e FFF7FEFF 		bl	f_read
 248              	.LVL16:
  67:Core/Src/gif.c **** 		gif->colortbl[t]=gif_getrgb565(rgb);
 249              		.loc 1 67 3 is_stmt 1 view .LVU63
  67:Core/Src/gif.c **** 		gif->colortbl[t]=gif_getrgb565(rgb);
 250              		.loc 1 67 5 is_stmt 0 view .LVU64
 251 0032 0028     		cmp	r0, #0
 252 0034 EBD0     		beq	.L19
  67:Core/Src/gif.c **** 		gif->colortbl[t]=gif_getrgb565(rgb);
 253              		.loc 1 67 17 view .LVU65
 254 0036 0120     		movs	r0, #1
 255              	.LVL17:
  67:Core/Src/gif.c **** 		gif->colortbl[t]=gif_getrgb565(rgb);
 256              		.loc 1 67 17 view .LVU66
 257 0038 00E0     		b	.L14
 258              	.L18:
  69:Core/Src/gif.c **** 	}
  70:Core/Src/gif.c **** 	return 0;
 259              		.loc 1 70 9 view .LVU67
 260 003a 0020     		movs	r0, #0
 261              	.L14:
  71:Core/Src/gif.c **** } 
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccABaL1e.s 			page 7


 262              		.loc 1 71 1 view .LVU68
 263 003c 03B0     		add	sp, sp, #12
 264              	.LCFI6:
 265              		.cfi_def_cfa_offset 20
 266              		@ sp needed
 267 003e F0BD     		pop	{r4, r5, r6, r7, pc}
 268              		.loc 1 71 1 view .LVU69
 269              		.cfi_endproc
 270              	.LFE132:
 272              		.section	.text.gif_getinfo,"ax",%progbits
 273              		.align	1
 274              		.global	gif_getinfo
 275              		.syntax unified
 276              		.thumb
 277              		.thumb_func
 278              		.fpu fpv4-sp-d16
 280              	gif_getinfo:
 281              	.LVL18:
 282              	.LFB133:
  72:Core/Src/gif.c **** //得到逻辑屏幕描述,图像尺寸等
  73:Core/Src/gif.c **** //file:文件;
  74:Core/Src/gif.c **** //gif:gif信息;
  75:Core/Src/gif.c **** //返回值:0,OK;其他,失败;
  76:Core/Src/gif.c **** u8 gif_getinfo(FIL *file,gif89a * gif)
  77:Core/Src/gif.c **** {
 283              		.loc 1 77 1 is_stmt 1 view -0
 284              		.cfi_startproc
 285              		@ args = 0, pretend = 0, frame = 8
 286              		@ frame_needed = 0, uses_anonymous_args = 0
 287              		.loc 1 77 1 is_stmt 0 view .LVU71
 288 0000 30B5     		push	{r4, r5, lr}
 289              	.LCFI7:
 290              		.cfi_def_cfa_offset 12
 291              		.cfi_offset 4, -12
 292              		.cfi_offset 5, -8
 293              		.cfi_offset 14, -4
 294 0002 83B0     		sub	sp, sp, #12
 295              	.LCFI8:
 296              		.cfi_def_cfa_offset 24
 297 0004 0546     		mov	r5, r0
 298 0006 0C46     		mov	r4, r1
  78:Core/Src/gif.c **** 	u32 readed;	 
 299              		.loc 1 78 2 is_stmt 1 view .LVU72
  79:Core/Src/gif.c **** 	u8 res;   
 300              		.loc 1 79 2 view .LVU73
  80:Core/Src/gif.c **** 	res=f_read(file,(u8*)&gif->gifLSD,7,(UINT*)&readed);
 301              		.loc 1 80 2 view .LVU74
 302              		.loc 1 80 6 is_stmt 0 view .LVU75
 303 0008 01AB     		add	r3, sp, #4
 304 000a 0722     		movs	r2, #7
 305 000c FFF7FEFF 		bl	f_read
 306              	.LVL19:
  81:Core/Src/gif.c **** 	if(res)return 1;
 307              		.loc 1 81 2 is_stmt 1 view .LVU76
 308              		.loc 1 81 4 is_stmt 0 view .LVU77
 309 0010 A8B9     		cbnz	r0, .L22
  82:Core/Src/gif.c **** 	if(gif->gifLSD.flag&0x80)//存在全局颜色表
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccABaL1e.s 			page 8


 310              		.loc 1 82 2 is_stmt 1 view .LVU78
 311              		.loc 1 82 16 is_stmt 0 view .LVU79
 312 0012 2279     		ldrb	r2, [r4, #4]	@ zero_extendqisi2
 313              		.loc 1 82 5 view .LVU80
 314 0014 94F90430 		ldrsb	r3, [r4, #4]
 315              		.loc 1 82 4 view .LVU81
 316 0018 002B     		cmp	r3, #0
 317 001a 01DB     		blt	.L25
 318              	.L21:
  83:Core/Src/gif.c **** 	{
  84:Core/Src/gif.c **** 		gif->numcolors=2<<(gif->gifLSD.flag&0x07);//得到颜色表大小
  85:Core/Src/gif.c **** 		if(gif_readcolortbl(file,gif,gif->numcolors))return 1;//读错误	
  86:Core/Src/gif.c **** 	}	   
  87:Core/Src/gif.c **** 	return 0;
  88:Core/Src/gif.c **** }
 319              		.loc 1 88 1 view .LVU82
 320 001c 03B0     		add	sp, sp, #12
 321              	.LCFI9:
 322              		.cfi_remember_state
 323              		.cfi_def_cfa_offset 12
 324              		@ sp needed
 325 001e 30BD     		pop	{r4, r5, pc}
 326              	.LVL20:
 327              	.L25:
 328              	.LCFI10:
 329              		.cfi_restore_state
  84:Core/Src/gif.c **** 		if(gif_readcolortbl(file,gif,gif->numcolors))return 1;//读错误	
 330              		.loc 1 84 3 is_stmt 1 view .LVU83
  84:Core/Src/gif.c **** 		if(gif_readcolortbl(file,gif,gif->numcolors))return 1;//读错误	
 331              		.loc 1 84 38 is_stmt 0 view .LVU84
 332 0020 02F00703 		and	r3, r2, #7
  84:Core/Src/gif.c **** 		if(gif_readcolortbl(file,gif,gif->numcolors))return 1;//读错误	
 333              		.loc 1 84 19 view .LVU85
 334 0024 0222     		movs	r2, #2
 335 0026 9A40     		lsls	r2, r2, r3
  84:Core/Src/gif.c **** 		if(gif_readcolortbl(file,gif,gif->numcolors))return 1;//读错误	
 336              		.loc 1 84 17 view .LVU86
 337 0028 92B2     		uxth	r2, r2
 338 002a A4F81224 		strh	r2, [r4, #1042]	@ movhi
  85:Core/Src/gif.c **** 	}	   
 339              		.loc 1 85 3 is_stmt 1 view .LVU87
  85:Core/Src/gif.c **** 	}	   
 340              		.loc 1 85 6 is_stmt 0 view .LVU88
 341 002e 2146     		mov	r1, r4
 342 0030 2846     		mov	r0, r5
 343 0032 FFF7FEFF 		bl	gif_readcolortbl
 344              	.LVL21:
  85:Core/Src/gif.c **** 	}	   
 345              		.loc 1 85 5 view .LVU89
 346 0036 0028     		cmp	r0, #0
 347 0038 F0D0     		beq	.L21
  85:Core/Src/gif.c **** 	}	   
 348              		.loc 1 85 55 view .LVU90
 349 003a 0120     		movs	r0, #1
 350 003c EEE7     		b	.L21
 351              	.L22:
  81:Core/Src/gif.c **** 	if(gif->gifLSD.flag&0x80)//存在全局颜色表
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccABaL1e.s 			page 9


 352              		.loc 1 81 16 view .LVU91
 353 003e 0120     		movs	r0, #1
 354 0040 ECE7     		b	.L21
 355              		.cfi_endproc
 356              	.LFE133:
 358              		.section	.text.gif_savegctbl,"ax",%progbits
 359              		.align	1
 360              		.global	gif_savegctbl
 361              		.syntax unified
 362              		.thumb
 363              		.thumb_func
 364              		.fpu fpv4-sp-d16
 366              	gif_savegctbl:
 367              	.LVL22:
 368              	.LFB134:
  89:Core/Src/gif.c **** //保存全局颜色表	 
  90:Core/Src/gif.c **** //gif:gif信息;
  91:Core/Src/gif.c **** void gif_savegctbl(gif89a* gif)
  92:Core/Src/gif.c **** {
 369              		.loc 1 92 1 is_stmt 1 view -0
 370              		.cfi_startproc
 371              		@ args = 0, pretend = 0, frame = 0
 372              		@ frame_needed = 0, uses_anonymous_args = 0
 373              		@ link register save eliminated.
  93:Core/Src/gif.c **** 	u16 i=0;
 374              		.loc 1 93 2 view .LVU93
  94:Core/Src/gif.c **** 	for(i=0;i<256;i++)gif->bkpcolortbl[i]=gif->colortbl[i];//保存全局颜色.
 375              		.loc 1 94 2 view .LVU94
 376              		.loc 1 94 7 is_stmt 0 view .LVU95
 377 0000 0023     		movs	r3, #0
 378              		.loc 1 94 2 view .LVU96
 379 0002 0BE0     		b	.L27
 380              	.LVL23:
 381              	.L28:
 382              		.loc 1 94 20 is_stmt 1 discriminator 3 view .LVU97
 383              		.loc 1 94 53 is_stmt 0 discriminator 3 view .LVU98
 384 0004 03F10802 		add	r2, r3, #8
 385 0008 00EB4202 		add	r2, r0, r2, lsl #1
 386 000c 5188     		ldrh	r1, [r2, #2]
 387              		.loc 1 94 39 discriminator 3 view .LVU99
 388 000e 03F58472 		add	r2, r3, #264
 389 0012 00EB4202 		add	r2, r0, r2, lsl #1
 390 0016 5180     		strh	r1, [r2, #2]	@ movhi
 391              		.loc 1 94 16 is_stmt 1 discriminator 3 view .LVU100
 392              		.loc 1 94 17 is_stmt 0 discriminator 3 view .LVU101
 393 0018 0133     		adds	r3, r3, #1
 394              	.LVL24:
 395              		.loc 1 94 17 discriminator 3 view .LVU102
 396 001a 9BB2     		uxth	r3, r3
 397              	.LVL25:
 398              	.L27:
 399              		.loc 1 94 10 is_stmt 1 discriminator 1 view .LVU103
 400              		.loc 1 94 2 is_stmt 0 discriminator 1 view .LVU104
 401 001c FF2B     		cmp	r3, #255
 402 001e F1D9     		bls	.L28
  95:Core/Src/gif.c **** }
 403              		.loc 1 95 1 view .LVU105
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccABaL1e.s 			page 10


 404 0020 7047     		bx	lr
 405              		.cfi_endproc
 406              	.LFE134:
 408              		.section	.text.gif_recovergctbl,"ax",%progbits
 409              		.align	1
 410              		.global	gif_recovergctbl
 411              		.syntax unified
 412              		.thumb
 413              		.thumb_func
 414              		.fpu fpv4-sp-d16
 416              	gif_recovergctbl:
 417              	.LVL26:
 418              	.LFB135:
  96:Core/Src/gif.c **** //恢复全局颜色表	 
  97:Core/Src/gif.c **** //gif:gif信息;
  98:Core/Src/gif.c **** void gif_recovergctbl(gif89a* gif)
  99:Core/Src/gif.c **** {
 419              		.loc 1 99 1 is_stmt 1 view -0
 420              		.cfi_startproc
 421              		@ args = 0, pretend = 0, frame = 0
 422              		@ frame_needed = 0, uses_anonymous_args = 0
 423              		@ link register save eliminated.
 100:Core/Src/gif.c **** 	u16 i=0;
 424              		.loc 1 100 2 view .LVU107
 101:Core/Src/gif.c **** 	for(i=0;i<256;i++)gif->colortbl[i]=gif->bkpcolortbl[i];//恢复全局颜色.
 425              		.loc 1 101 2 view .LVU108
 426              		.loc 1 101 7 is_stmt 0 view .LVU109
 427 0000 0023     		movs	r3, #0
 428              		.loc 1 101 2 view .LVU110
 429 0002 0BE0     		b	.L30
 430              	.LVL27:
 431              	.L31:
 432              		.loc 1 101 20 is_stmt 1 discriminator 3 view .LVU111
 433              		.loc 1 101 53 is_stmt 0 discriminator 3 view .LVU112
 434 0004 03F58472 		add	r2, r3, #264
 435 0008 00EB4202 		add	r2, r0, r2, lsl #1
 436 000c 5188     		ldrh	r1, [r2, #2]
 437              		.loc 1 101 36 discriminator 3 view .LVU113
 438 000e 03F10802 		add	r2, r3, #8
 439 0012 00EB4202 		add	r2, r0, r2, lsl #1
 440 0016 5180     		strh	r1, [r2, #2]	@ movhi
 441              		.loc 1 101 16 is_stmt 1 discriminator 3 view .LVU114
 442              		.loc 1 101 17 is_stmt 0 discriminator 3 view .LVU115
 443 0018 0133     		adds	r3, r3, #1
 444              	.LVL28:
 445              		.loc 1 101 17 discriminator 3 view .LVU116
 446 001a 9BB2     		uxth	r3, r3
 447              	.LVL29:
 448              	.L30:
 449              		.loc 1 101 10 is_stmt 1 discriminator 1 view .LVU117
 450              		.loc 1 101 2 is_stmt 0 discriminator 1 view .LVU118
 451 001c FF2B     		cmp	r3, #255
 452 001e F1D9     		bls	.L31
 102:Core/Src/gif.c **** }
 453              		.loc 1 102 1 view .LVU119
 454 0020 7047     		bx	lr
 455              		.cfi_endproc
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccABaL1e.s 			page 11


 456              	.LFE135:
 458              		.section	.text.gif_initlzw,"ax",%progbits
 459              		.align	1
 460              		.global	gif_initlzw
 461              		.syntax unified
 462              		.thumb
 463              		.thumb_func
 464              		.fpu fpv4-sp-d16
 466              	gif_initlzw:
 467              	.LVL30:
 468              	.LFB136:
 103:Core/Src/gif.c **** 
 104:Core/Src/gif.c **** //初始化LZW相关参数	   
 105:Core/Src/gif.c **** //gif:gif信息;
 106:Core/Src/gif.c **** //codesize:lzw码长度
 107:Core/Src/gif.c **** void gif_initlzw(gif89a* gif,u8 codesize) 
 108:Core/Src/gif.c **** {
 469              		.loc 1 108 1 is_stmt 1 view -0
 470              		.cfi_startproc
 471              		@ args = 0, pretend = 0, frame = 0
 472              		@ frame_needed = 0, uses_anonymous_args = 0
 473              		.loc 1 108 1 is_stmt 0 view .LVU121
 474 0000 38B5     		push	{r3, r4, r5, lr}
 475              	.LCFI11:
 476              		.cfi_def_cfa_offset 16
 477              		.cfi_offset 3, -16
 478              		.cfi_offset 4, -12
 479              		.cfi_offset 5, -8
 480              		.cfi_offset 14, -4
 481 0002 0446     		mov	r4, r0
 482 0004 0D46     		mov	r5, r1
 109:Core/Src/gif.c ****  	mymemset((u8 *)gif->lzw, 0, sizeof(LZW_INFO));
 483              		.loc 1 109 3 is_stmt 1 view .LVU122
 484 0006 43F6F442 		movw	r2, #15604
 485 000a 0021     		movs	r1, #0
 486              	.LVL31:
 487              		.loc 1 109 3 is_stmt 0 view .LVU123
 488 000c D0F81804 		ldr	r0, [r0, #1048]
 489              	.LVL32:
 490              		.loc 1 109 3 view .LVU124
 491 0010 FFF7FEFF 		bl	mymemset
 492              	.LVL33:
 110:Core/Src/gif.c **** 	gif->lzw->SetCodeSize  = codesize;
 493              		.loc 1 110 2 is_stmt 1 view .LVU125
 494              		.loc 1 110 5 is_stmt 0 view .LVU126
 495 0014 D4F81834 		ldr	r3, [r4, #1048]
 496              		.loc 1 110 25 view .LVU127
 497 0018 03F54053 		add	r3, r3, #12288
 498 001c C3F8D85C 		str	r5, [r3, #3288]
 111:Core/Src/gif.c **** 	gif->lzw->CodeSize     = codesize + 1;
 499              		.loc 1 111 2 is_stmt 1 view .LVU128
 500              		.loc 1 111 5 is_stmt 0 view .LVU129
 501 0020 D4F81834 		ldr	r3, [r4, #1048]
 502              		.loc 1 111 36 view .LVU130
 503 0024 6A1C     		adds	r2, r5, #1
 504              		.loc 1 111 25 view .LVU131
 505 0026 03F54053 		add	r3, r3, #12288
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccABaL1e.s 			page 12


 506 002a C3F8D42C 		str	r2, [r3, #3284]
 112:Core/Src/gif.c **** 	gif->lzw->ClearCode    = (1 << codesize);
 507              		.loc 1 112 2 is_stmt 1 view .LVU132
 508              		.loc 1 112 5 is_stmt 0 view .LVU133
 509 002e D4F81834 		ldr	r3, [r4, #1048]
 510              		.loc 1 112 30 view .LVU134
 511 0032 0122     		movs	r2, #1
 512 0034 02FA05F1 		lsl	r1, r2, r5
 513              		.loc 1 112 25 view .LVU135
 514 0038 03F54053 		add	r3, r3, #12288
 515 003c C3F8E41C 		str	r1, [r3, #3300]
 113:Core/Src/gif.c **** 	gif->lzw->EndCode      = (1 << codesize) + 1;
 516              		.loc 1 113 2 is_stmt 1 view .LVU136
 517              		.loc 1 113 5 is_stmt 0 view .LVU137
 518 0040 D4F81834 		ldr	r3, [r4, #1048]
 519              		.loc 1 113 43 view .LVU138
 520 0044 8818     		adds	r0, r1, r2
 521              		.loc 1 113 25 view .LVU139
 522 0046 03F54053 		add	r3, r3, #12288
 523 004a C3F8E80C 		str	r0, [r3, #3304]
 114:Core/Src/gif.c **** 	gif->lzw->MaxCode      = (1 << codesize) + 2;
 524              		.loc 1 114 2 is_stmt 1 view .LVU140
 525              		.loc 1 114 5 is_stmt 0 view .LVU141
 526 004e D4F81834 		ldr	r3, [r4, #1048]
 527              		.loc 1 114 43 view .LVU142
 528 0052 881C     		adds	r0, r1, #2
 529              		.loc 1 114 25 view .LVU143
 530 0054 03F54053 		add	r3, r3, #12288
 531 0058 C3F8DC0C 		str	r0, [r3, #3292]
 115:Core/Src/gif.c **** 	gif->lzw->MaxCodeSize  = (1 << codesize) << 1;
 532              		.loc 1 115 2 is_stmt 1 view .LVU144
 533              		.loc 1 115 5 is_stmt 0 view .LVU145
 534 005c D4F81834 		ldr	r3, [r4, #1048]
 535              		.loc 1 115 43 view .LVU146
 536 0060 9140     		lsls	r1, r1, r2
 537              		.loc 1 115 25 view .LVU147
 538 0062 03F54053 		add	r3, r3, #12288
 539 0066 C3F8E01C 		str	r1, [r3, #3296]
 116:Core/Src/gif.c **** 	gif->lzw->ReturnClear  = 1;
 540              		.loc 1 116 2 is_stmt 1 view .LVU148
 541              		.loc 1 116 5 is_stmt 0 view .LVU149
 542 006a D4F81834 		ldr	r3, [r4, #1048]
 543              		.loc 1 116 25 view .LVU150
 544 006e 03F54053 		add	r3, r3, #12288
 545 0072 C3F8D02C 		str	r2, [r3, #3280]
 117:Core/Src/gif.c **** 	gif->lzw->LastByte     = 2;
 546              		.loc 1 117 2 is_stmt 1 view .LVU151
 547              		.loc 1 117 5 is_stmt 0 view .LVU152
 548 0076 D4F81834 		ldr	r3, [r4, #1048]
 549              		.loc 1 117 25 view .LVU153
 550 007a 03F54053 		add	r3, r3, #12288
 551 007e 0222     		movs	r2, #2
 552 0080 C3F8CC2C 		str	r2, [r3, #3276]
 118:Core/Src/gif.c **** 	gif->lzw->sp           = gif->lzw->aDecompBuffer;
 553              		.loc 1 118 2 is_stmt 1 view .LVU154
 554              		.loc 1 118 30 is_stmt 0 view .LVU155
 555 0084 D4F81834 		ldr	r3, [r4, #1048]
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccABaL1e.s 			page 13


 556              		.loc 1 118 27 view .LVU156
 557 0088 03F54452 		add	r2, r3, #12544
 558 008c 0232     		adds	r2, r2, #2
 559              		.loc 1 118 25 view .LVU157
 560 008e 03F54053 		add	r3, r3, #12288
 561 0092 C3F8BC2C 		str	r2, [r3, #3260]
 119:Core/Src/gif.c **** }
 562              		.loc 1 119 1 view .LVU158
 563 0096 38BD     		pop	{r3, r4, r5, pc}
 564              		.loc 1 119 1 view .LVU159
 565              		.cfi_endproc
 566              	.LFE136:
 568              		.section	.text.gif_getdatablock,"ax",%progbits
 569              		.align	1
 570              		.global	gif_getdatablock
 571              		.syntax unified
 572              		.thumb
 573              		.thumb_func
 574              		.fpu fpv4-sp-d16
 576              	gif_getdatablock:
 577              	.LVL34:
 578              	.LFB137:
 120:Core/Src/gif.c **** 
 121:Core/Src/gif.c **** //读取一个数据块
 122:Core/Src/gif.c **** //gfile:gif文件;
 123:Core/Src/gif.c **** //buf:数据缓存区
 124:Core/Src/gif.c **** //maxnum:最大读写数据限制
 125:Core/Src/gif.c **** u16 gif_getdatablock(FIL *gfile,u8 *buf,u16 maxnum) 
 126:Core/Src/gif.c **** {
 579              		.loc 1 126 1 is_stmt 1 view -0
 580              		.cfi_startproc
 581              		@ args = 0, pretend = 0, frame = 8
 582              		@ frame_needed = 0, uses_anonymous_args = 0
 583              		.loc 1 126 1 is_stmt 0 view .LVU161
 584 0000 70B5     		push	{r4, r5, r6, lr}
 585              	.LCFI12:
 586              		.cfi_def_cfa_offset 16
 587              		.cfi_offset 4, -16
 588              		.cfi_offset 5, -12
 589              		.cfi_offset 6, -8
 590              		.cfi_offset 14, -4
 591 0002 82B0     		sub	sp, sp, #8
 592              	.LCFI13:
 593              		.cfi_def_cfa_offset 24
 594 0004 0646     		mov	r6, r0
 595 0006 0C46     		mov	r4, r1
 596 0008 1546     		mov	r5, r2
 127:Core/Src/gif.c **** 	u8 cnt;
 597              		.loc 1 127 2 is_stmt 1 view .LVU162
 128:Core/Src/gif.c **** 	u32 readed;
 598              		.loc 1 128 2 view .LVU163
 129:Core/Src/gif.c **** 	u32 fpos;
 599              		.loc 1 129 2 view .LVU164
 130:Core/Src/gif.c **** 	f_read(gfile,&cnt,1,(UINT*)&readed);//得到LZW长度			 
 600              		.loc 1 130 2 view .LVU165
 601 000a 6B46     		mov	r3, sp
 602 000c 0122     		movs	r2, #1
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccABaL1e.s 			page 14


 603              	.LVL35:
 604              		.loc 1 130 2 is_stmt 0 view .LVU166
 605 000e 0DF10701 		add	r1, sp, #7
 606              	.LVL36:
 607              		.loc 1 130 2 view .LVU167
 608 0012 FFF7FEFF 		bl	f_read
 609              	.LVL37:
 131:Core/Src/gif.c **** 	if(cnt) 
 610              		.loc 1 131 2 is_stmt 1 view .LVU168
 611              		.loc 1 131 5 is_stmt 0 view .LVU169
 612 0016 9DF80720 		ldrb	r2, [sp, #7]	@ zero_extendqisi2
 613              		.loc 1 131 4 view .LVU170
 614 001a 42B1     		cbz	r2, .L35
 132:Core/Src/gif.c **** 	{
 133:Core/Src/gif.c **** 		if (buf)//需要读取 
 615              		.loc 1 133 3 is_stmt 1 view .LVU171
 616              		.loc 1 133 6 is_stmt 0 view .LVU172
 617 001c 9CB1     		cbz	r4, .L36
 134:Core/Src/gif.c **** 		{
 135:Core/Src/gif.c **** 			if(cnt>maxnum)
 618              		.loc 1 135 4 is_stmt 1 view .LVU173
 619              		.loc 1 135 10 is_stmt 0 view .LVU174
 620 001e 93B2     		uxth	r3, r2
 621              		.loc 1 135 6 view .LVU175
 622 0020 AB42     		cmp	r3, r5
 623 0022 08D8     		bhi	.L40
 136:Core/Src/gif.c **** 			{
 137:Core/Src/gif.c **** 				fpos=f_tell(gfile);
 138:Core/Src/gif.c **** 				f_lseek(gfile,fpos+cnt);//跳过
 139:Core/Src/gif.c **** 				return cnt;//直接不读
 140:Core/Src/gif.c **** 			}
 141:Core/Src/gif.c **** 			f_read(gfile,buf,cnt,(UINT*)&readed);//得到LZW长度	
 624              		.loc 1 141 4 is_stmt 1 view .LVU176
 625 0024 6B46     		mov	r3, sp
 626 0026 2146     		mov	r1, r4
 627 0028 3046     		mov	r0, r6
 628 002a FFF7FEFF 		bl	f_read
 629              	.LVL38:
 630              	.L35:
 142:Core/Src/gif.c **** 		}else 	//直接跳过
 143:Core/Src/gif.c **** 		{
 144:Core/Src/gif.c **** 			fpos=f_tell(gfile);
 145:Core/Src/gif.c **** 			f_lseek(gfile,fpos+cnt);//跳过
 146:Core/Src/gif.c **** 		}
 147:Core/Src/gif.c **** 	}
 148:Core/Src/gif.c **** 	return cnt;
 631              		.loc 1 148 2 view .LVU177
 632              		.loc 1 148 9 is_stmt 0 view .LVU178
 633 002e 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 634              	.L38:
 149:Core/Src/gif.c **** }
 635              		.loc 1 149 1 view .LVU179
 636 0032 02B0     		add	sp, sp, #8
 637              	.LCFI14:
 638              		.cfi_remember_state
 639              		.cfi_def_cfa_offset 16
 640              		@ sp needed
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccABaL1e.s 			page 15


 641 0034 70BD     		pop	{r4, r5, r6, pc}
 642              	.LVL39:
 643              	.L40:
 644              	.LCFI15:
 645              		.cfi_restore_state
 137:Core/Src/gif.c **** 				f_lseek(gfile,fpos+cnt);//跳过
 646              		.loc 1 137 5 is_stmt 1 view .LVU180
 137:Core/Src/gif.c **** 				f_lseek(gfile,fpos+cnt);//跳过
 647              		.loc 1 137 9 is_stmt 0 view .LVU181
 648 0036 B168     		ldr	r1, [r6, #8]
 649              	.LVL40:
 138:Core/Src/gif.c **** 				return cnt;//直接不读
 650              		.loc 1 138 5 is_stmt 1 view .LVU182
 651 0038 1144     		add	r1, r1, r2
 652              	.LVL41:
 138:Core/Src/gif.c **** 				return cnt;//直接不读
 653              		.loc 1 138 5 is_stmt 0 view .LVU183
 654 003a 3046     		mov	r0, r6
 655 003c FFF7FEFF 		bl	f_lseek
 656              	.LVL42:
 139:Core/Src/gif.c **** 			}
 657              		.loc 1 139 5 is_stmt 1 view .LVU184
 139:Core/Src/gif.c **** 			}
 658              		.loc 1 139 12 is_stmt 0 view .LVU185
 659 0040 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 660 0044 F5E7     		b	.L38
 661              	.L36:
 144:Core/Src/gif.c **** 			f_lseek(gfile,fpos+cnt);//跳过
 662              		.loc 1 144 4 is_stmt 1 view .LVU186
 144:Core/Src/gif.c **** 			f_lseek(gfile,fpos+cnt);//跳过
 663              		.loc 1 144 8 is_stmt 0 view .LVU187
 664 0046 B168     		ldr	r1, [r6, #8]
 665              	.LVL43:
 145:Core/Src/gif.c **** 		}
 666              		.loc 1 145 4 is_stmt 1 view .LVU188
 667 0048 1144     		add	r1, r1, r2
 668              	.LVL44:
 145:Core/Src/gif.c **** 		}
 669              		.loc 1 145 4 is_stmt 0 view .LVU189
 670 004a 3046     		mov	r0, r6
 671 004c FFF7FEFF 		bl	f_lseek
 672              	.LVL45:
 145:Core/Src/gif.c **** 		}
 673              		.loc 1 145 4 view .LVU190
 674 0050 EDE7     		b	.L35
 675              		.cfi_endproc
 676              	.LFE137:
 678              		.section	.text.gif_readextension,"ax",%progbits
 679              		.align	1
 680              		.global	gif_readextension
 681              		.syntax unified
 682              		.thumb
 683              		.thumb_func
 684              		.fpu fpv4-sp-d16
 686              	gif_readextension:
 687              	.LVL46:
 688              	.LFB138:
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccABaL1e.s 			page 16


 150:Core/Src/gif.c **** //ReadExtension		 
 151:Core/Src/gif.c **** //Purpose:
 152:Core/Src/gif.c **** //Reads an extension block. One extension block can consist of several data blocks.
 153:Core/Src/gif.c **** //If an unknown extension block occures, the routine failes.
 154:Core/Src/gif.c **** //返回值:0,成功;
 155:Core/Src/gif.c **** // 		 其他,失败
 156:Core/Src/gif.c **** u8 gif_readextension(FIL *gfile,gif89a* gif, int *pTransIndex,u8 *pDisposal)
 157:Core/Src/gif.c **** {
 689              		.loc 1 157 1 is_stmt 1 view -0
 690              		.cfi_startproc
 691              		@ args = 0, pretend = 0, frame = 16
 692              		@ frame_needed = 0, uses_anonymous_args = 0
 693              		.loc 1 157 1 is_stmt 0 view .LVU192
 694 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 695              	.LCFI16:
 696              		.cfi_def_cfa_offset 20
 697              		.cfi_offset 4, -20
 698              		.cfi_offset 5, -16
 699              		.cfi_offset 6, -12
 700              		.cfi_offset 7, -8
 701              		.cfi_offset 14, -4
 702 0002 85B0     		sub	sp, sp, #20
 703              	.LCFI17:
 704              		.cfi_def_cfa_offset 40
 705 0004 0446     		mov	r4, r0
 706 0006 0F46     		mov	r7, r1
 707 0008 1646     		mov	r6, r2
 708 000a 1D46     		mov	r5, r3
 158:Core/Src/gif.c **** 	u8 temp;
 709              		.loc 1 158 2 is_stmt 1 view .LVU193
 159:Core/Src/gif.c **** 	u32 readed;	 
 710              		.loc 1 159 2 view .LVU194
 160:Core/Src/gif.c **** 	u8 buf[4];  
 711              		.loc 1 160 2 view .LVU195
 161:Core/Src/gif.c **** 	f_read(gfile,&temp,1,(UINT*)&readed);//得到长度		 
 712              		.loc 1 161 2 view .LVU196
 713 000c 02AB     		add	r3, sp, #8
 714              	.LVL47:
 715              		.loc 1 161 2 is_stmt 0 view .LVU197
 716 000e 0122     		movs	r2, #1
 717              	.LVL48:
 718              		.loc 1 161 2 view .LVU198
 719 0010 0DF10F01 		add	r1, sp, #15
 720              	.LVL49:
 721              		.loc 1 161 2 view .LVU199
 722 0014 FFF7FEFF 		bl	f_read
 723              	.LVL50:
 162:Core/Src/gif.c **** 	switch(temp)
 724              		.loc 1 162 2 is_stmt 1 view .LVU200
 725 0018 9DF80FC0 		ldrb	ip, [sp, #15]	@ zero_extendqisi2
 726 001c BCF1F90F 		cmp	ip, #249
 727 0020 16D0     		beq	.L42
 728 0022 0FD9     		bls	.L52
 729 0024 0CF1020C 		add	ip, ip, #2
 730 0028 5FFA8CFC 		uxtb	ip, ip
 731 002c BCF1010F 		cmp	ip, #1
 732 0030 36D8     		bhi	.L48
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccABaL1e.s 			page 17


 733              	.L46:
 163:Core/Src/gif.c **** 	{
 164:Core/Src/gif.c **** 		case GIF_PLAINTEXT:
 165:Core/Src/gif.c **** 		case GIF_APPLICATION:
 166:Core/Src/gif.c **** 		case GIF_COMMENT:
 167:Core/Src/gif.c **** 			while(gif_getdatablock(gfile,0,256)>0);			//获取数据块
 734              		.loc 1 167 42 discriminator 1 view .LVU201
 735              		.loc 1 167 9 discriminator 1 view .LVU202
 736              		.loc 1 167 10 is_stmt 0 discriminator 1 view .LVU203
 737 0032 4FF48072 		mov	r2, #256
 738 0036 0021     		movs	r1, #0
 739 0038 2046     		mov	r0, r4
 740 003a FFF7FEFF 		bl	gif_getdatablock
 741              	.LVL51:
 742              		.loc 1 167 9 discriminator 1 view .LVU204
 743 003e 0028     		cmp	r0, #0
 744 0040 F7D1     		bne	.L46
 745 0042 03E0     		b	.L45
 746              	.L52:
 162:Core/Src/gif.c **** 	switch(temp)
 747              		.loc 1 162 2 view .LVU205
 748 0044 BCF1010F 		cmp	ip, #1
 749 0048 F3D0     		beq	.L46
 750 004a 0120     		movs	r0, #1
 751              	.L45:
 168:Core/Src/gif.c **** 			return 0;
 169:Core/Src/gif.c **** 		case GIF_GRAPHICCTL://图形控制扩展块
 170:Core/Src/gif.c **** 			if(gif_getdatablock(gfile,buf,4)!=4)return 1;	//图形控制扩展块的长度必须为4 
 171:Core/Src/gif.c ****  		 	gif->delay=(buf[2]<<8)|buf[1];					//得到延时 
 172:Core/Src/gif.c **** 			*pDisposal=(buf[0]>>2)&0x7; 	    			//得到处理方法
 173:Core/Src/gif.c **** 			if((buf[0]&0x1)!=0)*pTransIndex=buf[3];			//透明色表 
 174:Core/Src/gif.c **** 			f_read(gfile,&temp,1,(UINT*)&readed);	 		//得到LZW长度	
 175:Core/Src/gif.c ****  			if(temp!=0)return 1;							//读取数据块结束符错误.
 176:Core/Src/gif.c **** 			return 0;
 177:Core/Src/gif.c **** 	}
 178:Core/Src/gif.c **** 	return 1;//错误的数据
 179:Core/Src/gif.c **** }
 752              		.loc 1 179 1 view .LVU206
 753 004c 05B0     		add	sp, sp, #20
 754              	.LCFI18:
 755              		.cfi_remember_state
 756              		.cfi_def_cfa_offset 20
 757              		@ sp needed
 758 004e F0BD     		pop	{r4, r5, r6, r7, pc}
 759              	.LVL52:
 760              	.L42:
 761              	.LCFI19:
 762              		.cfi_restore_state
 170:Core/Src/gif.c ****  		 	gif->delay=(buf[2]<<8)|buf[1];					//得到延时 
 763              		.loc 1 170 4 is_stmt 1 view .LVU207
 170:Core/Src/gif.c ****  		 	gif->delay=(buf[2]<<8)|buf[1];					//得到延时 
 764              		.loc 1 170 7 is_stmt 0 view .LVU208
 765 0050 0422     		movs	r2, #4
 766 0052 0DEB0201 		add	r1, sp, r2
 767 0056 2046     		mov	r0, r4
 768 0058 FFF7FEFF 		bl	gif_getdatablock
 769              	.LVL53:
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccABaL1e.s 			page 18


 170:Core/Src/gif.c ****  		 	gif->delay=(buf[2]<<8)|buf[1];					//得到延时 
 770              		.loc 1 170 6 view .LVU209
 771 005c 0428     		cmp	r0, #4
 772 005e 21D1     		bne	.L49
 171:Core/Src/gif.c **** 			*pDisposal=(buf[0]>>2)&0x7; 	    			//得到处理方法
 773              		.loc 1 171 6 is_stmt 1 view .LVU210
 171:Core/Src/gif.c **** 			*pDisposal=(buf[0]>>2)&0x7; 	    			//得到处理方法
 774              		.loc 1 171 21 is_stmt 0 view .LVU211
 775 0060 9DF80620 		ldrb	r2, [sp, #6]	@ zero_extendqisi2
 171:Core/Src/gif.c **** 			*pDisposal=(buf[0]>>2)&0x7; 	    			//得到处理方法
 776              		.loc 1 171 32 view .LVU212
 777 0064 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
 171:Core/Src/gif.c **** 			*pDisposal=(buf[0]>>2)&0x7; 	    			//得到处理方法
 778              		.loc 1 171 28 view .LVU213
 779 0068 43EA0223 		orr	r3, r3, r2, lsl #8
 171:Core/Src/gif.c **** 			*pDisposal=(buf[0]>>2)&0x7; 	    			//得到处理方法
 780              		.loc 1 171 16 view .LVU214
 781 006c A7F81434 		strh	r3, [r7, #1044]	@ movhi
 172:Core/Src/gif.c **** 			if((buf[0]&0x1)!=0)*pTransIndex=buf[3];			//透明色表 
 782              		.loc 1 172 4 is_stmt 1 view .LVU215
 172:Core/Src/gif.c **** 			if((buf[0]&0x1)!=0)*pTransIndex=buf[3];			//透明色表 
 783              		.loc 1 172 19 is_stmt 0 view .LVU216
 784 0070 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
 172:Core/Src/gif.c **** 			if((buf[0]&0x1)!=0)*pTransIndex=buf[3];			//透明色表 
 785              		.loc 1 172 26 view .LVU217
 786 0074 C3F38202 		ubfx	r2, r3, #2, #3
 172:Core/Src/gif.c **** 			if((buf[0]&0x1)!=0)*pTransIndex=buf[3];			//透明色表 
 787              		.loc 1 172 14 view .LVU218
 788 0078 2A70     		strb	r2, [r5]
 173:Core/Src/gif.c **** 			f_read(gfile,&temp,1,(UINT*)&readed);	 		//得到LZW长度	
 789              		.loc 1 173 4 is_stmt 1 view .LVU219
 173:Core/Src/gif.c **** 			f_read(gfile,&temp,1,(UINT*)&readed);	 		//得到LZW长度	
 790              		.loc 1 173 6 is_stmt 0 view .LVU220
 791 007a 13F0010F 		tst	r3, #1
 792 007e 02D0     		beq	.L47
 173:Core/Src/gif.c **** 			f_read(gfile,&temp,1,(UINT*)&readed);	 		//得到LZW长度	
 793              		.loc 1 173 23 is_stmt 1 discriminator 1 view .LVU221
 173:Core/Src/gif.c **** 			f_read(gfile,&temp,1,(UINT*)&readed);	 		//得到LZW长度	
 794              		.loc 1 173 39 is_stmt 0 discriminator 1 view .LVU222
 795 0080 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 173:Core/Src/gif.c **** 			f_read(gfile,&temp,1,(UINT*)&readed);	 		//得到LZW长度	
 796              		.loc 1 173 35 discriminator 1 view .LVU223
 797 0084 3360     		str	r3, [r6]
 798              	.L47:
 174:Core/Src/gif.c ****  			if(temp!=0)return 1;							//读取数据块结束符错误.
 799              		.loc 1 174 4 is_stmt 1 view .LVU224
 800 0086 02AB     		add	r3, sp, #8
 801 0088 0122     		movs	r2, #1
 802 008a 0DF10F01 		add	r1, sp, #15
 803 008e 2046     		mov	r0, r4
 804 0090 FFF7FEFF 		bl	f_read
 805              	.LVL54:
 175:Core/Src/gif.c **** 			return 0;
 806              		.loc 1 175 5 view .LVU225
 175:Core/Src/gif.c **** 			return 0;
 807              		.loc 1 175 12 is_stmt 0 view .LVU226
 808 0094 9DF80F00 		ldrb	r0, [sp, #15]	@ zero_extendqisi2
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccABaL1e.s 			page 19


 175:Core/Src/gif.c **** 			return 0;
 809              		.loc 1 175 7 view .LVU227
 810 0098 0028     		cmp	r0, #0
 811 009a D7D0     		beq	.L45
 175:Core/Src/gif.c **** 			return 0;
 812              		.loc 1 175 23 view .LVU228
 813 009c 0120     		movs	r0, #1
 814 009e D5E7     		b	.L45
 815              	.L48:
 162:Core/Src/gif.c **** 	{
 816              		.loc 1 162 2 view .LVU229
 817 00a0 0120     		movs	r0, #1
 818 00a2 D3E7     		b	.L45
 819              	.L49:
 170:Core/Src/gif.c ****  		 	gif->delay=(buf[2]<<8)|buf[1];					//得到延时 
 820              		.loc 1 170 47 view .LVU230
 821 00a4 0120     		movs	r0, #1
 822 00a6 D1E7     		b	.L45
 823              		.cfi_endproc
 824              	.LFE138:
 826              		.section	.text.gif_getnextcode,"ax",%progbits
 827              		.align	1
 828              		.global	gif_getnextcode
 829              		.syntax unified
 830              		.thumb
 831              		.thumb_func
 832              		.fpu fpv4-sp-d16
 834              	gif_getnextcode:
 835              	.LVL55:
 836              	.LFB139:
 180:Core/Src/gif.c **** 
 181:Core/Src/gif.c **** //从LZW缓存中得到下一个LZW码,每个码包含12位
 182:Core/Src/gif.c **** //返回值:<0,错误.
 183:Core/Src/gif.c **** //		 其他,正常.
 184:Core/Src/gif.c **** int gif_getnextcode(FIL *gfile,gif89a* gif) 
 185:Core/Src/gif.c **** {
 837              		.loc 1 185 1 is_stmt 1 view -0
 838              		.cfi_startproc
 839              		@ args = 0, pretend = 0, frame = 0
 840              		@ frame_needed = 0, uses_anonymous_args = 0
 841              		.loc 1 185 1 is_stmt 0 view .LVU232
 842 0000 38B5     		push	{r3, r4, r5, lr}
 843              	.LCFI20:
 844              		.cfi_def_cfa_offset 16
 845              		.cfi_offset 3, -16
 846              		.cfi_offset 4, -12
 847              		.cfi_offset 5, -8
 848              		.cfi_offset 14, -4
 849 0002 0C46     		mov	r4, r1
 186:Core/Src/gif.c **** 	int i,j,End;
 850              		.loc 1 186 2 is_stmt 1 view .LVU233
 187:Core/Src/gif.c **** 	long Result;
 851              		.loc 1 187 2 view .LVU234
 188:Core/Src/gif.c **** 	if(gif->lzw->ReturnClear)
 852              		.loc 1 188 2 view .LVU235
 853              		.loc 1 188 8 is_stmt 0 view .LVU236
 854 0004 D1F81834 		ldr	r3, [r1, #1048]
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccABaL1e.s 			page 20


 855              		.loc 1 188 13 view .LVU237
 856 0008 03F54052 		add	r2, r3, #12288
 857 000c D2F8D02C 		ldr	r2, [r2, #3280]
 858              		.loc 1 188 4 view .LVU238
 859 0010 002A     		cmp	r2, #0
 860 0012 78D1     		bne	.L63
 189:Core/Src/gif.c **** 	{
 190:Core/Src/gif.c **** 		//The first code should be a clearcode.
 191:Core/Src/gif.c **** 		gif->lzw->ReturnClear=0;
 192:Core/Src/gif.c **** 		return gif->lzw->ClearCode;
 193:Core/Src/gif.c **** 	}
 194:Core/Src/gif.c **** 	End=gif->lzw->CurBit+gif->lzw->CodeSize;
 861              		.loc 1 194 2 is_stmt 1 view .LVU239
 862              		.loc 1 194 14 is_stmt 0 view .LVU240
 863 0014 03F54051 		add	r1, r3, #12288
 864              	.LVL56:
 865              		.loc 1 194 14 view .LVU241
 866 0018 D1F8C02C 		ldr	r2, [r1, #3264]
 867              		.loc 1 194 5 view .LVU242
 868 001c D1F8D45C 		ldr	r5, [r1, #3284]
 869 0020 2A44     		add	r2, r2, r5
 870              	.LVL57:
 195:Core/Src/gif.c **** 	if(End>=gif->lzw->LastBit)
 871              		.loc 1 195 2 is_stmt 1 view .LVU243
 872              		.loc 1 195 18 is_stmt 0 view .LVU244
 873 0022 D1F8C41C 		ldr	r1, [r1, #3268]
 874              		.loc 1 195 4 view .LVU245
 875 0026 9142     		cmp	r1, r2
 876 0028 48DC     		bgt	.L56
 877              	.LBB2:
 196:Core/Src/gif.c **** 	{
 197:Core/Src/gif.c **** 		int Count;
 878              		.loc 1 197 3 is_stmt 1 view .LVU246
 198:Core/Src/gif.c **** 		if(gif->lzw->GetDone)return-1;//Error 
 879              		.loc 1 198 3 view .LVU247
 880              		.loc 1 198 14 is_stmt 0 view .LVU248
 881 002a 03F54052 		add	r2, r3, #12288
 882              	.LVL58:
 883              		.loc 1 198 14 view .LVU249
 884 002e D2F8C82C 		ldr	r2, [r2, #3272]
 885              	.LVL59:
 886              		.loc 1 198 5 view .LVU250
 887 0032 002A     		cmp	r2, #0
 888 0034 7AD1     		bne	.L61
 199:Core/Src/gif.c **** 		gif->lzw->aBuffer[0]=gif->lzw->aBuffer[gif->lzw->LastByte-2];
 889              		.loc 1 199 3 is_stmt 1 view .LVU251
 890              		.loc 1 199 50 is_stmt 0 view .LVU252
 891 0036 03F54052 		add	r2, r3, #12288
 892              	.LVL60:
 893              		.loc 1 199 50 view .LVU253
 894 003a D2F8CC2C 		ldr	r2, [r2, #3276]
 895              	.LVL61:
 896              		.loc 1 199 60 view .LVU254
 897 003e 023A     		subs	r2, r2, #2
 898              		.loc 1 199 41 view .LVU255
 899 0040 9A5C     		ldrb	r2, [r3, r2]	@ zero_extendqisi2
 900              		.loc 1 199 23 view .LVU256
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccABaL1e.s 			page 21


 901 0042 1A70     		strb	r2, [r3]
 200:Core/Src/gif.c **** 		gif->lzw->aBuffer[1]=gif->lzw->aBuffer[gif->lzw->LastByte-1];
 902              		.loc 1 200 3 is_stmt 1 view .LVU257
 903              		.loc 1 200 27 is_stmt 0 view .LVU258
 904 0044 D4F81834 		ldr	r3, [r4, #1048]
 905              	.LVL62:
 906              		.loc 1 200 50 view .LVU259
 907 0048 03F54052 		add	r2, r3, #12288
 908 004c D2F8CC2C 		ldr	r2, [r2, #3276]
 909              		.loc 1 200 60 view .LVU260
 910 0050 013A     		subs	r2, r2, #1
 911              		.loc 1 200 41 view .LVU261
 912 0052 9A5C     		ldrb	r2, [r3, r2]	@ zero_extendqisi2
 913              		.loc 1 200 23 view .LVU262
 914 0054 5A70     		strb	r2, [r3, #1]
 201:Core/Src/gif.c **** 		if((Count=gif_getdatablock(gfile,&gif->lzw->aBuffer[2],300))==0)gif->lzw->GetDone=1;
 915              		.loc 1 201 3 is_stmt 1 view .LVU263
 916              		.loc 1 201 40 is_stmt 0 view .LVU264
 917 0056 D4F81814 		ldr	r1, [r4, #1048]
 918              		.loc 1 201 13 view .LVU265
 919 005a 4FF49672 		mov	r2, #300
 920 005e 0231     		adds	r1, r1, #2
 921 0060 FFF7FEFF 		bl	gif_getdatablock
 922              	.LVL63:
 923              		.loc 1 201 5 view .LVU266
 924 0064 0346     		mov	r3, r0
 925 0066 30B9     		cbnz	r0, .L57
 926              		.loc 1 201 67 is_stmt 1 discriminator 1 view .LVU267
 927              		.loc 1 201 70 is_stmt 0 discriminator 1 view .LVU268
 928 0068 D4F81824 		ldr	r2, [r4, #1048]
 929              		.loc 1 201 84 discriminator 1 view .LVU269
 930 006c 02F54052 		add	r2, r2, #12288
 931 0070 0121     		movs	r1, #1
 932 0072 C2F8C81C 		str	r1, [r2, #3272]
 933              	.L57:
 202:Core/Src/gif.c **** 		if(Count<0)return -1;//Error 
 934              		.loc 1 202 3 is_stmt 1 view .LVU270
 203:Core/Src/gif.c **** 		gif->lzw->LastByte=2+Count;
 935              		.loc 1 203 3 view .LVU271
 936              		.loc 1 203 6 is_stmt 0 view .LVU272
 937 0076 D4F81824 		ldr	r2, [r4, #1048]
 938              		.loc 1 203 23 view .LVU273
 939 007a 0233     		adds	r3, r3, #2
 940              		.loc 1 203 21 view .LVU274
 941 007c 02F54052 		add	r2, r2, #12288
 942 0080 C2F8CC3C 		str	r3, [r2, #3276]
 204:Core/Src/gif.c **** 		gif->lzw->CurBit=(gif->lzw->CurBit-gif->lzw->LastBit)+16;
 943              		.loc 1 204 3 is_stmt 1 view .LVU275
 944              		.loc 1 204 24 is_stmt 0 view .LVU276
 945 0084 D4F81824 		ldr	r2, [r4, #1048]
 946              		.loc 1 204 29 view .LVU277
 947 0088 02F54052 		add	r2, r2, #12288
 948 008c D2F8C01C 		ldr	r1, [r2, #3264]
 949              		.loc 1 204 46 view .LVU278
 950 0090 D2F8C40C 		ldr	r0, [r2, #3268]
 951              	.LVL64:
 952              		.loc 1 204 37 view .LVU279
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccABaL1e.s 			page 22


 953 0094 091A     		subs	r1, r1, r0
 954              		.loc 1 204 56 view .LVU280
 955 0096 1031     		adds	r1, r1, #16
 956              		.loc 1 204 19 view .LVU281
 957 0098 C2F8C01C 		str	r1, [r2, #3264]
 205:Core/Src/gif.c **** 		gif->lzw->LastBit=(2+Count)*8;
 958              		.loc 1 205 3 is_stmt 1 view .LVU282
 959              		.loc 1 205 6 is_stmt 0 view .LVU283
 960 009c D4F81824 		ldr	r2, [r4, #1048]
 961              		.loc 1 205 30 view .LVU284
 962 00a0 DB00     		lsls	r3, r3, #3
 963              	.LVL65:
 964              		.loc 1 205 20 view .LVU285
 965 00a2 02F54052 		add	r2, r2, #12288
 966 00a6 C2F8C43C 		str	r3, [r2, #3268]
 206:Core/Src/gif.c **** 		End=gif->lzw->CurBit+gif->lzw->CodeSize;
 967              		.loc 1 206 3 is_stmt 1 view .LVU286
 968              		.loc 1 206 10 is_stmt 0 view .LVU287
 969 00aa D4F81834 		ldr	r3, [r4, #1048]
 970              		.loc 1 206 15 view .LVU288
 971 00ae 03F54053 		add	r3, r3, #12288
 972 00b2 D3F8C02C 		ldr	r2, [r3, #3264]
 973              		.loc 1 206 32 view .LVU289
 974 00b6 D3F8D43C 		ldr	r3, [r3, #3284]
 975              		.loc 1 206 6 view .LVU290
 976 00ba 1A44     		add	r2, r2, r3
 977              	.LVL66:
 978              	.L56:
 979              		.loc 1 206 6 view .LVU291
 980              	.LBE2:
 207:Core/Src/gif.c **** 	}
 208:Core/Src/gif.c **** 	j=End>>3;
 981              		.loc 1 208 2 is_stmt 1 view .LVU292
 982              		.loc 1 208 3 is_stmt 0 view .LVU293
 983 00bc D010     		asrs	r0, r2, #3
 984              	.LVL67:
 209:Core/Src/gif.c **** 	i=gif->lzw->CurBit>>3;
 985              		.loc 1 209 2 is_stmt 1 view .LVU294
 986              		.loc 1 209 7 is_stmt 0 view .LVU295
 987 00be D4F81834 		ldr	r3, [r4, #1048]
 988              		.loc 1 209 12 view .LVU296
 989 00c2 03F54051 		add	r1, r3, #12288
 990 00c6 D1F8C01C 		ldr	r1, [r1, #3264]
 991              		.loc 1 209 3 view .LVU297
 992 00ca CC10     		asrs	r4, r1, #3
 993              	.LVL68:
 210:Core/Src/gif.c **** 	if(i==j)Result=(long)gif->lzw->aBuffer[i];
 994              		.loc 1 210 2 is_stmt 1 view .LVU298
 995              		.loc 1 210 4 is_stmt 0 view .LVU299
 996 00cc B4EBE20F 		cmp	r4, r2, asr #3
 997 00d0 25D0     		beq	.L64
 211:Core/Src/gif.c **** 	else if(i+1==j)Result=(long)gif->lzw->aBuffer[i]|((long)gif->lzw->aBuffer[i+1]<<8);
 998              		.loc 1 211 7 is_stmt 1 view .LVU300
 999              		.loc 1 211 11 is_stmt 0 view .LVU301
 1000 00d2 621C     		adds	r2, r4, #1
 1001              	.LVL69:
 1002              		.loc 1 211 9 view .LVU302
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccABaL1e.s 			page 23


 1003 00d4 8242     		cmp	r2, r0
 1004 00d6 24D0     		beq	.L65
 212:Core/Src/gif.c **** 	else Result=(long)gif->lzw->aBuffer[i]|((long)gif->lzw->aBuffer[i+1]<<8)|((long)gif->lzw->aBuffer[
 1005              		.loc 1 212 7 is_stmt 1 view .LVU303
 1006              		.loc 1 212 37 is_stmt 0 view .LVU304
 1007 00d8 185D     		ldrb	r0, [r3, r4]	@ zero_extendqisi2
 1008              	.LVL70:
 1009              		.loc 1 212 65 view .LVU305
 1010 00da 9A5C     		ldrb	r2, [r3, r2]	@ zero_extendqisi2
 1011              		.loc 1 212 40 view .LVU306
 1012 00dc 40EA0220 		orr	r0, r0, r2, lsl #8
 1013              		.loc 1 212 101 view .LVU307
 1014 00e0 0234     		adds	r4, r4, #2
 1015              	.LVL71:
 1016              		.loc 1 212 99 view .LVU308
 1017 00e2 1A5D     		ldrb	r2, [r3, r4]	@ zero_extendqisi2
 1018              		.loc 1 212 13 view .LVU309
 1019 00e4 40EA0240 		orr	r0, r0, r2, lsl #16
 1020              	.LVL72:
 1021              	.L59:
 213:Core/Src/gif.c **** 	Result=(Result>>(gif->lzw->CurBit&0x7))&_aMaskTbl[gif->lzw->CodeSize];
 1022              		.loc 1 213 2 is_stmt 1 view .LVU310
 1023              		.loc 1 213 35 is_stmt 0 view .LVU311
 1024 00e8 01F00702 		and	r2, r1, #7
 1025              		.loc 1 213 16 view .LVU312
 1026 00ec 1041     		asrs	r0, r0, r2
 1027              	.LVL73:
 1028              		.loc 1 213 60 view .LVU313
 1029 00ee 03F54053 		add	r3, r3, #12288
 1030 00f2 D3F8D42C 		ldr	r2, [r3, #3284]
 1031              		.loc 1 213 51 view .LVU314
 1032 00f6 0F4C     		ldr	r4, .L66
 1033 00f8 34F81240 		ldrh	r4, [r4, r2, lsl #1]
 1034              		.loc 1 213 8 view .LVU315
 1035 00fc 2040     		ands	r0, r0, r4
 1036              	.LVL74:
 214:Core/Src/gif.c **** 	gif->lzw->CurBit+=gif->lzw->CodeSize;
 1037              		.loc 1 214 2 is_stmt 1 view .LVU316
 1038              		.loc 1 214 18 is_stmt 0 view .LVU317
 1039 00fe 1144     		add	r1, r1, r2
 1040              	.LVL75:
 1041              		.loc 1 214 18 view .LVU318
 1042 0100 C3F8C01C 		str	r1, [r3, #3264]
 1043              	.LVL76:
 215:Core/Src/gif.c **** 	return(int)Result;
 1044              		.loc 1 215 2 is_stmt 1 view .LVU319
 1045              	.L53:
 216:Core/Src/gif.c **** }	
 1046              		.loc 1 216 1 is_stmt 0 view .LVU320
 1047 0104 38BD     		pop	{r3, r4, r5, pc}
 1048              	.LVL77:
 1049              	.L63:
 191:Core/Src/gif.c **** 		return gif->lzw->ClearCode;
 1050              		.loc 1 191 3 is_stmt 1 view .LVU321
 191:Core/Src/gif.c **** 		return gif->lzw->ClearCode;
 1051              		.loc 1 191 24 is_stmt 0 view .LVU322
 1052 0106 03F54053 		add	r3, r3, #12288
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccABaL1e.s 			page 24


 1053 010a 0022     		movs	r2, #0
 1054 010c C3F8D02C 		str	r2, [r3, #3280]
 192:Core/Src/gif.c **** 	}
 1055              		.loc 1 192 3 is_stmt 1 view .LVU323
 192:Core/Src/gif.c **** 	}
 1056              		.loc 1 192 13 is_stmt 0 view .LVU324
 1057 0110 D1F81834 		ldr	r3, [r1, #1048]
 192:Core/Src/gif.c **** 	}
 1058              		.loc 1 192 18 view .LVU325
 1059 0114 03F54053 		add	r3, r3, #12288
 1060 0118 D3F8E40C 		ldr	r0, [r3, #3300]
 1061              	.LVL78:
 192:Core/Src/gif.c **** 	}
 1062              		.loc 1 192 18 view .LVU326
 1063 011c F2E7     		b	.L53
 1064              	.LVL79:
 1065              	.L64:
 210:Core/Src/gif.c **** 	else if(i+1==j)Result=(long)gif->lzw->aBuffer[i]|((long)gif->lzw->aBuffer[i+1]<<8);
 1066              		.loc 1 210 10 is_stmt 1 discriminator 1 view .LVU327
 210:Core/Src/gif.c **** 	else if(i+1==j)Result=(long)gif->lzw->aBuffer[i]|((long)gif->lzw->aBuffer[i+1]<<8);
 1067              		.loc 1 210 40 is_stmt 0 discriminator 1 view .LVU328
 1068 011e 185D     		ldrb	r0, [r3, r4]	@ zero_extendqisi2
 1069              	.LVL80:
 210:Core/Src/gif.c **** 	else if(i+1==j)Result=(long)gif->lzw->aBuffer[i]|((long)gif->lzw->aBuffer[i+1]<<8);
 1070              		.loc 1 210 40 discriminator 1 view .LVU329
 1071 0120 E2E7     		b	.L59
 1072              	.LVL81:
 1073              	.L65:
 211:Core/Src/gif.c **** 	else Result=(long)gif->lzw->aBuffer[i]|((long)gif->lzw->aBuffer[i+1]<<8)|((long)gif->lzw->aBuffer[
 1074              		.loc 1 211 17 is_stmt 1 discriminator 1 view .LVU330
 211:Core/Src/gif.c **** 	else Result=(long)gif->lzw->aBuffer[i]|((long)gif->lzw->aBuffer[i+1]<<8)|((long)gif->lzw->aBuffer[
 1075              		.loc 1 211 47 is_stmt 0 discriminator 1 view .LVU331
 1076 0122 185D     		ldrb	r0, [r3, r4]	@ zero_extendqisi2
 1077              	.LVL82:
 211:Core/Src/gif.c **** 	else Result=(long)gif->lzw->aBuffer[i]|((long)gif->lzw->aBuffer[i+1]<<8)|((long)gif->lzw->aBuffer[
 1078              		.loc 1 211 75 discriminator 1 view .LVU332
 1079 0124 9A5C     		ldrb	r2, [r3, r2]	@ zero_extendqisi2
 211:Core/Src/gif.c **** 	else Result=(long)gif->lzw->aBuffer[i]|((long)gif->lzw->aBuffer[i+1]<<8)|((long)gif->lzw->aBuffer[
 1080              		.loc 1 211 23 discriminator 1 view .LVU333
 1081 0126 40EA0220 		orr	r0, r0, r2, lsl #8
 1082              	.LVL83:
 211:Core/Src/gif.c **** 	else Result=(long)gif->lzw->aBuffer[i]|((long)gif->lzw->aBuffer[i+1]<<8)|((long)gif->lzw->aBuffer[
 1083              		.loc 1 211 23 discriminator 1 view .LVU334
 1084 012a DDE7     		b	.L59
 1085              	.LVL84:
 1086              	.L61:
 1087              	.LBB3:
 198:Core/Src/gif.c **** 		gif->lzw->aBuffer[0]=gif->lzw->aBuffer[gif->lzw->LastByte-2];
 1088              		.loc 1 198 30 view .LVU335
 1089 012c 4FF0FF30 		mov	r0, #-1
 1090              	.LVL85:
 198:Core/Src/gif.c **** 		gif->lzw->aBuffer[0]=gif->lzw->aBuffer[gif->lzw->LastByte-2];
 1091              		.loc 1 198 30 view .LVU336
 1092 0130 E8E7     		b	.L53
 1093              	.L67:
 1094 0132 00BF     		.align	2
 1095              	.L66:
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccABaL1e.s 			page 25


 1096 0134 00000000 		.word	.LANCHOR0
 1097              	.LBE3:
 1098              		.cfi_endproc
 1099              	.LFE139:
 1101              		.section	.text.gif_getnextbyte,"ax",%progbits
 1102              		.align	1
 1103              		.global	gif_getnextbyte
 1104              		.syntax unified
 1105              		.thumb
 1106              		.thumb_func
 1107              		.fpu fpv4-sp-d16
 1109              	gif_getnextbyte:
 1110              	.LVL86:
 1111              	.LFB140:
 217:Core/Src/gif.c **** //得到LZW的下一个码
 218:Core/Src/gif.c **** //返回值:<0,错误(-1,不成功;-2,读到结束符了)
 219:Core/Src/gif.c **** //		 >=0,OK.(LZW的第一个码)
 220:Core/Src/gif.c **** int gif_getnextbyte(FIL *gfile,gif89a* gif) 
 221:Core/Src/gif.c **** {
 1112              		.loc 1 221 1 is_stmt 1 view -0
 1113              		.cfi_startproc
 1114              		@ args = 0, pretend = 0, frame = 0
 1115              		@ frame_needed = 0, uses_anonymous_args = 0
 1116              		.loc 1 221 1 is_stmt 0 view .LVU338
 1117 0000 70B5     		push	{r4, r5, r6, lr}
 1118              	.LCFI21:
 1119              		.cfi_def_cfa_offset 16
 1120              		.cfi_offset 4, -16
 1121              		.cfi_offset 5, -12
 1122              		.cfi_offset 6, -8
 1123              		.cfi_offset 14, -4
 1124 0002 0546     		mov	r5, r0
 1125 0004 0C46     		mov	r4, r1
 222:Core/Src/gif.c **** 	int i,Code,Incode;
 1126              		.loc 1 222 2 is_stmt 1 view .LVU339
 223:Core/Src/gif.c **** 	while((Code=gif_getnextcode(gfile,gif))>=0)
 1127              		.loc 1 223 2 view .LVU340
 1128              	.LVL87:
 1129              	.L69:
 1130              		.loc 1 223 7 view .LVU341
 1131              		.loc 1 223 14 is_stmt 0 view .LVU342
 1132 0006 2146     		mov	r1, r4
 1133 0008 2846     		mov	r0, r5
 1134 000a FFF7FEFF 		bl	gif_getnextcode
 1135              	.LVL88:
 1136              		.loc 1 223 7 view .LVU343
 1137 000e 011E     		subs	r1, r0, #0
 1138 0010 C0F21F81 		blt	.L84
 224:Core/Src/gif.c **** 	{
 225:Core/Src/gif.c **** 		if(Code==gif->lzw->ClearCode)
 1139              		.loc 1 225 3 is_stmt 1 view .LVU344
 1140              		.loc 1 225 15 is_stmt 0 view .LVU345
 1141 0014 D4F81804 		ldr	r0, [r4, #1048]
 1142              	.LVL89:
 1143              		.loc 1 225 20 view .LVU346
 1144 0018 00F54053 		add	r3, r0, #12288
 1145 001c D3F8E43C 		ldr	r3, [r3, #3300]
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccABaL1e.s 			page 26


 1146              		.loc 1 225 5 view .LVU347
 1147 0020 8B42     		cmp	r3, r1
 1148 0022 4DD0     		beq	.L85
 226:Core/Src/gif.c **** 		{
 227:Core/Src/gif.c **** 			//Corrupt GIFs can make this happen  
 228:Core/Src/gif.c **** 			if(gif->lzw->ClearCode>=(1<<MAX_NUM_LWZ_BITS))return -1;//Error 
 229:Core/Src/gif.c **** 			//Clear the tables 
 230:Core/Src/gif.c **** 			mymemset((u8*)gif->lzw->aCode,0,sizeof(gif->lzw->aCode));
 231:Core/Src/gif.c **** 			for(i=0;i<gif->lzw->ClearCode;++i)gif->lzw->aPrefix[i]=i;
 232:Core/Src/gif.c **** 			//Calculate the'special codes' independence of the initial code size
 233:Core/Src/gif.c **** 			//and initialize the stack pointer 
 234:Core/Src/gif.c **** 			gif->lzw->CodeSize=gif->lzw->SetCodeSize+1;
 235:Core/Src/gif.c **** 			gif->lzw->MaxCodeSize=gif->lzw->ClearCode<<1;
 236:Core/Src/gif.c **** 			gif->lzw->MaxCode=gif->lzw->ClearCode+2;
 237:Core/Src/gif.c **** 			gif->lzw->sp=gif->lzw->aDecompBuffer;
 238:Core/Src/gif.c **** 			//Read the first code from the stack after clear ingand initializing*/
 239:Core/Src/gif.c **** 			do
 240:Core/Src/gif.c **** 			{
 241:Core/Src/gif.c **** 				gif->lzw->FirstCode=gif_getnextcode(gfile,gif);
 242:Core/Src/gif.c **** 			}while(gif->lzw->FirstCode==gif->lzw->ClearCode);
 243:Core/Src/gif.c **** 			gif->lzw->OldCode=gif->lzw->FirstCode;
 244:Core/Src/gif.c **** 			return gif->lzw->FirstCode;
 245:Core/Src/gif.c **** 		}
 246:Core/Src/gif.c **** 		if(Code==gif->lzw->EndCode)return -2;//End code
 1149              		.loc 1 246 3 is_stmt 1 view .LVU348
 1150              		.loc 1 246 20 is_stmt 0 view .LVU349
 1151 0024 00F54053 		add	r3, r0, #12288
 1152 0028 D3F8E83C 		ldr	r3, [r3, #3304]
 1153              		.loc 1 246 5 view .LVU350
 1154 002c 8B42     		cmp	r3, r1
 1155 002e 00F01581 		beq	.L81
 247:Core/Src/gif.c **** 		Incode=Code;
 1156              		.loc 1 247 3 is_stmt 1 view .LVU351
 1157              	.LVL90:
 248:Core/Src/gif.c **** 		if(Code>=gif->lzw->MaxCode)
 1158              		.loc 1 248 3 view .LVU352
 1159              		.loc 1 248 20 is_stmt 0 view .LVU353
 1160 0032 00F54053 		add	r3, r0, #12288
 1161 0036 D3F8DC3C 		ldr	r3, [r3, #3292]
 1162              		.loc 1 248 5 view .LVU354
 1163 003a 8B42     		cmp	r3, r1
 1164 003c 00F39B80 		bgt	.L82
 249:Core/Src/gif.c **** 		{
 250:Core/Src/gif.c **** 			*(gif->lzw->sp)++=gif->lzw->FirstCode;
 1165              		.loc 1 250 4 is_stmt 1 view .LVU355
 1166              		.loc 1 250 30 is_stmt 0 view .LVU356
 1167 0040 00F54050 		add	r0, r0, #12288
 1168 0044 D0F8EC2C 		ldr	r2, [r0, #3308]
 1169              		.loc 1 250 14 view .LVU357
 1170 0048 D0F8BC3C 		ldr	r3, [r0, #3260]
 1171              		.loc 1 250 19 view .LVU358
 1172 004c 5E1C     		adds	r6, r3, #1
 1173 004e C0F8BC6C 		str	r6, [r0, #3260]
 1174              		.loc 1 250 21 view .LVU359
 1175 0052 1A70     		strb	r2, [r3]
 251:Core/Src/gif.c **** 			Code=gif->lzw->OldCode;
 1176              		.loc 1 251 4 is_stmt 1 view .LVU360
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccABaL1e.s 			page 27


 1177              		.loc 1 251 12 is_stmt 0 view .LVU361
 1178 0054 D4F81834 		ldr	r3, [r4, #1048]
 1179              		.loc 1 251 8 view .LVU362
 1180 0058 03F54053 		add	r3, r3, #12288
 1181 005c D3F8F00C 		ldr	r0, [r3, #3312]
 1182              	.LVL91:
 1183              	.L76:
 252:Core/Src/gif.c **** 		}
 253:Core/Src/gif.c **** 		while(Code>=gif->lzw->ClearCode)
 1184              		.loc 1 253 8 is_stmt 1 view .LVU363
 1185              		.loc 1 253 18 is_stmt 0 view .LVU364
 1186 0060 D4F81834 		ldr	r3, [r4, #1048]
 1187              		.loc 1 253 23 view .LVU365
 1188 0064 03F54052 		add	r2, r3, #12288
 1189 0068 D2F8E42C 		ldr	r2, [r2, #3300]
 1190              		.loc 1 253 8 view .LVU366
 1191 006c 8242     		cmp	r2, r0
 1192 006e 00F38480 		bgt	.L86
 254:Core/Src/gif.c **** 		{
 255:Core/Src/gif.c **** 			*(gif->lzw->sp)++=gif->lzw->aPrefix[Code];
 1193              		.loc 1 255 4 is_stmt 1 view .LVU367
 1194              		.loc 1 255 14 is_stmt 0 view .LVU368
 1195 0072 03F5405C 		add	ip, r3, #12288
 1196 0076 DCF8BC2C 		ldr	r2, [ip, #3260]
 1197              		.loc 1 255 19 view .LVU369
 1198 007a 561C     		adds	r6, r2, #1
 1199 007c CCF8BC6C 		str	r6, [ip, #3260]
 1200              		.loc 1 255 39 view .LVU370
 1201 0080 0344     		add	r3, r3, r0
 1202 0082 42F2021C 		movw	ip, #8450
 1203 0086 13F80C30 		ldrb	r3, [r3, ip]	@ zero_extendqisi2
 1204              		.loc 1 255 21 view .LVU371
 1205 008a 1370     		strb	r3, [r2]
 256:Core/Src/gif.c **** 			if(Code==gif->lzw->aCode[Code])return Code;
 1206              		.loc 1 256 4 is_stmt 1 view .LVU372
 1207              		.loc 1 256 16 is_stmt 0 view .LVU373
 1208 008c D4F81834 		ldr	r3, [r4, #1048]
 1209              		.loc 1 256 28 view .LVU374
 1210 0090 00F18002 		add	r2, r0, #128
 1211 0094 03EB4202 		add	r2, r3, r2, lsl #1
 1212 0098 B2F902C0 		ldrsh	ip, [r2, #2]
 1213              		.loc 1 256 6 view .LVU375
 1214 009c 8445     		cmp	ip, r0
 1215 009e 00F0D980 		beq	.L68
 257:Core/Src/gif.c **** 			if((gif->lzw->sp-gif->lzw->aDecompBuffer)>=sizeof(gif->lzw->aDecompBuffer))return Code;
 1216              		.loc 1 257 4 is_stmt 1 view .LVU376
 1217              		.loc 1 257 16 is_stmt 0 view .LVU377
 1218 00a2 03F54052 		add	r2, r3, #12288
 1219 00a6 D2F8BC2C 		ldr	r2, [r2, #3260]
 1220              		.loc 1 257 20 view .LVU378
 1221 00aa 03F54453 		add	r3, r3, #12544
 1222 00ae 0233     		adds	r3, r3, #2
 1223 00b0 D31A     		subs	r3, r2, r3
 1224              		.loc 1 257 6 view .LVU379
 1225 00b2 40F6B732 		movw	r2, #2999
 1226 00b6 9342     		cmp	r3, r2
 1227 00b8 00F2CC80 		bhi	.L68
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccABaL1e.s 			page 28


 258:Core/Src/gif.c **** 			Code=gif->lzw->aCode[Code];
 1228              		.loc 1 258 8 view .LVU380
 1229 00bc 6046     		mov	r0, ip
 1230              	.LVL92:
 1231              		.loc 1 258 8 view .LVU381
 1232 00be CFE7     		b	.L76
 1233              	.LVL93:
 1234              	.L85:
 228:Core/Src/gif.c **** 			//Clear the tables 
 1235              		.loc 1 228 4 is_stmt 1 view .LVU382
 228:Core/Src/gif.c **** 			//Clear the tables 
 1236              		.loc 1 228 6 is_stmt 0 view .LVU383
 1237 00c0 B3F5805F 		cmp	r3, #4096
 1238 00c4 80F2C780 		bge	.L80
 230:Core/Src/gif.c **** 			for(i=0;i<gif->lzw->ClearCode;++i)gif->lzw->aPrefix[i]=i;
 1239              		.loc 1 230 4 is_stmt 1 view .LVU384
 1240 00c8 4FF40052 		mov	r2, #8192
 1241 00cc 0021     		movs	r1, #0
 1242              	.LVL94:
 230:Core/Src/gif.c **** 			for(i=0;i<gif->lzw->ClearCode;++i)gif->lzw->aPrefix[i]=i;
 1243              		.loc 1 230 4 is_stmt 0 view .LVU385
 1244 00ce 00F58170 		add	r0, r0, #258
 1245 00d2 FFF7FEFF 		bl	mymemset
 1246              	.LVL95:
 231:Core/Src/gif.c **** 			//Calculate the'special codes' independence of the initial code size
 1247              		.loc 1 231 4 is_stmt 1 view .LVU386
 231:Core/Src/gif.c **** 			//Calculate the'special codes' independence of the initial code size
 1248              		.loc 1 231 9 is_stmt 0 view .LVU387
 1249 00d6 0022     		movs	r2, #0
 231:Core/Src/gif.c **** 			//Calculate the'special codes' independence of the initial code size
 1250              		.loc 1 231 4 view .LVU388
 1251 00d8 04E0     		b	.L72
 1252              	.LVL96:
 1253              	.L73:
 231:Core/Src/gif.c **** 			//Calculate the'special codes' independence of the initial code size
 1254              		.loc 1 231 38 is_stmt 1 discriminator 3 view .LVU389
 231:Core/Src/gif.c **** 			//Calculate the'special codes' independence of the initial code size
 1255              		.loc 1 231 58 is_stmt 0 discriminator 3 view .LVU390
 1256 00da 1344     		add	r3, r3, r2
 1257 00dc 42F20211 		movw	r1, #8450
 1258 00e0 5A54     		strb	r2, [r3, r1]
 231:Core/Src/gif.c **** 			//Calculate the'special codes' independence of the initial code size
 1259              		.loc 1 231 34 is_stmt 1 discriminator 3 view .LVU391
 1260 00e2 0132     		adds	r2, r2, #1
 1261              	.LVL97:
 1262              	.L72:
 231:Core/Src/gif.c **** 			//Calculate the'special codes' independence of the initial code size
 1263              		.loc 1 231 12 discriminator 1 view .LVU392
 231:Core/Src/gif.c **** 			//Calculate the'special codes' independence of the initial code size
 1264              		.loc 1 231 17 is_stmt 0 discriminator 1 view .LVU393
 1265 00e4 D4F81834 		ldr	r3, [r4, #1048]
 231:Core/Src/gif.c **** 			//Calculate the'special codes' independence of the initial code size
 1266              		.loc 1 231 22 discriminator 1 view .LVU394
 1267 00e8 03F54051 		add	r1, r3, #12288
 1268 00ec D1F8E41C 		ldr	r1, [r1, #3300]
 231:Core/Src/gif.c **** 			//Calculate the'special codes' independence of the initial code size
 1269              		.loc 1 231 4 discriminator 1 view .LVU395
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccABaL1e.s 			page 29


 1270 00f0 9142     		cmp	r1, r2
 1271 00f2 F2DC     		bgt	.L73
 234:Core/Src/gif.c **** 			gif->lzw->MaxCodeSize=gif->lzw->ClearCode<<1;
 1272              		.loc 1 234 4 is_stmt 1 view .LVU396
 234:Core/Src/gif.c **** 			gif->lzw->MaxCodeSize=gif->lzw->ClearCode<<1;
 1273              		.loc 1 234 31 is_stmt 0 view .LVU397
 1274 00f4 03F54053 		add	r3, r3, #12288
 1275 00f8 D3F8D82C 		ldr	r2, [r3, #3288]
 1276              	.LVL98:
 234:Core/Src/gif.c **** 			gif->lzw->MaxCodeSize=gif->lzw->ClearCode<<1;
 1277              		.loc 1 234 44 view .LVU398
 1278 00fc 0132     		adds	r2, r2, #1
 234:Core/Src/gif.c **** 			gif->lzw->MaxCodeSize=gif->lzw->ClearCode<<1;
 1279              		.loc 1 234 22 view .LVU399
 1280 00fe C3F8D42C 		str	r2, [r3, #3284]
 235:Core/Src/gif.c **** 			gif->lzw->MaxCode=gif->lzw->ClearCode+2;
 1281              		.loc 1 235 4 is_stmt 1 view .LVU400
 235:Core/Src/gif.c **** 			gif->lzw->MaxCode=gif->lzw->ClearCode+2;
 1282              		.loc 1 235 29 is_stmt 0 view .LVU401
 1283 0102 D4F81834 		ldr	r3, [r4, #1048]
 235:Core/Src/gif.c **** 			gif->lzw->MaxCode=gif->lzw->ClearCode+2;
 1284              		.loc 1 235 34 view .LVU402
 1285 0106 03F54053 		add	r3, r3, #12288
 1286 010a D3F8E42C 		ldr	r2, [r3, #3300]
 235:Core/Src/gif.c **** 			gif->lzw->MaxCode=gif->lzw->ClearCode+2;
 1287              		.loc 1 235 45 view .LVU403
 1288 010e 5200     		lsls	r2, r2, #1
 235:Core/Src/gif.c **** 			gif->lzw->MaxCode=gif->lzw->ClearCode+2;
 1289              		.loc 1 235 25 view .LVU404
 1290 0110 C3F8E02C 		str	r2, [r3, #3296]
 236:Core/Src/gif.c **** 			gif->lzw->sp=gif->lzw->aDecompBuffer;
 1291              		.loc 1 236 4 is_stmt 1 view .LVU405
 236:Core/Src/gif.c **** 			gif->lzw->sp=gif->lzw->aDecompBuffer;
 1292              		.loc 1 236 25 is_stmt 0 view .LVU406
 1293 0114 D4F81834 		ldr	r3, [r4, #1048]
 236:Core/Src/gif.c **** 			gif->lzw->sp=gif->lzw->aDecompBuffer;
 1294              		.loc 1 236 30 view .LVU407
 1295 0118 03F54053 		add	r3, r3, #12288
 1296 011c D3F8E42C 		ldr	r2, [r3, #3300]
 236:Core/Src/gif.c **** 			gif->lzw->sp=gif->lzw->aDecompBuffer;
 1297              		.loc 1 236 41 view .LVU408
 1298 0120 0232     		adds	r2, r2, #2
 236:Core/Src/gif.c **** 			gif->lzw->sp=gif->lzw->aDecompBuffer;
 1299              		.loc 1 236 21 view .LVU409
 1300 0122 C3F8DC2C 		str	r2, [r3, #3292]
 237:Core/Src/gif.c **** 			//Read the first code from the stack after clear ingand initializing*/
 1301              		.loc 1 237 4 is_stmt 1 view .LVU410
 237:Core/Src/gif.c **** 			//Read the first code from the stack after clear ingand initializing*/
 1302              		.loc 1 237 20 is_stmt 0 view .LVU411
 1303 0126 D4F81834 		ldr	r3, [r4, #1048]
 237:Core/Src/gif.c **** 			//Read the first code from the stack after clear ingand initializing*/
 1304              		.loc 1 237 17 view .LVU412
 1305 012a 03F54452 		add	r2, r3, #12544
 1306 012e 0232     		adds	r2, r2, #2
 237:Core/Src/gif.c **** 			//Read the first code from the stack after clear ingand initializing*/
 1307              		.loc 1 237 16 view .LVU413
 1308 0130 03F54053 		add	r3, r3, #12288
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccABaL1e.s 			page 30


 1309 0134 C3F8BC2C 		str	r2, [r3, #3260]
 1310              	.L74:
 239:Core/Src/gif.c **** 			{
 1311              		.loc 1 239 4 is_stmt 1 discriminator 1 view .LVU414
 241:Core/Src/gif.c **** 			}while(gif->lzw->FirstCode==gif->lzw->ClearCode);
 1312              		.loc 1 241 5 discriminator 1 view .LVU415
 241:Core/Src/gif.c **** 			}while(gif->lzw->FirstCode==gif->lzw->ClearCode);
 1313              		.loc 1 241 8 is_stmt 0 discriminator 1 view .LVU416
 1314 0138 D4F81864 		ldr	r6, [r4, #1048]
 241:Core/Src/gif.c **** 			}while(gif->lzw->FirstCode==gif->lzw->ClearCode);
 1315              		.loc 1 241 25 discriminator 1 view .LVU417
 1316 013c 2146     		mov	r1, r4
 1317 013e 2846     		mov	r0, r5
 1318 0140 FFF7FEFF 		bl	gif_getnextcode
 1319              	.LVL99:
 241:Core/Src/gif.c **** 			}while(gif->lzw->FirstCode==gif->lzw->ClearCode);
 1320              		.loc 1 241 24 discriminator 1 view .LVU418
 1321 0144 06F54056 		add	r6, r6, #12288
 1322 0148 C6F8EC0C 		str	r0, [r6, #3308]
 242:Core/Src/gif.c **** 			gif->lzw->OldCode=gif->lzw->FirstCode;
 1323              		.loc 1 242 10 is_stmt 1 discriminator 1 view .LVU419
 242:Core/Src/gif.c **** 			gif->lzw->OldCode=gif->lzw->FirstCode;
 1324              		.loc 1 242 14 is_stmt 0 discriminator 1 view .LVU420
 1325 014c D4F81824 		ldr	r2, [r4, #1048]
 242:Core/Src/gif.c **** 			gif->lzw->OldCode=gif->lzw->FirstCode;
 1326              		.loc 1 242 19 discriminator 1 view .LVU421
 1327 0150 02F54053 		add	r3, r2, #12288
 1328 0154 D3F8EC1C 		ldr	r1, [r3, #3308]
 242:Core/Src/gif.c **** 			gif->lzw->OldCode=gif->lzw->FirstCode;
 1329              		.loc 1 242 40 discriminator 1 view .LVU422
 1330 0158 D3F8E43C 		ldr	r3, [r3, #3300]
 242:Core/Src/gif.c **** 			gif->lzw->OldCode=gif->lzw->FirstCode;
 1331              		.loc 1 242 4 discriminator 1 view .LVU423
 1332 015c 9942     		cmp	r1, r3
 1333 015e EBD0     		beq	.L74
 243:Core/Src/gif.c **** 			return gif->lzw->FirstCode;
 1334              		.loc 1 243 4 is_stmt 1 view .LVU424
 243:Core/Src/gif.c **** 			return gif->lzw->FirstCode;
 1335              		.loc 1 243 21 is_stmt 0 view .LVU425
 1336 0160 02F54052 		add	r2, r2, #12288
 1337 0164 C2F8F01C 		str	r1, [r2, #3312]
 244:Core/Src/gif.c **** 		}
 1338              		.loc 1 244 4 is_stmt 1 view .LVU426
 244:Core/Src/gif.c **** 		}
 1339              		.loc 1 244 14 is_stmt 0 view .LVU427
 1340 0168 D4F81834 		ldr	r3, [r4, #1048]
 244:Core/Src/gif.c **** 		}
 1341              		.loc 1 244 19 view .LVU428
 1342 016c 03F54053 		add	r3, r3, #12288
 1343 0170 D3F8EC0C 		ldr	r0, [r3, #3308]
 1344 0174 6EE0     		b	.L68
 1345              	.LVL100:
 1346              	.L82:
 223:Core/Src/gif.c **** 	{
 1347              		.loc 1 223 14 view .LVU429
 1348 0176 0846     		mov	r0, r1
 1349 0178 72E7     		b	.L76
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccABaL1e.s 			page 31


 1350              	.LVL101:
 1351              	.L86:
 259:Core/Src/gif.c **** 		}
 260:Core/Src/gif.c **** 		*(gif->lzw->sp)++=gif->lzw->FirstCode=gif->lzw->aPrefix[Code];
 1352              		.loc 1 260 3 is_stmt 1 view .LVU430
 1353              		.loc 1 260 58 is_stmt 0 view .LVU431
 1354 017a 1844     		add	r0, r0, r3
 1355              	.LVL102:
 1356              		.loc 1 260 58 view .LVU432
 1357 017c 42F20212 		movw	r2, #8450
 1358 0180 805C     		ldrb	r0, [r0, r2]	@ zero_extendqisi2
 1359              		.loc 1 260 40 view .LVU433
 1360 0182 03F54053 		add	r3, r3, #12288
 1361 0186 C3F8EC0C 		str	r0, [r3, #3308]
 1362              		.loc 1 260 8 view .LVU434
 1363 018a D4F81834 		ldr	r3, [r4, #1048]
 1364              		.loc 1 260 13 view .LVU435
 1365 018e 03F54053 		add	r3, r3, #12288
 1366 0192 D3F8BC2C 		ldr	r2, [r3, #3260]
 1367              		.loc 1 260 18 view .LVU436
 1368 0196 561C     		adds	r6, r2, #1
 1369 0198 C3F8BC6C 		str	r6, [r3, #3260]
 1370              		.loc 1 260 20 view .LVU437
 1371 019c 1070     		strb	r0, [r2]
 261:Core/Src/gif.c **** 		if((Code=gif->lzw->MaxCode)<(1<<MAX_NUM_LWZ_BITS))
 1372              		.loc 1 261 3 is_stmt 1 view .LVU438
 1373              		.loc 1 261 15 is_stmt 0 view .LVU439
 1374 019e D4F81834 		ldr	r3, [r4, #1048]
 1375              		.loc 1 261 11 view .LVU440
 1376 01a2 03F54052 		add	r2, r3, #12288
 1377 01a6 D2F8DC2C 		ldr	r2, [r2, #3292]
 1378              	.LVL103:
 1379              		.loc 1 261 5 view .LVU441
 1380 01aa B2F5805F 		cmp	r2, #4096
 1381 01ae 36DA     		bge	.L78
 262:Core/Src/gif.c **** 		{
 263:Core/Src/gif.c **** 			gif->lzw->aCode[Code]=gif->lzw->OldCode;
 1382              		.loc 1 263 4 is_stmt 1 view .LVU442
 1383              		.loc 1 263 34 is_stmt 0 view .LVU443
 1384 01b0 03F54050 		add	r0, r3, #12288
 1385 01b4 D0F8F00C 		ldr	r0, [r0, #3312]
 1386              		.loc 1 263 25 view .LVU444
 1387 01b8 02F18006 		add	r6, r2, #128
 1388 01bc 03EB4603 		add	r3, r3, r6, lsl #1
 1389 01c0 5880     		strh	r0, [r3, #2]	@ movhi
 264:Core/Src/gif.c **** 			gif->lzw->aPrefix[Code]=gif->lzw->FirstCode;
 1390              		.loc 1 264 4 is_stmt 1 view .LVU445
 1391              		.loc 1 264 31 is_stmt 0 view .LVU446
 1392 01c2 D4F81834 		ldr	r3, [r4, #1048]
 1393              		.loc 1 264 36 view .LVU447
 1394 01c6 03F54050 		add	r0, r3, #12288
 1395 01ca D0F8EC0C 		ldr	r0, [r0, #3308]
 1396              		.loc 1 264 27 view .LVU448
 1397 01ce 1344     		add	r3, r3, r2
 1398 01d0 42F20212 		movw	r2, #8450
 1399              	.LVL104:
 1400              		.loc 1 264 27 view .LVU449
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccABaL1e.s 			page 32


 1401 01d4 9854     		strb	r0, [r3, r2]
 265:Core/Src/gif.c **** 			++gif->lzw->MaxCode;
 1402              		.loc 1 265 4 is_stmt 1 view .LVU450
 1403              		.loc 1 265 9 is_stmt 0 view .LVU451
 1404 01d6 D4F81834 		ldr	r3, [r4, #1048]
 1405              		.loc 1 265 14 view .LVU452
 1406 01da 03F54053 		add	r3, r3, #12288
 1407 01de D3F8DC2C 		ldr	r2, [r3, #3292]
 1408              		.loc 1 265 4 view .LVU453
 1409 01e2 0132     		adds	r2, r2, #1
 1410 01e4 C3F8DC2C 		str	r2, [r3, #3292]
 266:Core/Src/gif.c **** 			if((gif->lzw->MaxCode>=gif->lzw->MaxCodeSize)&&(gif->lzw->MaxCodeSize<(1<<MAX_NUM_LWZ_BITS)))
 1411              		.loc 1 266 4 is_stmt 1 view .LVU454
 1412              		.loc 1 266 11 is_stmt 0 view .LVU455
 1413 01e8 D4F81824 		ldr	r2, [r4, #1048]
 1414              		.loc 1 266 16 view .LVU456
 1415 01ec 02F54053 		add	r3, r2, #12288
 1416 01f0 D3F8DC0C 		ldr	r0, [r3, #3292]
 1417              		.loc 1 266 35 view .LVU457
 1418 01f4 D3F8E03C 		ldr	r3, [r3, #3296]
 1419              		.loc 1 266 6 view .LVU458
 1420 01f8 9842     		cmp	r0, r3
 1421 01fa 10DB     		blt	.L78
 1422              		.loc 1 266 49 discriminator 1 view .LVU459
 1423 01fc B3F5805F 		cmp	r3, #4096
 1424 0200 0DDA     		bge	.L78
 267:Core/Src/gif.c **** 			{
 268:Core/Src/gif.c **** 				gif->lzw->MaxCodeSize<<=1;
 1425              		.loc 1 268 5 is_stmt 1 view .LVU460
 1426              		.loc 1 268 26 is_stmt 0 view .LVU461
 1427 0202 02F54052 		add	r2, r2, #12288
 1428 0206 5B00     		lsls	r3, r3, #1
 1429 0208 C2F8E03C 		str	r3, [r2, #3296]
 269:Core/Src/gif.c **** 				++gif->lzw->CodeSize;
 1430              		.loc 1 269 5 is_stmt 1 view .LVU462
 1431              		.loc 1 269 10 is_stmt 0 view .LVU463
 1432 020c D4F81834 		ldr	r3, [r4, #1048]
 1433              		.loc 1 269 15 view .LVU464
 1434 0210 03F54053 		add	r3, r3, #12288
 1435 0214 D3F8D42C 		ldr	r2, [r3, #3284]
 1436              		.loc 1 269 5 view .LVU465
 1437 0218 0132     		adds	r2, r2, #1
 1438 021a C3F8D42C 		str	r2, [r3, #3284]
 1439              	.LVL105:
 1440              	.L78:
 270:Core/Src/gif.c **** 			}
 271:Core/Src/gif.c **** 		}
 272:Core/Src/gif.c **** 		gif->lzw->OldCode=Incode;
 1441              		.loc 1 272 3 is_stmt 1 view .LVU466
 1442              		.loc 1 272 6 is_stmt 0 view .LVU467
 1443 021e D4F81834 		ldr	r3, [r4, #1048]
 1444              		.loc 1 272 20 view .LVU468
 1445 0222 03F54053 		add	r3, r3, #12288
 1446 0226 C3F8F01C 		str	r1, [r3, #3312]
 273:Core/Src/gif.c **** 		if(gif->lzw->sp>gif->lzw->aDecompBuffer)return *--(gif->lzw->sp);
 1447              		.loc 1 273 3 is_stmt 1 view .LVU469
 1448              		.loc 1 273 9 is_stmt 0 view .LVU470
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccABaL1e.s 			page 33


 1449 022a D4F81824 		ldr	r2, [r4, #1048]
 1450              		.loc 1 273 14 view .LVU471
 1451 022e 02F54053 		add	r3, r2, #12288
 1452 0232 D3F8BC1C 		ldr	r1, [r3, #3260]
 1453              	.LVL106:
 1454              		.loc 1 273 18 view .LVU472
 1455 0236 02F54453 		add	r3, r2, #12544
 1456 023a 0233     		adds	r3, r3, #2
 1457              		.loc 1 273 5 view .LVU473
 1458 023c 9942     		cmp	r1, r3
 1459 023e 7FF6E2AE 		bls	.L69
 1460              		.loc 1 273 43 is_stmt 1 discriminator 1 view .LVU474
 1461              		.loc 1 273 51 is_stmt 0 discriminator 1 view .LVU475
 1462 0242 4B1E     		subs	r3, r1, #1
 1463              		.loc 1 273 50 discriminator 1 view .LVU476
 1464 0244 02F54052 		add	r2, r2, #12288
 1465 0248 C2F8BC3C 		str	r3, [r2, #3260]
 1466 024c 11F8010C 		ldrb	r0, [r1, #-1]	@ zero_extendqisi2
 1467 0250 00E0     		b	.L68
 1468              	.LVL107:
 1469              	.L84:
 274:Core/Src/gif.c **** 	}
 275:Core/Src/gif.c **** 	return Code;
 1470              		.loc 1 275 9 view .LVU477
 1471 0252 0846     		mov	r0, r1
 1472              	.LVL108:
 1473              	.L68:
 276:Core/Src/gif.c **** }
 1474              		.loc 1 276 1 view .LVU478
 1475 0254 70BD     		pop	{r4, r5, r6, pc}
 1476              	.LVL109:
 1477              	.L80:
 228:Core/Src/gif.c **** 			//Clear the tables 
 1478              		.loc 1 228 57 view .LVU479
 1479 0256 4FF0FF30 		mov	r0, #-1
 1480 025a FBE7     		b	.L68
 1481              	.L81:
 246:Core/Src/gif.c **** 		Incode=Code;
 1482              		.loc 1 246 37 view .LVU480
 1483 025c 6FF00100 		mvn	r0, #1
 1484 0260 F8E7     		b	.L68
 1485              		.cfi_endproc
 1486              	.LFE140:
 1488              		.section	.text.gif_dispimage,"ax",%progbits
 1489              		.align	1
 1490              		.global	gif_dispimage
 1491              		.syntax unified
 1492              		.thumb
 1493              		.thumb_func
 1494              		.fpu fpv4-sp-d16
 1496              	gif_dispimage:
 1497              	.LVL110:
 1498              	.LFB141:
 277:Core/Src/gif.c **** //DispGIFImage		 
 278:Core/Src/gif.c **** //Purpose:
 279:Core/Src/gif.c **** //   This routine draws a GIF image from the current pointer which should point to a
 280:Core/Src/gif.c **** //   valid GIF data block. The size of the desired image is given in the image descriptor.
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccABaL1e.s 			page 34


 281:Core/Src/gif.c **** //Return value:
 282:Core/Src/gif.c **** //  0 if succeed
 283:Core/Src/gif.c **** //  1 if not succeed
 284:Core/Src/gif.c **** //Parameters:
 285:Core/Src/gif.c **** //  pDescriptor  - Points to a IMAGE_DESCRIPTOR structure, which contains infos about size, colors 
 286:Core/Src/gif.c **** //  x0, y0       - Obvious.
 287:Core/Src/gif.c **** //  Transparency - Color index which should be treated as transparent.
 288:Core/Src/gif.c **** //  Disposal     - Contains the disposal method of the previous image. If Disposal == 2, the transp
 289:Core/Src/gif.c **** //                 of the image are rendered with the background color.
 290:Core/Src/gif.c **** u8 gif_dispimage(FIL *gfile,gif89a* gif,u16 x0,u16 y0,int Transparency, u8 Disposal) 
 291:Core/Src/gif.c **** {
 1499              		.loc 1 291 1 is_stmt 1 view -0
 1500              		.cfi_startproc
 1501              		@ args = 8, pretend = 0, frame = 56
 1502              		@ frame_needed = 0, uses_anonymous_args = 0
 1503              		.loc 1 291 1 is_stmt 0 view .LVU482
 1504 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1505              	.LCFI22:
 1506              		.cfi_def_cfa_offset 36
 1507              		.cfi_offset 4, -36
 1508              		.cfi_offset 5, -32
 1509              		.cfi_offset 6, -28
 1510              		.cfi_offset 7, -24
 1511              		.cfi_offset 8, -20
 1512              		.cfi_offset 9, -16
 1513              		.cfi_offset 10, -12
 1514              		.cfi_offset 11, -8
 1515              		.cfi_offset 14, -4
 1516 0004 8FB0     		sub	sp, sp, #60
 1517              	.LCFI23:
 1518              		.cfi_def_cfa_offset 96
 1519 0006 0290     		str	r0, [sp, #8]
 1520 0008 8846     		mov	r8, r1
 1521 000a 0792     		str	r2, [sp, #28]
 1522 000c 1C46     		mov	r4, r3
 1523 000e 0B93     		str	r3, [sp, #44]
 1524 0010 DDF860A0 		ldr	r10, [sp, #96]
 1525 0014 9DF86410 		ldrb	r1, [sp, #100]	@ zero_extendqisi2
 1526              	.LVL111:
 1527              		.loc 1 291 1 view .LVU483
 1528 0018 0491     		str	r1, [sp, #16]
 292:Core/Src/gif.c **** 	u32 readed;	   
 1529              		.loc 1 292 2 is_stmt 1 view .LVU484
 293:Core/Src/gif.c ****    	u8 lzwlen;
 1530              		.loc 1 293 5 view .LVU485
 294:Core/Src/gif.c **** 	int Index,OldIndex,XPos,YPos,YCnt,Pass,Interlace,XEnd;
 1531              		.loc 1 294 2 view .LVU486
 295:Core/Src/gif.c **** 	int Width,Height,Cnt,ColorIndex;
 1532              		.loc 1 295 2 view .LVU487
 296:Core/Src/gif.c **** 	u16 bkcolor;
 1533              		.loc 1 296 2 view .LVU488
 297:Core/Src/gif.c **** 	u16 *pTrans;
 1534              		.loc 1 297 2 view .LVU489
 298:Core/Src/gif.c **** 
 299:Core/Src/gif.c **** 	Width=gif->gifISD.width;
 1535              		.loc 1 299 2 view .LVU490
 1536              		.loc 1 299 19 is_stmt 0 view .LVU491
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccABaL1e.s 			page 35


 1537 001a B8F80C90 		ldrh	r9, [r8, #12]
 1538              	.LVL112:
 300:Core/Src/gif.c **** 	Height=gif->gifISD.height;
 1539              		.loc 1 300 2 is_stmt 1 view .LVU492
 1540              		.loc 1 300 20 is_stmt 0 view .LVU493
 1541 001e B8F80E10 		ldrh	r1, [r8, #14]
 1542 0022 0691     		str	r1, [sp, #24]
 1543              	.LVL113:
 301:Core/Src/gif.c **** 	XEnd=Width+x0-1;
 1544              		.loc 1 301 2 is_stmt 1 view .LVU494
 1545              		.loc 1 301 12 is_stmt 0 view .LVU495
 1546 0024 9144     		add	r9, r9, r2
 1547              	.LVL114:
 1548              		.loc 1 301 6 view .LVU496
 1549 0026 09F1FF39 		add	r9, r9, #-1
 1550              	.LVL115:
 302:Core/Src/gif.c **** 	bkcolor=gif->colortbl[gif->gifLSD.bkcindex];
 1551              		.loc 1 302 2 is_stmt 1 view .LVU497
 1552              		.loc 1 302 35 is_stmt 0 view .LVU498
 1553 002a 98F80530 		ldrb	r3, [r8, #5]	@ zero_extendqisi2
 1554              	.LVL116:
 1555              		.loc 1 302 9 view .LVU499
 1556 002e 0833     		adds	r3, r3, #8
 1557 0030 08EB4303 		add	r3, r8, r3, lsl #1
 1558 0034 5A88     		ldrh	r2, [r3, #2]
 1559              	.LVL117:
 1560              		.loc 1 302 9 view .LVU500
 1561 0036 0892     		str	r2, [sp, #32]
 1562              	.LVL118:
 303:Core/Src/gif.c **** 	pTrans=(u16*)gif->colortbl;
 1563              		.loc 1 303 2 is_stmt 1 view .LVU501
 1564              		.loc 1 303 8 is_stmt 0 view .LVU502
 1565 0038 08F1120B 		add	fp, r8, #18
 1566              	.LVL119:
 304:Core/Src/gif.c **** 	f_read(gfile,&lzwlen,1,(UINT*)&readed);//得到LZW长度	 
 1567              		.loc 1 304 2 is_stmt 1 view .LVU503
 1568 003c 0DAB     		add	r3, sp, #52
 1569 003e 0122     		movs	r2, #1
 1570 0040 0DF13301 		add	r1, sp, #51
 1571              	.LVL120:
 1572              		.loc 1 304 2 is_stmt 0 view .LVU504
 1573 0044 FFF7FEFF 		bl	f_read
 1574              	.LVL121:
 305:Core/Src/gif.c **** 	gif_initlzw(gif,lzwlen);//Initialize the LZW stack with the LZW code size 
 1575              		.loc 1 305 2 is_stmt 1 view .LVU505
 1576 0048 9DF83310 		ldrb	r1, [sp, #51]	@ zero_extendqisi2
 1577 004c 4046     		mov	r0, r8
 1578 004e FFF7FEFF 		bl	gif_initlzw
 1579              	.LVL122:
 306:Core/Src/gif.c **** 	Interlace=gif->gifISD.flag&0x40;//是否交织编码
 1580              		.loc 1 306 2 view .LVU506
 1581              		.loc 1 306 23 is_stmt 0 view .LVU507
 1582 0052 98F81030 		ldrb	r3, [r8, #16]	@ zero_extendqisi2
 1583 0056 03F04002 		and	r2, r3, #64
 1584 005a 0992     		str	r2, [sp, #36]
 1585              	.LVL123:
 307:Core/Src/gif.c **** 	for(YCnt=0,YPos=y0,Pass=0;YCnt<Height;YCnt++)
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccABaL1e.s 			page 36


 1586              		.loc 1 307 2 is_stmt 1 view .LVU508
 1587              		.loc 1 307 17 is_stmt 0 view .LVU509
 1588 005c 0194     		str	r4, [sp, #4]
 1589              		.loc 1 307 25 view .LVU510
 1590 005e 0023     		movs	r3, #0
 1591 0060 0A93     		str	r3, [sp, #40]
 1592              		.loc 1 307 10 view .LVU511
 1593 0062 0593     		str	r3, [sp, #20]
 1594              	.LVL124:
 1595              	.L88:
 1596              		.loc 1 307 28 is_stmt 1 discriminator 1 view .LVU512
 1597              		.loc 1 307 2 is_stmt 0 discriminator 1 view .LVU513
 1598 0064 059B     		ldr	r3, [sp, #20]
 1599 0066 069A     		ldr	r2, [sp, #24]
 1600 0068 9342     		cmp	r3, r2
 1601 006a 80F2B180 		bge	.L112
 308:Core/Src/gif.c **** 	{
 309:Core/Src/gif.c **** 		Cnt=0;
 310:Core/Src/gif.c **** 		OldIndex=-1;
 311:Core/Src/gif.c **** 		for(XPos=x0;XPos<=XEnd;XPos++)
 1602              		.loc 1 311 11 view .LVU514
 1603 006e 079D     		ldr	r5, [sp, #28]
 309:Core/Src/gif.c **** 		OldIndex=-1;
 1604              		.loc 1 309 6 view .LVU515
 1605 0070 0026     		movs	r6, #0
 310:Core/Src/gif.c **** 		for(XPos=x0;XPos<=XEnd;XPos++)
 1606              		.loc 1 310 11 view .LVU516
 1607 0072 4FF0FF37 		mov	r7, #-1
 1608 0076 08E0     		b	.L105
 1609              	.LVL125:
 1610              	.L89:
 312:Core/Src/gif.c **** 		{
 313:Core/Src/gif.c **** 			if(gif->lzw->sp>gif->lzw->aDecompBuffer)Index=*--(gif->lzw->sp);
 314:Core/Src/gif.c **** 		    else Index=gif_getnextbyte(gfile,gif);	   
 1611              		.loc 1 314 12 is_stmt 1 view .LVU517
 1612              		.loc 1 314 18 is_stmt 0 view .LVU518
 1613 0078 4146     		mov	r1, r8
 1614 007a 0298     		ldr	r0, [sp, #8]
 1615 007c FFF7FEFF 		bl	gif_getnextbyte
 1616              	.LVL126:
 1617 0080 0446     		mov	r4, r0
 1618              	.LVL127:
 1619              		.loc 1 314 18 view .LVU519
 1620 0082 16E0     		b	.L90
 1621              	.LVL128:
 1622              	.L114:
 315:Core/Src/gif.c **** 			if(Index==-2)return 0;//Endcode     
 316:Core/Src/gif.c **** 			if((Index<0)||(Index>=gif->numcolors))
 317:Core/Src/gif.c **** 			{
 318:Core/Src/gif.c **** 				//IfIndex out of legal range stop decompressing
 319:Core/Src/gif.c **** 				return 1;//Error
 320:Core/Src/gif.c **** 			}
 321:Core/Src/gif.c **** 			//If current index equals old index increment counter
 322:Core/Src/gif.c **** 			if((Index==OldIndex)&&(XPos<=XEnd))Cnt++;
 1623              		.loc 1 322 39 is_stmt 1 discriminator 2 view .LVU520
 1624              		.loc 1 322 42 is_stmt 0 discriminator 2 view .LVU521
 1625 0084 0136     		adds	r6, r6, #1
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccABaL1e.s 			page 37


 1626              	.LVL129:
 1627              	.L93:
 323:Core/Src/gif.c **** 	 		else
 324:Core/Src/gif.c **** 			{
 325:Core/Src/gif.c **** 				if(Cnt)
 326:Core/Src/gif.c **** 				{
 327:Core/Src/gif.c **** 					if(OldIndex!=Transparency)
 328:Core/Src/gif.c **** 					{									    
 329:Core/Src/gif.c **** 						pic_phy.draw_hline(XPos-Cnt-1,YPos,Cnt+1,*(pTrans+OldIndex));
 330:Core/Src/gif.c **** 					}else if(Disposal==2)
 331:Core/Src/gif.c **** 					{
 332:Core/Src/gif.c **** 						pic_phy.draw_hline(XPos-Cnt-1,YPos,Cnt+1,bkcolor);
 333:Core/Src/gif.c **** 					}
 334:Core/Src/gif.c **** 					Cnt=0;
 335:Core/Src/gif.c **** 				}else
 336:Core/Src/gif.c **** 				{
 337:Core/Src/gif.c **** 					if(OldIndex>=0)
 338:Core/Src/gif.c **** 					{
 339:Core/Src/gif.c **** 						if(OldIndex!=Transparency)pic_phy.draw_point(XPos-1,YPos,*(pTrans+OldIndex));
 340:Core/Src/gif.c **** 					 	else if(Disposal==2)pic_phy.draw_point(XPos-1,YPos,bkcolor); 
 341:Core/Src/gif.c **** 					}
 342:Core/Src/gif.c **** 				}
 343:Core/Src/gif.c **** 			}
 344:Core/Src/gif.c **** 			OldIndex=Index;
 1628              		.loc 1 344 4 is_stmt 1 discriminator 2 view .LVU522
 311:Core/Src/gif.c **** 		{
 1629              		.loc 1 311 26 discriminator 2 view .LVU523
 311:Core/Src/gif.c **** 		{
 1630              		.loc 1 311 30 is_stmt 0 discriminator 2 view .LVU524
 1631 0086 0135     		adds	r5, r5, #1
 1632              	.LVL130:
 1633              		.loc 1 344 12 discriminator 2 view .LVU525
 1634 0088 2746     		mov	r7, r4
 1635              	.LVL131:
 1636              	.L105:
 311:Core/Src/gif.c **** 		{
 1637              		.loc 1 311 15 is_stmt 1 discriminator 1 view .LVU526
 311:Core/Src/gif.c **** 		{
 1638              		.loc 1 311 3 is_stmt 0 discriminator 1 view .LVU527
 1639 008a 4D45     		cmp	r5, r9
 1640 008c 62DC     		bgt	.L113
 313:Core/Src/gif.c **** 		    else Index=gif_getnextbyte(gfile,gif);	   
 1641              		.loc 1 313 4 is_stmt 1 view .LVU528
 313:Core/Src/gif.c **** 		    else Index=gif_getnextbyte(gfile,gif);	   
 1642              		.loc 1 313 10 is_stmt 0 view .LVU529
 1643 008e D8F81834 		ldr	r3, [r8, #1048]
 313:Core/Src/gif.c **** 		    else Index=gif_getnextbyte(gfile,gif);	   
 1644              		.loc 1 313 15 view .LVU530
 1645 0092 03F54052 		add	r2, r3, #12288
 1646 0096 D2F8BC1C 		ldr	r1, [r2, #3260]
 313:Core/Src/gif.c **** 		    else Index=gif_getnextbyte(gfile,gif);	   
 1647              		.loc 1 313 19 view .LVU531
 1648 009a 03F54452 		add	r2, r3, #12544
 1649 009e 0232     		adds	r2, r2, #2
 313:Core/Src/gif.c **** 		    else Index=gif_getnextbyte(gfile,gif);	   
 1650              		.loc 1 313 6 view .LVU532
 1651 00a0 9142     		cmp	r1, r2
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccABaL1e.s 			page 38


 1652 00a2 E9D9     		bls	.L89
 313:Core/Src/gif.c **** 		    else Index=gif_getnextbyte(gfile,gif);	   
 1653              		.loc 1 313 44 is_stmt 1 discriminator 1 view .LVU533
 313:Core/Src/gif.c **** 		    else Index=gif_getnextbyte(gfile,gif);	   
 1654              		.loc 1 313 51 is_stmt 0 discriminator 1 view .LVU534
 1655 00a4 4A1E     		subs	r2, r1, #1
 313:Core/Src/gif.c **** 		    else Index=gif_getnextbyte(gfile,gif);	   
 1656              		.loc 1 313 49 discriminator 1 view .LVU535
 1657 00a6 03F54053 		add	r3, r3, #12288
 1658 00aa C3F8BC2C 		str	r2, [r3, #3260]
 313:Core/Src/gif.c **** 		    else Index=gif_getnextbyte(gfile,gif);	   
 1659              		.loc 1 313 50 discriminator 1 view .LVU536
 1660 00ae 11F8014C 		ldrb	r4, [r1, #-1]	@ zero_extendqisi2
 1661              	.LVL132:
 1662              	.L90:
 315:Core/Src/gif.c **** 			if((Index<0)||(Index>=gif->numcolors))
 1663              		.loc 1 315 4 is_stmt 1 view .LVU537
 315:Core/Src/gif.c **** 			if((Index<0)||(Index>=gif->numcolors))
 1664              		.loc 1 315 6 is_stmt 0 view .LVU538
 1665 00b2 14F1020F 		cmn	r4, #2
 1666 00b6 00F08D80 		beq	.L106
 316:Core/Src/gif.c **** 			{
 1667              		.loc 1 316 4 is_stmt 1 view .LVU539
 316:Core/Src/gif.c **** 			{
 1668              		.loc 1 316 6 is_stmt 0 view .LVU540
 1669 00ba 002C     		cmp	r4, #0
 1670 00bc C0F28E80 		blt	.L107
 316:Core/Src/gif.c **** 			{
 1671              		.loc 1 316 29 discriminator 1 view .LVU541
 1672 00c0 B8F81234 		ldrh	r3, [r8, #1042]
 316:Core/Src/gif.c **** 			{
 1673              		.loc 1 316 16 discriminator 1 view .LVU542
 1674 00c4 A342     		cmp	r3, r4
 1675 00c6 40F38B80 		ble	.L108
 322:Core/Src/gif.c **** 	 		else
 1676              		.loc 1 322 4 is_stmt 1 view .LVU543
 322:Core/Src/gif.c **** 	 		else
 1677              		.loc 1 322 6 is_stmt 0 view .LVU544
 1678 00ca BC42     		cmp	r4, r7
 1679 00cc DAD0     		beq	.L114
 325:Core/Src/gif.c **** 				{
 1680              		.loc 1 325 5 is_stmt 1 view .LVU545
 325:Core/Src/gif.c **** 				{
 1681              		.loc 1 325 7 is_stmt 0 view .LVU546
 1682 00ce 3EB3     		cbz	r6, .L94
 327:Core/Src/gif.c **** 					{									    
 1683              		.loc 1 327 6 is_stmt 1 view .LVU547
 327:Core/Src/gif.c **** 					{									    
 1684              		.loc 1 327 8 is_stmt 0 view .LVU548
 1685 00d0 5745     		cmp	r7, r10
 1686 00d2 11D0     		beq	.L95
 329:Core/Src/gif.c **** 					}else if(Disposal==2)
 1687              		.loc 1 329 7 is_stmt 1 view .LVU549
 329:Core/Src/gif.c **** 					}else if(Disposal==2)
 1688              		.loc 1 329 14 is_stmt 0 view .LVU550
 1689 00d4 434B     		ldr	r3, .L117
 1690 00d6 DB68     		ldr	r3, [r3, #12]
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccABaL1e.s 			page 39


 1691 00d8 0393     		str	r3, [sp, #12]
 329:Core/Src/gif.c **** 					}else if(Disposal==2)
 1692              		.loc 1 329 30 view .LVU551
 1693 00da B6B2     		uxth	r6, r6
 1694              	.LVL133:
 329:Core/Src/gif.c **** 					}else if(Disposal==2)
 1695              		.loc 1 329 30 view .LVU552
 1696 00dc A81B     		subs	r0, r5, r6
 1697 00de 80B2     		uxth	r0, r0
 329:Core/Src/gif.c **** 					}else if(Disposal==2)
 1698              		.loc 1 329 7 view .LVU553
 1699 00e0 0136     		adds	r6, r6, #1
 1700 00e2 0138     		subs	r0, r0, #1
 1701 00e4 3BF81730 		ldrh	r3, [fp, r7, lsl #1]
 1702 00e8 B2B2     		uxth	r2, r6
 1703 00ea BDF80410 		ldrh	r1, [sp, #4]
 1704 00ee 80B2     		uxth	r0, r0
 1705 00f0 039E     		ldr	r6, [sp, #12]
 1706 00f2 B047     		blx	r6
 1707              	.LVL134:
 334:Core/Src/gif.c **** 				}else
 1708              		.loc 1 334 9 view .LVU554
 1709 00f4 0026     		movs	r6, #0
 1710 00f6 C6E7     		b	.L93
 1711              	.LVL135:
 1712              	.L95:
 330:Core/Src/gif.c **** 					{
 1713              		.loc 1 330 12 is_stmt 1 view .LVU555
 330:Core/Src/gif.c **** 					{
 1714              		.loc 1 330 14 is_stmt 0 view .LVU556
 1715 00f8 049B     		ldr	r3, [sp, #16]
 1716 00fa 022B     		cmp	r3, #2
 1717 00fc 01D0     		beq	.L115
 334:Core/Src/gif.c **** 				}else
 1718              		.loc 1 334 9 view .LVU557
 1719 00fe 0026     		movs	r6, #0
 1720              	.LVL136:
 334:Core/Src/gif.c **** 				}else
 1721              		.loc 1 334 9 view .LVU558
 1722 0100 C1E7     		b	.L93
 1723              	.LVL137:
 1724              	.L115:
 332:Core/Src/gif.c **** 					}
 1725              		.loc 1 332 7 is_stmt 1 view .LVU559
 332:Core/Src/gif.c **** 					}
 1726              		.loc 1 332 14 is_stmt 0 view .LVU560
 1727 0102 384B     		ldr	r3, .L117
 1728 0104 DF68     		ldr	r7, [r3, #12]
 1729              	.LVL138:
 332:Core/Src/gif.c **** 					}
 1730              		.loc 1 332 30 view .LVU561
 1731 0106 B6B2     		uxth	r6, r6
 1732              	.LVL139:
 332:Core/Src/gif.c **** 					}
 1733              		.loc 1 332 30 view .LVU562
 1734 0108 A81B     		subs	r0, r5, r6
 1735 010a 80B2     		uxth	r0, r0
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccABaL1e.s 			page 40


 332:Core/Src/gif.c **** 					}
 1736              		.loc 1 332 7 view .LVU563
 1737 010c 0136     		adds	r6, r6, #1
 1738 010e 0138     		subs	r0, r0, #1
 1739 0110 089B     		ldr	r3, [sp, #32]
 1740 0112 B2B2     		uxth	r2, r6
 1741 0114 BDF80410 		ldrh	r1, [sp, #4]
 1742 0118 80B2     		uxth	r0, r0
 1743 011a B847     		blx	r7
 1744              	.LVL140:
 334:Core/Src/gif.c **** 				}else
 1745              		.loc 1 334 9 view .LVU564
 1746 011c 0026     		movs	r6, #0
 1747 011e B2E7     		b	.L93
 1748              	.LVL141:
 1749              	.L94:
 337:Core/Src/gif.c **** 					{
 1750              		.loc 1 337 6 is_stmt 1 view .LVU565
 337:Core/Src/gif.c **** 					{
 1751              		.loc 1 337 8 is_stmt 0 view .LVU566
 1752 0120 002F     		cmp	r7, #0
 1753 0122 B0DB     		blt	.L93
 339:Core/Src/gif.c **** 					 	else if(Disposal==2)pic_phy.draw_point(XPos-1,YPos,bkcolor); 
 1754              		.loc 1 339 7 is_stmt 1 view .LVU567
 339:Core/Src/gif.c **** 					 	else if(Disposal==2)pic_phy.draw_point(XPos-1,YPos,bkcolor); 
 1755              		.loc 1 339 9 is_stmt 0 view .LVU568
 1756 0124 5745     		cmp	r7, r10
 1757 0126 09D0     		beq	.L96
 339:Core/Src/gif.c **** 					 	else if(Disposal==2)pic_phy.draw_point(XPos-1,YPos,bkcolor); 
 1758              		.loc 1 339 33 is_stmt 1 discriminator 1 view .LVU569
 339:Core/Src/gif.c **** 					 	else if(Disposal==2)pic_phy.draw_point(XPos-1,YPos,bkcolor); 
 1759              		.loc 1 339 40 is_stmt 0 discriminator 1 view .LVU570
 1760 0128 2E4B     		ldr	r3, .L117
 1761 012a 5B68     		ldr	r3, [r3, #4]
 339:Core/Src/gif.c **** 					 	else if(Disposal==2)pic_phy.draw_point(XPos-1,YPos,bkcolor); 
 1762              		.loc 1 339 33 discriminator 1 view .LVU571
 1763 012c 681E     		subs	r0, r5, #1
 1764 012e 3BF81720 		ldrh	r2, [fp, r7, lsl #1]
 1765 0132 BDF80410 		ldrh	r1, [sp, #4]
 1766 0136 80B2     		uxth	r0, r0
 1767 0138 9847     		blx	r3
 1768              	.LVL142:
 1769 013a A4E7     		b	.L93
 1770              	.L96:
 340:Core/Src/gif.c **** 					}
 1771              		.loc 1 340 13 is_stmt 1 view .LVU572
 340:Core/Src/gif.c **** 					}
 1772              		.loc 1 340 15 is_stmt 0 view .LVU573
 1773 013c 049B     		ldr	r3, [sp, #16]
 1774 013e 022B     		cmp	r3, #2
 1775 0140 A1D1     		bne	.L93
 340:Core/Src/gif.c **** 					}
 1776              		.loc 1 340 28 is_stmt 1 discriminator 1 view .LVU574
 340:Core/Src/gif.c **** 					}
 1777              		.loc 1 340 35 is_stmt 0 discriminator 1 view .LVU575
 1778 0142 284B     		ldr	r3, .L117
 1779 0144 5B68     		ldr	r3, [r3, #4]
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccABaL1e.s 			page 41


 340:Core/Src/gif.c **** 					}
 1780              		.loc 1 340 28 discriminator 1 view .LVU576
 1781 0146 681E     		subs	r0, r5, #1
 1782 0148 089A     		ldr	r2, [sp, #32]
 1783 014a BDF80410 		ldrh	r1, [sp, #4]
 1784 014e 80B2     		uxth	r0, r0
 1785 0150 9847     		blx	r3
 1786              	.LVL143:
 1787 0152 98E7     		b	.L93
 1788              	.LVL144:
 1789              	.L113:
 345:Core/Src/gif.c **** 		}
 346:Core/Src/gif.c **** 		if((OldIndex!=Transparency)||(Disposal==2))
 1790              		.loc 1 346 3 is_stmt 1 view .LVU577
 1791              		.loc 1 346 5 is_stmt 0 view .LVU578
 1792 0154 5745     		cmp	r7, r10
 1793 0156 25D0     		beq	.L116
 1794              	.L98:
 347:Core/Src/gif.c **** 		{
 348:Core/Src/gif.c **** 			if(OldIndex!=Transparency)ColorIndex=*(pTrans+OldIndex);
 1795              		.loc 1 348 4 is_stmt 1 view .LVU579
 1796              		.loc 1 348 6 is_stmt 0 view .LVU580
 1797 0158 5745     		cmp	r7, r10
 1798 015a 27D0     		beq	.L100
 1799              		.loc 1 348 30 is_stmt 1 discriminator 1 view .LVU581
 1800              		.loc 1 348 41 is_stmt 0 discriminator 1 view .LVU582
 1801 015c 3BF81730 		ldrh	r3, [fp, r7, lsl #1]
 1802              	.LVL145:
 1803              	.L101:
 349:Core/Src/gif.c **** 		    else ColorIndex=bkcolor;
 350:Core/Src/gif.c **** 	 		if(Cnt)
 1804              		.loc 1 350 5 is_stmt 1 view .LVU583
 1805              		.loc 1 350 7 is_stmt 0 view .LVU584
 1806 0160 36B3     		cbz	r6, .L102
 351:Core/Src/gif.c **** 			{
 352:Core/Src/gif.c **** 				pic_phy.draw_hline(XPos-Cnt-1,YPos,Cnt+1,ColorIndex);
 1807              		.loc 1 352 5 is_stmt 1 view .LVU585
 1808              		.loc 1 352 12 is_stmt 0 view .LVU586
 1809 0162 204A     		ldr	r2, .L117
 1810 0164 D468     		ldr	r4, [r2, #12]
 1811              		.loc 1 352 28 view .LVU587
 1812 0166 B6B2     		uxth	r6, r6
 1813              	.LVL146:
 1814              		.loc 1 352 28 view .LVU588
 1815 0168 A81B     		subs	r0, r5, r6
 1816 016a 80B2     		uxth	r0, r0
 1817              		.loc 1 352 5 view .LVU589
 1818 016c 0136     		adds	r6, r6, #1
 1819 016e 0138     		subs	r0, r0, #1
 1820 0170 B2B2     		uxth	r2, r6
 1821 0172 BDF80410 		ldrh	r1, [sp, #4]
 1822 0176 80B2     		uxth	r0, r0
 1823 0178 A047     		blx	r4
 1824              	.LVL147:
 1825              	.L99:
 353:Core/Src/gif.c **** 			}else pic_phy.draw_point(XEnd,YPos,ColorIndex);	 
 354:Core/Src/gif.c **** 		}
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccABaL1e.s 			page 42


 355:Core/Src/gif.c **** 		//Adjust YPos if image is interlaced 
 356:Core/Src/gif.c **** 		if(Interlace)//交织编码
 1826              		.loc 1 356 3 is_stmt 1 view .LVU590
 1827              		.loc 1 356 5 is_stmt 0 view .LVU591
 1828 017a 099B     		ldr	r3, [sp, #36]
 1829 017c 0BB3     		cbz	r3, .L103
 357:Core/Src/gif.c **** 		{
 358:Core/Src/gif.c **** 			YPos+=_aInterlaceOffset[Pass];
 1830              		.loc 1 358 4 is_stmt 1 view .LVU592
 1831              		.loc 1 358 27 is_stmt 0 view .LVU593
 1832 017e 1A4B     		ldr	r3, .L117+4
 1833 0180 0A9A     		ldr	r2, [sp, #40]
 1834 0182 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 1835              		.loc 1 358 8 view .LVU594
 1836 0184 0199     		ldr	r1, [sp, #4]
 1837 0186 1944     		add	r1, r1, r3
 1838 0188 0B46     		mov	r3, r1
 1839 018a 0191     		str	r1, [sp, #4]
 1840              	.LVL148:
 359:Core/Src/gif.c **** 			if((YPos-y0)>=Height)
 1841              		.loc 1 359 4 is_stmt 1 view .LVU595
 1842              		.loc 1 359 12 is_stmt 0 view .LVU596
 1843 018c 0B99     		ldr	r1, [sp, #44]
 1844              	.LVL149:
 1845              		.loc 1 359 12 view .LVU597
 1846 018e 5B1A     		subs	r3, r3, r1
 1847              	.LVL150:
 1848              		.loc 1 359 6 view .LVU598
 1849 0190 0698     		ldr	r0, [sp, #24]
 1850 0192 8342     		cmp	r3, r0
 1851 0194 18DB     		blt	.L104
 360:Core/Src/gif.c **** 			{
 361:Core/Src/gif.c **** 				++Pass;
 1852              		.loc 1 361 5 is_stmt 1 view .LVU599
 1853 0196 0132     		adds	r2, r2, #1
 1854 0198 0A92     		str	r2, [sp, #40]
 1855              	.LVL151:
 362:Core/Src/gif.c **** 				YPos=_aInterlaceYPos[Pass]+y0;
 1856              		.loc 1 362 5 view .LVU600
 1857              		.loc 1 362 25 is_stmt 0 view .LVU601
 1858 019a 144B     		ldr	r3, .L117+8
 1859 019c 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 1860              		.loc 1 362 9 view .LVU602
 1861 019e 0B44     		add	r3, r3, r1
 1862 01a0 0193     		str	r3, [sp, #4]
 1863              	.LVL152:
 1864              		.loc 1 362 9 view .LVU603
 1865 01a2 11E0     		b	.L104
 1866              	.LVL153:
 1867              	.L116:
 346:Core/Src/gif.c **** 		{
 1868              		.loc 1 346 30 discriminator 1 view .LVU604
 1869 01a4 049B     		ldr	r3, [sp, #16]
 1870 01a6 022B     		cmp	r3, #2
 1871 01a8 E7D1     		bne	.L99
 1872 01aa D5E7     		b	.L98
 1873              	.L100:
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccABaL1e.s 			page 43


 349:Core/Src/gif.c **** 	 		if(Cnt)
 1874              		.loc 1 349 12 is_stmt 1 view .LVU605
 349:Core/Src/gif.c **** 	 		if(Cnt)
 1875              		.loc 1 349 22 is_stmt 0 view .LVU606
 1876 01ac 089B     		ldr	r3, [sp, #32]
 1877              	.LVL154:
 349:Core/Src/gif.c **** 	 		if(Cnt)
 1878              		.loc 1 349 22 view .LVU607
 1879 01ae D7E7     		b	.L101
 1880              	.L102:
 353:Core/Src/gif.c **** 		}
 1881              		.loc 1 353 10 is_stmt 1 view .LVU608
 353:Core/Src/gif.c **** 		}
 1882              		.loc 1 353 17 is_stmt 0 view .LVU609
 1883 01b0 0C4A     		ldr	r2, .L117
 1884 01b2 5468     		ldr	r4, [r2, #4]
 353:Core/Src/gif.c **** 		}
 1885              		.loc 1 353 10 view .LVU610
 1886 01b4 1A46     		mov	r2, r3
 1887 01b6 BDF80410 		ldrh	r1, [sp, #4]
 1888 01ba 1FFA89F0 		uxth	r0, r9
 1889 01be A047     		blx	r4
 1890              	.LVL155:
 353:Core/Src/gif.c **** 		}
 1891              		.loc 1 353 10 view .LVU611
 1892 01c0 DBE7     		b	.L99
 1893              	.LVL156:
 1894              	.L103:
 363:Core/Src/gif.c **** 			}
 364:Core/Src/gif.c **** 		}else YPos++;	    
 1895              		.loc 1 364 9 is_stmt 1 view .LVU612
 1896              		.loc 1 364 13 is_stmt 0 view .LVU613
 1897 01c2 019B     		ldr	r3, [sp, #4]
 1898 01c4 0133     		adds	r3, r3, #1
 1899 01c6 0193     		str	r3, [sp, #4]
 1900              	.LVL157:
 1901              	.L104:
 307:Core/Src/gif.c **** 	{
 1902              		.loc 1 307 40 is_stmt 1 discriminator 2 view .LVU614
 307:Core/Src/gif.c **** 	{
 1903              		.loc 1 307 44 is_stmt 0 discriminator 2 view .LVU615
 1904 01c8 059B     		ldr	r3, [sp, #20]
 1905 01ca 0133     		adds	r3, r3, #1
 1906 01cc 0593     		str	r3, [sp, #20]
 1907              	.LVL158:
 307:Core/Src/gif.c **** 	{
 1908              		.loc 1 307 44 discriminator 2 view .LVU616
 1909 01ce 49E7     		b	.L88
 1910              	.LVL159:
 1911              	.L112:
 365:Core/Src/gif.c **** 	}
 366:Core/Src/gif.c **** 	return 0;
 1912              		.loc 1 366 9 view .LVU617
 1913 01d0 0020     		movs	r0, #0
 1914 01d2 00E0     		b	.L91
 1915              	.LVL160:
 1916              	.L106:
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccABaL1e.s 			page 44


 315:Core/Src/gif.c **** 			if((Index<0)||(Index>=gif->numcolors))
 1917              		.loc 1 315 24 view .LVU618
 1918 01d4 0020     		movs	r0, #0
 1919              	.LVL161:
 1920              	.L91:
 367:Core/Src/gif.c **** }  			   
 1921              		.loc 1 367 1 view .LVU619
 1922 01d6 0FB0     		add	sp, sp, #60
 1923              	.LCFI24:
 1924              		.cfi_remember_state
 1925              		.cfi_def_cfa_offset 36
 1926              		@ sp needed
 1927 01d8 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1928              	.LVL162:
 1929              	.L107:
 1930              	.LCFI25:
 1931              		.cfi_restore_state
 319:Core/Src/gif.c **** 			}
 1932              		.loc 1 319 12 view .LVU620
 1933 01dc 0120     		movs	r0, #1
 1934 01de FAE7     		b	.L91
 1935              	.L108:
 319:Core/Src/gif.c **** 			}
 1936              		.loc 1 319 12 view .LVU621
 1937 01e0 0120     		movs	r0, #1
 1938 01e2 F8E7     		b	.L91
 1939              	.L118:
 1940              		.align	2
 1941              	.L117:
 1942 01e4 00000000 		.word	pic_phy
 1943 01e8 00000000 		.word	.LANCHOR1
 1944 01ec 00000000 		.word	.LANCHOR2
 1945              		.cfi_endproc
 1946              	.LFE141:
 1948              		.section	.text.gif_clear2bkcolor,"ax",%progbits
 1949              		.align	1
 1950              		.global	gif_clear2bkcolor
 1951              		.syntax unified
 1952              		.thumb
 1953              		.thumb_func
 1954              		.fpu fpv4-sp-d16
 1956              	gif_clear2bkcolor:
 1957              	.LVL163:
 1958              	.LFB142:
 368:Core/Src/gif.c **** //恢复成背景色
 369:Core/Src/gif.c **** //x,y:坐标
 370:Core/Src/gif.c **** //gif:gif信息.
 371:Core/Src/gif.c **** //pimge:图像描述块信息
 372:Core/Src/gif.c **** void gif_clear2bkcolor(u16 x,u16 y,gif89a* gif,ImageScreenDescriptor pimge)
 373:Core/Src/gif.c **** {
 1959              		.loc 1 373 1 is_stmt 1 view -0
 1960              		.cfi_startproc
 1961              		@ args = 16, pretend = 8, frame = 8
 1962              		@ frame_needed = 0, uses_anonymous_args = 0
 1963              		.loc 1 373 1 is_stmt 0 view .LVU623
 1964 0000 82B0     		sub	sp, sp, #8
 1965              	.LCFI26:
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccABaL1e.s 			page 45


 1966              		.cfi_def_cfa_offset 8
 1967 0002 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1968              	.LCFI27:
 1969              		.cfi_def_cfa_offset 44
 1970              		.cfi_offset 4, -44
 1971              		.cfi_offset 5, -40
 1972              		.cfi_offset 6, -36
 1973              		.cfi_offset 7, -32
 1974              		.cfi_offset 8, -28
 1975              		.cfi_offset 9, -24
 1976              		.cfi_offset 10, -20
 1977              		.cfi_offset 11, -16
 1978              		.cfi_offset 14, -12
 1979 0006 85B0     		sub	sp, sp, #20
 1980              	.LCFI28:
 1981              		.cfi_def_cfa_offset 64
 1982 0008 0F93     		str	r3, [sp, #60]
 374:Core/Src/gif.c **** 	u16 x0,y0,x1,y1;
 1983              		.loc 1 374 2 is_stmt 1 view .LVU624
 375:Core/Src/gif.c **** 	u16 color=gif->colortbl[gif->gifLSD.bkcindex];
 1984              		.loc 1 375 2 view .LVU625
 1985              		.loc 1 375 37 is_stmt 0 view .LVU626
 1986 000a 5379     		ldrb	r3, [r2, #5]	@ zero_extendqisi2
 1987              		.loc 1 375 6 view .LVU627
 1988 000c 0833     		adds	r3, r3, #8
 1989 000e 02EB4303 		add	r3, r2, r3, lsl #1
 1990 0012 B3F802B0 		ldrh	fp, [r3, #2]
 1991              	.LVL164:
 376:Core/Src/gif.c **** 	if(pimge.width==0||pimge.height==0)return;//直接不用清除了,原来没有图像!!
 1992              		.loc 1 376 2 is_stmt 1 view .LVU628
 1993              		.loc 1 376 10 is_stmt 0 view .LVU629
 1994 0016 BDF840A0 		ldrh	r10, [sp, #64]
 1995              		.loc 1 376 4 view .LVU630
 1996 001a BAF1000F 		cmp	r10, #0
 1997 001e 00F0AC80 		beq	.L119
 1998 0022 0546     		mov	r5, r0
 1999 0024 0E46     		mov	r6, r1
 2000 0026 1446     		mov	r4, r2
 2001              		.loc 1 376 26 discriminator 2 view .LVU631
 2002 0028 BDF84280 		ldrh	r8, [sp, #66]
 2003              		.loc 1 376 19 discriminator 2 view .LVU632
 2004 002c B8F1000F 		cmp	r8, #0
 2005 0030 00F0A380 		beq	.L119
 377:Core/Src/gif.c **** 	if(gif->gifISD.yoff>pimge.yoff)
 2006              		.loc 1 377 2 is_stmt 1 view .LVU633
 2007              		.loc 1 377 16 is_stmt 0 view .LVU634
 2008 0034 5389     		ldrh	r3, [r2, #10]
 2009              		.loc 1 377 27 view .LVU635
 2010 0036 BDF83E90 		ldrh	r9, [sp, #62]
 2011              		.loc 1 377 4 view .LVU636
 2012 003a 4B45     		cmp	r3, r9
 2013 003c 1DD9     		bls	.L121
 378:Core/Src/gif.c **** 	{
 379:Core/Src/gif.c ****    		x0=x+pimge.xoff;
 2014              		.loc 1 379 6 is_stmt 1 view .LVU637
 2015              		.loc 1 379 16 is_stmt 0 view .LVU638
 2016 003e BDF83C00 		ldrh	r0, [sp, #60]
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccABaL1e.s 			page 46


 2017              	.LVL165:
 2018              		.loc 1 379 8 view .LVU639
 2019 0042 2844     		add	r0, r0, r5
 2020 0044 80B2     		uxth	r0, r0
 2021              	.LVL166:
 380:Core/Src/gif.c **** 		y0=y+pimge.yoff;
 2022              		.loc 1 380 3 is_stmt 1 view .LVU640
 2023              		.loc 1 380 5 is_stmt 0 view .LVU641
 2024 0046 4944     		add	r1, r9, r1
 2025              	.LVL167:
 2026              		.loc 1 380 5 view .LVU642
 2027 0048 89B2     		uxth	r1, r1
 2028              	.LVL168:
 381:Core/Src/gif.c **** 		x1=x+pimge.xoff+pimge.width-1;;
 2029              		.loc 1 381 3 is_stmt 1 view .LVU643
 2030              		.loc 1 381 18 is_stmt 0 view .LVU644
 2031 004a 0AEB0002 		add	r2, r10, r0
 2032              	.LVL169:
 2033              		.loc 1 381 18 view .LVU645
 2034 004e 92B2     		uxth	r2, r2
 2035              		.loc 1 381 5 view .LVU646
 2036 0050 013A     		subs	r2, r2, #1
 2037 0052 92B2     		uxth	r2, r2
 2038              	.LVL170:
 2039              		.loc 1 381 33 is_stmt 1 view .LVU647
 382:Core/Src/gif.c **** 		y1=y+gif->gifISD.yoff-1;
 2040              		.loc 1 382 3 view .LVU648
 2041              		.loc 1 382 7 is_stmt 0 view .LVU649
 2042 0054 3344     		add	r3, r3, r6
 2043 0056 9BB2     		uxth	r3, r3
 2044              		.loc 1 382 5 view .LVU650
 2045 0058 013B     		subs	r3, r3, #1
 2046 005a 9BB2     		uxth	r3, r3
 2047              	.LVL171:
 383:Core/Src/gif.c **** 		if(x0<x1&&y0<y1&&x1<320&&y1<320)pic_phy.fill(x0,y0,x1,y1,color); //设定xy,的范围不能太大.
 2048              		.loc 1 383 3 is_stmt 1 view .LVU651
 2049              		.loc 1 383 5 is_stmt 0 view .LVU652
 2050 005c 9042     		cmp	r0, r2
 2051 005e 0CD2     		bcs	.L121
 2052              		.loc 1 383 11 discriminator 1 view .LVU653
 2053 0060 9942     		cmp	r1, r3
 2054 0062 0AD2     		bcs	.L121
 2055              		.loc 1 383 18 discriminator 2 view .LVU654
 2056 0064 B2F5A07F 		cmp	r2, #320
 2057 0068 07D2     		bcs	.L121
 2058              		.loc 1 383 26 discriminator 3 view .LVU655
 2059 006a B3F5A07F 		cmp	r3, #320
 2060 006e 04D2     		bcs	.L121
 2061              		.loc 1 383 35 is_stmt 1 discriminator 4 view .LVU656
 2062              		.loc 1 383 42 is_stmt 0 discriminator 4 view .LVU657
 2063 0070 444F     		ldr	r7, .L125
 2064 0072 BF68     		ldr	r7, [r7, #8]
 2065              		.loc 1 383 35 discriminator 4 view .LVU658
 2066 0074 CDF800B0 		str	fp, [sp]
 2067 0078 B847     		blx	r7
 2068              	.LVL172:
 2069              	.L121:
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccABaL1e.s 			page 47


 384:Core/Src/gif.c **** 	}
 385:Core/Src/gif.c **** 	if(gif->gifISD.xoff>pimge.xoff)
 2070              		.loc 1 385 2 is_stmt 1 view .LVU659
 2071              		.loc 1 385 16 is_stmt 0 view .LVU660
 2072 007a 2389     		ldrh	r3, [r4, #8]
 2073              		.loc 1 385 27 view .LVU661
 2074 007c BDF83C20 		ldrh	r2, [sp, #60]
 2075 0080 0392     		str	r2, [sp, #12]
 2076              		.loc 1 385 4 view .LVU662
 2077 0082 9342     		cmp	r3, r2
 2078 0084 21D9     		bls	.L122
 386:Core/Src/gif.c **** 	{
 387:Core/Src/gif.c ****    		x0=x+pimge.xoff;
 2079              		.loc 1 387 6 is_stmt 1 view .LVU663
 2080              		.loc 1 387 8 is_stmt 0 view .LVU664
 2081 0086 5019     		adds	r0, r2, r5
 2082 0088 80B2     		uxth	r0, r0
 2083              	.LVL173:
 388:Core/Src/gif.c **** 		y0=y+pimge.yoff;
 2084              		.loc 1 388 3 is_stmt 1 view .LVU665
 2085              		.loc 1 388 5 is_stmt 0 view .LVU666
 2086 008a 09EB0601 		add	r1, r9, r6
 2087 008e 89B2     		uxth	r1, r1
 2088              	.LVL174:
 389:Core/Src/gif.c **** 		x1=x+gif->gifISD.xoff-1;;
 2089              		.loc 1 389 3 is_stmt 1 view .LVU667
 2090              		.loc 1 389 7 is_stmt 0 view .LVU668
 2091 0090 5A19     		adds	r2, r3, r5
 2092 0092 92B2     		uxth	r2, r2
 2093              		.loc 1 389 5 view .LVU669
 2094 0094 013A     		subs	r2, r2, #1
 2095 0096 92B2     		uxth	r2, r2
 2096              	.LVL175:
 2097              		.loc 1 389 27 is_stmt 1 view .LVU670
 390:Core/Src/gif.c **** 		y1=y+pimge.yoff+pimge.height-1;
 2098              		.loc 1 390 3 view .LVU671
 2099              		.loc 1 390 18 is_stmt 0 view .LVU672
 2100 0098 08EB0103 		add	r3, r8, r1
 2101 009c 9BB2     		uxth	r3, r3
 2102              		.loc 1 390 5 view .LVU673
 2103 009e 013B     		subs	r3, r3, #1
 2104 00a0 1FFA83FE 		uxth	lr, r3
 2105              	.LVL176:
 391:Core/Src/gif.c **** 		if(x0<x1&&y0<y1&&x1<320&&y1<320)pic_phy.fill(x0,y0,x1,y1,color);
 2106              		.loc 1 391 3 is_stmt 1 view .LVU674
 2107              		.loc 1 391 5 is_stmt 0 view .LVU675
 2108 00a4 9042     		cmp	r0, r2
 2109 00a6 10D2     		bcs	.L122
 2110              		.loc 1 391 11 discriminator 1 view .LVU676
 2111 00a8 7145     		cmp	r1, lr
 2112 00aa 0ED2     		bcs	.L122
 2113              		.loc 1 391 18 discriminator 2 view .LVU677
 2114 00ac B2F5A07F 		cmp	r2, #320
 2115 00b0 0BD2     		bcs	.L122
 2116              		.loc 1 391 26 discriminator 3 view .LVU678
 2117 00b2 BEF5A07F 		cmp	lr, #320
 2118 00b6 08D2     		bcs	.L122
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccABaL1e.s 			page 48


 2119              		.loc 1 391 35 is_stmt 1 discriminator 4 view .LVU679
 2120              		.loc 1 391 42 is_stmt 0 discriminator 4 view .LVU680
 2121 00b8 DFF8C8C0 		ldr	ip, .L125
 2122 00bc DCF80830 		ldr	r3, [ip, #8]
 2123 00c0 1F46     		mov	r7, r3
 2124              		.loc 1 391 35 discriminator 4 view .LVU681
 2125 00c2 CDF800B0 		str	fp, [sp]
 2126 00c6 7346     		mov	r3, lr
 2127 00c8 B847     		blx	r7
 2128              	.LVL177:
 2129              	.L122:
 392:Core/Src/gif.c **** 	}
 393:Core/Src/gif.c **** 	if((gif->gifISD.yoff+gif->gifISD.height)<(pimge.yoff+pimge.height))
 2130              		.loc 1 393 2 is_stmt 1 view .LVU682
 2131              		.loc 1 393 17 is_stmt 0 view .LVU683
 2132 00ca 6389     		ldrh	r3, [r4, #10]
 2133              		.loc 1 393 34 view .LVU684
 2134 00cc E289     		ldrh	r2, [r4, #14]
 2135              		.loc 1 393 22 view .LVU685
 2136 00ce 9818     		adds	r0, r3, r2
 2137              		.loc 1 393 54 view .LVU686
 2138 00d0 09EB0801 		add	r1, r9, r8
 2139              		.loc 1 393 4 view .LVU687
 2140 00d4 8842     		cmp	r0, r1
 2141 00d6 25DA     		bge	.L123
 394:Core/Src/gif.c **** 	{
 395:Core/Src/gif.c ****    		x0=x+pimge.xoff;
 2142              		.loc 1 395 6 is_stmt 1 view .LVU688
 2143              		.loc 1 395 8 is_stmt 0 view .LVU689
 2144 00d8 0399     		ldr	r1, [sp, #12]
 2145 00da 4819     		adds	r0, r1, r5
 2146 00dc 80B2     		uxth	r0, r0
 2147              	.LVL178:
 396:Core/Src/gif.c **** 		y0=y+gif->gifISD.yoff+gif->gifISD.height-1;
 2148              		.loc 1 396 3 is_stmt 1 view .LVU690
 2149              		.loc 1 396 7 is_stmt 0 view .LVU691
 2150 00de 9919     		adds	r1, r3, r6
 2151              		.loc 1 396 24 view .LVU692
 2152 00e0 12FA81F1 		uxtah	r1, r2, r1
 2153 00e4 89B2     		uxth	r1, r1
 2154              		.loc 1 396 5 view .LVU693
 2155 00e6 0139     		subs	r1, r1, #1
 2156 00e8 89B2     		uxth	r1, r1
 2157              	.LVL179:
 397:Core/Src/gif.c **** 		x1=x+pimge.xoff+pimge.width-1;;
 2158              		.loc 1 397 3 is_stmt 1 view .LVU694
 2159              		.loc 1 397 18 is_stmt 0 view .LVU695
 2160 00ea 0AEB0002 		add	r2, r10, r0
 2161 00ee 92B2     		uxth	r2, r2
 2162              		.loc 1 397 5 view .LVU696
 2163 00f0 013A     		subs	r2, r2, #1
 2164 00f2 92B2     		uxth	r2, r2
 2165              	.LVL180:
 2166              		.loc 1 397 33 is_stmt 1 view .LVU697
 398:Core/Src/gif.c **** 		y1=y+pimge.yoff+pimge.height-1;
 2167              		.loc 1 398 3 view .LVU698
 2168              		.loc 1 398 7 is_stmt 0 view .LVU699
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccABaL1e.s 			page 49


 2169 00f4 09EB0603 		add	r3, r9, r6
 2170              		.loc 1 398 18 view .LVU700
 2171 00f8 18FA83F3 		uxtah	r3, r8, r3
 2172 00fc 9BB2     		uxth	r3, r3
 2173              		.loc 1 398 5 view .LVU701
 2174 00fe 013B     		subs	r3, r3, #1
 2175 0100 9BB2     		uxth	r3, r3
 2176              	.LVL181:
 399:Core/Src/gif.c **** 		if(x0<x1&&y0<y1&&x1<320&&y1<320)pic_phy.fill(x0,y0,x1,y1,color);
 2177              		.loc 1 399 3 is_stmt 1 view .LVU702
 2178              		.loc 1 399 5 is_stmt 0 view .LVU703
 2179 0102 9042     		cmp	r0, r2
 2180 0104 0ED2     		bcs	.L123
 2181              		.loc 1 399 11 discriminator 1 view .LVU704
 2182 0106 9942     		cmp	r1, r3
 2183 0108 0CD2     		bcs	.L123
 2184              		.loc 1 399 18 discriminator 2 view .LVU705
 2185 010a B2F5A07F 		cmp	r2, #320
 2186 010e 09D2     		bcs	.L123
 2187              		.loc 1 399 26 discriminator 3 view .LVU706
 2188 0110 B3F5A07F 		cmp	r3, #320
 2189 0114 06D2     		bcs	.L123
 2190              		.loc 1 399 35 is_stmt 1 discriminator 4 view .LVU707
 2191              		.loc 1 399 42 is_stmt 0 discriminator 4 view .LVU708
 2192 0116 DFF86CC0 		ldr	ip, .L125
 2193 011a DCF80870 		ldr	r7, [ip, #8]
 2194              		.loc 1 399 35 discriminator 4 view .LVU709
 2195 011e CDF800B0 		str	fp, [sp]
 2196 0122 B847     		blx	r7
 2197              	.LVL182:
 2198              	.L123:
 400:Core/Src/gif.c **** 	}
 401:Core/Src/gif.c ****  	if((gif->gifISD.xoff+gif->gifISD.width)<(pimge.xoff+pimge.width))
 2199              		.loc 1 401 3 is_stmt 1 view .LVU710
 2200              		.loc 1 401 18 is_stmt 0 view .LVU711
 2201 0124 2389     		ldrh	r3, [r4, #8]
 2202              		.loc 1 401 35 view .LVU712
 2203 0126 A289     		ldrh	r2, [r4, #12]
 2204              		.loc 1 401 23 view .LVU713
 2205 0128 9818     		adds	r0, r3, r2
 2206              		.loc 1 401 54 view .LVU714
 2207 012a 039C     		ldr	r4, [sp, #12]
 2208              	.LVL183:
 2209              		.loc 1 401 54 view .LVU715
 2210 012c 2146     		mov	r1, r4
 2211 012e 5144     		add	r1, r1, r10
 2212              		.loc 1 401 5 view .LVU716
 2213 0130 8842     		cmp	r0, r1
 2214 0132 22DA     		bge	.L119
 402:Core/Src/gif.c **** 	{
 403:Core/Src/gif.c ****    		x0=x+gif->gifISD.xoff+gif->gifISD.width-1;
 2215              		.loc 1 403 6 is_stmt 1 view .LVU717
 2216              		.loc 1 403 10 is_stmt 0 view .LVU718
 2217 0134 5819     		adds	r0, r3, r5
 2218              		.loc 1 403 27 view .LVU719
 2219 0136 12FA80F0 		uxtah	r0, r2, r0
 2220 013a 80B2     		uxth	r0, r0
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccABaL1e.s 			page 50


 2221              		.loc 1 403 8 view .LVU720
 2222 013c 0138     		subs	r0, r0, #1
 2223 013e 80B2     		uxth	r0, r0
 2224              	.LVL184:
 404:Core/Src/gif.c **** 		y0=y+pimge.yoff;
 2225              		.loc 1 404 3 is_stmt 1 view .LVU721
 2226              		.loc 1 404 5 is_stmt 0 view .LVU722
 2227 0140 09EB0601 		add	r1, r9, r6
 2228 0144 89B2     		uxth	r1, r1
 2229              	.LVL185:
 405:Core/Src/gif.c **** 		x1=x+pimge.xoff+pimge.width-1;;
 2230              		.loc 1 405 3 is_stmt 1 view .LVU723
 2231              		.loc 1 405 7 is_stmt 0 view .LVU724
 2232 0146 2C44     		add	r4, r4, r5
 2233              		.loc 1 405 18 view .LVU725
 2234 0148 1AFA84F2 		uxtah	r2, r10, r4
 2235 014c 92B2     		uxth	r2, r2
 2236              		.loc 1 405 5 view .LVU726
 2237 014e 013A     		subs	r2, r2, #1
 2238 0150 92B2     		uxth	r2, r2
 2239              	.LVL186:
 2240              		.loc 1 405 33 is_stmt 1 view .LVU727
 406:Core/Src/gif.c **** 		y1=y+pimge.yoff+pimge.height-1;
 2241              		.loc 1 406 3 view .LVU728
 2242              		.loc 1 406 18 is_stmt 0 view .LVU729
 2243 0152 08EB0103 		add	r3, r8, r1
 2244 0156 9BB2     		uxth	r3, r3
 2245              		.loc 1 406 5 view .LVU730
 2246 0158 013B     		subs	r3, r3, #1
 2247 015a 9BB2     		uxth	r3, r3
 2248              	.LVL187:
 407:Core/Src/gif.c **** 		if(x0<x1&&y0<y1&&x1<320&&y1<320)pic_phy.fill(x0,y0,x1,y1,color);
 2249              		.loc 1 407 3 is_stmt 1 view .LVU731
 2250              		.loc 1 407 5 is_stmt 0 view .LVU732
 2251 015c 9042     		cmp	r0, r2
 2252 015e 0CD2     		bcs	.L119
 2253              		.loc 1 407 11 discriminator 1 view .LVU733
 2254 0160 9942     		cmp	r1, r3
 2255 0162 0AD2     		bcs	.L119
 2256              		.loc 1 407 18 discriminator 2 view .LVU734
 2257 0164 B2F5A07F 		cmp	r2, #320
 2258 0168 07D2     		bcs	.L119
 2259              		.loc 1 407 26 discriminator 3 view .LVU735
 2260 016a B3F5A07F 		cmp	r3, #320
 2261 016e 04D2     		bcs	.L119
 2262              		.loc 1 407 35 is_stmt 1 discriminator 4 view .LVU736
 2263              		.loc 1 407 42 is_stmt 0 discriminator 4 view .LVU737
 2264 0170 044C     		ldr	r4, .L125
 2265 0172 A468     		ldr	r4, [r4, #8]
 2266              		.loc 1 407 35 discriminator 4 view .LVU738
 2267 0174 CDF800B0 		str	fp, [sp]
 2268 0178 A047     		blx	r4
 2269              	.LVL188:
 2270              	.L119:
 408:Core/Src/gif.c **** 	}   
 409:Core/Src/gif.c **** }
 2271              		.loc 1 409 1 view .LVU739
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccABaL1e.s 			page 51


 2272 017a 05B0     		add	sp, sp, #20
 2273              	.LCFI29:
 2274              		.cfi_def_cfa_offset 44
 2275              		@ sp needed
 2276 017c BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2277              	.LCFI30:
 2278              		.cfi_restore 14
 2279              		.cfi_restore 11
 2280              		.cfi_restore 10
 2281              		.cfi_restore 9
 2282              		.cfi_restore 8
 2283              		.cfi_restore 7
 2284              		.cfi_restore 6
 2285              		.cfi_restore 5
 2286              		.cfi_restore 4
 2287              		.cfi_def_cfa_offset 8
 2288              	.LVL189:
 2289              		.loc 1 409 1 view .LVU740
 2290 0180 02B0     		add	sp, sp, #8
 2291              	.LCFI31:
 2292              		.cfi_def_cfa_offset 0
 2293 0182 7047     		bx	lr
 2294              	.L126:
 2295              		.align	2
 2296              	.L125:
 2297 0184 00000000 		.word	pic_phy
 2298              		.cfi_endproc
 2299              	.LFE142:
 2301              		.section	.text.gif_drawimage,"ax",%progbits
 2302              		.align	1
 2303              		.global	gif_drawimage
 2304              		.syntax unified
 2305              		.thumb
 2306              		.thumb_func
 2307              		.fpu fpv4-sp-d16
 2309              	gif_drawimage:
 2310              	.LVL190:
 2311              	.LFB143:
 410:Core/Src/gif.c **** 
 411:Core/Src/gif.c **** //画GIF图像的一帧
 412:Core/Src/gif.c **** //gfile:gif文件.
 413:Core/Src/gif.c **** //x0,y0:开始显示的坐标
 414:Core/Src/gif.c **** u8 gif_drawimage(FIL *gfile,gif89a* gif,u16 x0,u16 y0)
 415:Core/Src/gif.c **** {		  
 2312              		.loc 1 415 1 is_stmt 1 view -0
 2313              		.cfi_startproc
 2314              		@ args = 0, pretend = 0, frame = 32
 2315              		@ frame_needed = 0, uses_anonymous_args = 0
 2316              		.loc 1 415 1 is_stmt 0 view .LVU742
 2317 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 2318              	.LCFI32:
 2319              		.cfi_def_cfa_offset 20
 2320              		.cfi_offset 4, -20
 2321              		.cfi_offset 5, -16
 2322              		.cfi_offset 6, -12
 2323              		.cfi_offset 7, -8
 2324              		.cfi_offset 14, -4
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccABaL1e.s 			page 52


 2325 0002 8BB0     		sub	sp, sp, #44
 2326              	.LCFI33:
 2327              		.cfi_def_cfa_offset 64
 2328 0004 0446     		mov	r4, r0
 2329 0006 0D46     		mov	r5, r1
 2330 0008 1646     		mov	r6, r2
 2331 000a 1F46     		mov	r7, r3
 416:Core/Src/gif.c **** 	u32 readed;
 2332              		.loc 1 416 2 is_stmt 1 view .LVU743
 417:Core/Src/gif.c **** 	u8 res,temp;    
 2333              		.loc 1 417 2 view .LVU744
 418:Core/Src/gif.c **** 	u16 numcolors;
 2334              		.loc 1 418 2 view .LVU745
 419:Core/Src/gif.c **** 	ImageScreenDescriptor previmg;
 2335              		.loc 1 419 2 view .LVU746
 420:Core/Src/gif.c **** 
 421:Core/Src/gif.c **** 	u8 Disposal;
 2336              		.loc 1 421 2 view .LVU747
 422:Core/Src/gif.c **** 	int TransIndex;
 2337              		.loc 1 422 2 view .LVU748
 423:Core/Src/gif.c **** 	u8 Introducer;
 2338              		.loc 1 423 2 view .LVU749
 424:Core/Src/gif.c **** 	TransIndex=-1;				  
 2339              		.loc 1 424 2 view .LVU750
 2340              		.loc 1 424 12 is_stmt 0 view .LVU751
 2341 000c 4FF0FF32 		mov	r2, #-1
 2342              	.LVL191:
 2343              		.loc 1 424 12 view .LVU752
 2344 0010 0492     		str	r2, [sp, #16]
 2345              	.LVL192:
 2346              	.L135:
 425:Core/Src/gif.c **** 	do
 2347              		.loc 1 425 2 is_stmt 1 view .LVU753
 426:Core/Src/gif.c **** 	{
 427:Core/Src/gif.c **** 		res=f_read(gfile,&Introducer,1,(UINT*)&readed);//读取一个字节
 2348              		.loc 1 427 3 view .LVU754
 2349              		.loc 1 427 7 is_stmt 0 view .LVU755
 2350 0012 09AB     		add	r3, sp, #36
 2351 0014 0122     		movs	r2, #1
 2352 0016 0DF10F01 		add	r1, sp, #15
 2353 001a 2046     		mov	r0, r4
 2354 001c FFF7FEFF 		bl	f_read
 2355              	.LVL193:
 428:Core/Src/gif.c **** 		if(res)return 1;   
 2356              		.loc 1 428 3 is_stmt 1 view .LVU756
 2357              		.loc 1 428 5 is_stmt 0 view .LVU757
 2358 0020 0028     		cmp	r0, #0
 2359 0022 7DD1     		bne	.L136
 429:Core/Src/gif.c **** 		switch(Introducer)
 2360              		.loc 1 429 3 is_stmt 1 view .LVU758
 2361 0024 9DF80FC0 		ldrb	ip, [sp, #15]	@ zero_extendqisi2
 2362 0028 BCF12C0F 		cmp	ip, #44
 2363 002c 08D0     		beq	.L129
 2364 002e BCF13B0F 		cmp	ip, #59
 2365 0032 77D0     		beq	.L137
 2366 0034 BCF1210F 		cmp	ip, #33
 2367 0038 64D0     		beq	.L130
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccABaL1e.s 			page 53


 430:Core/Src/gif.c **** 		{		 
 431:Core/Src/gif.c **** 			case GIF_INTRO_IMAGE://图像描述
 432:Core/Src/gif.c **** 				previmg.xoff=gif->gifISD.xoff;
 433:Core/Src/gif.c ****  				previmg.yoff=gif->gifISD.yoff;
 434:Core/Src/gif.c **** 				previmg.width=gif->gifISD.width;
 435:Core/Src/gif.c **** 				previmg.height=gif->gifISD.height;
 436:Core/Src/gif.c **** 
 437:Core/Src/gif.c **** 				res=f_read(gfile,(u8*)&gif->gifISD,9,(UINT*)&readed);//读取一个字节
 438:Core/Src/gif.c **** 				if(res)return 1;			 
 439:Core/Src/gif.c **** 				if(gif->gifISD.flag&0x80)//存在局部颜色表
 440:Core/Src/gif.c **** 				{							  
 441:Core/Src/gif.c **** 					gif_savegctbl(gif);//保存全局颜色表
 442:Core/Src/gif.c **** 					numcolors=2<<(gif->gifISD.flag&0X07);//得到局部颜色表大小
 443:Core/Src/gif.c **** 					if(gif_readcolortbl(gfile,gif,numcolors))return 1;//读错误	
 444:Core/Src/gif.c **** 				}
 445:Core/Src/gif.c **** 				if(Disposal==2)gif_clear2bkcolor(x0,y0,gif,previmg); 
 446:Core/Src/gif.c **** 				gif_dispimage(gfile,gif,x0+gif->gifISD.xoff,y0+gif->gifISD.yoff,TransIndex,Disposal);
 447:Core/Src/gif.c ****  				while(1)
 448:Core/Src/gif.c **** 				{
 449:Core/Src/gif.c **** 					f_read(gfile,&temp,1,(UINT*)&readed);//读取一个字节
 450:Core/Src/gif.c **** 					if(temp==0)break;
 451:Core/Src/gif.c **** 					readed=f_tell(gfile);//还存在块.	
 452:Core/Src/gif.c **** 					if(f_lseek(gfile,readed+temp))break;//继续向后偏移	 
 453:Core/Src/gif.c **** 			    }
 454:Core/Src/gif.c **** 				if(temp!=0)return 1;//Error 
 455:Core/Src/gif.c **** 				return 0;
 456:Core/Src/gif.c **** 			case GIF_INTRO_TERMINATOR://得到结束符了
 457:Core/Src/gif.c **** 				return 2;//代表图像解码完成了.
 458:Core/Src/gif.c **** 			case GIF_INTRO_EXTENSION:
 459:Core/Src/gif.c **** 				//Read image extension*/
 460:Core/Src/gif.c **** 				res=gif_readextension(gfile,gif,&TransIndex,&Disposal);//读取图像扩展块消息
 461:Core/Src/gif.c **** 				if(res)return 1;
 462:Core/Src/gif.c **** 	 			break;
 463:Core/Src/gif.c **** 			default:
 464:Core/Src/gif.c **** 				return 1;
 2368              		.loc 1 464 12 is_stmt 0 view .LVU759
 2369 003a 0120     		movs	r0, #1
 2370              	.LVL194:
 2371              	.L128:
 465:Core/Src/gif.c **** 		}
 466:Core/Src/gif.c **** 	}while(Introducer!=GIF_INTRO_TERMINATOR);//读到结束符了
 467:Core/Src/gif.c **** 	return 0;
 468:Core/Src/gif.c **** }
 2372              		.loc 1 468 1 view .LVU760
 2373 003c 0BB0     		add	sp, sp, #44
 2374              	.LCFI34:
 2375              		.cfi_remember_state
 2376              		.cfi_def_cfa_offset 20
 2377              		@ sp needed
 2378 003e F0BD     		pop	{r4, r5, r6, r7, pc}
 2379              	.LVL195:
 2380              	.L129:
 2381              	.LCFI35:
 2382              		.cfi_restore_state
 432:Core/Src/gif.c ****  				previmg.yoff=gif->gifISD.yoff;
 2383              		.loc 1 432 5 is_stmt 1 view .LVU761
 432:Core/Src/gif.c ****  				previmg.yoff=gif->gifISD.yoff;
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccABaL1e.s 			page 54


 2384              		.loc 1 432 29 is_stmt 0 view .LVU762
 2385 0040 2B89     		ldrh	r3, [r5, #8]
 432:Core/Src/gif.c ****  				previmg.yoff=gif->gifISD.yoff;
 2386              		.loc 1 432 17 view .LVU763
 2387 0042 ADF81830 		strh	r3, [sp, #24]	@ movhi
 433:Core/Src/gif.c **** 				previmg.width=gif->gifISD.width;
 2388              		.loc 1 433 6 is_stmt 1 view .LVU764
 433:Core/Src/gif.c **** 				previmg.width=gif->gifISD.width;
 2389              		.loc 1 433 30 is_stmt 0 view .LVU765
 2390 0046 6B89     		ldrh	r3, [r5, #10]
 433:Core/Src/gif.c **** 				previmg.width=gif->gifISD.width;
 2391              		.loc 1 433 18 view .LVU766
 2392 0048 ADF81A30 		strh	r3, [sp, #26]	@ movhi
 434:Core/Src/gif.c **** 				previmg.height=gif->gifISD.height;
 2393              		.loc 1 434 5 is_stmt 1 view .LVU767
 434:Core/Src/gif.c **** 				previmg.height=gif->gifISD.height;
 2394              		.loc 1 434 30 is_stmt 0 view .LVU768
 2395 004c AB89     		ldrh	r3, [r5, #12]
 434:Core/Src/gif.c **** 				previmg.height=gif->gifISD.height;
 2396              		.loc 1 434 18 view .LVU769
 2397 004e ADF81C30 		strh	r3, [sp, #28]	@ movhi
 435:Core/Src/gif.c **** 
 2398              		.loc 1 435 5 is_stmt 1 view .LVU770
 435:Core/Src/gif.c **** 
 2399              		.loc 1 435 31 is_stmt 0 view .LVU771
 2400 0052 EB89     		ldrh	r3, [r5, #14]
 435:Core/Src/gif.c **** 
 2401              		.loc 1 435 19 view .LVU772
 2402 0054 ADF81E30 		strh	r3, [sp, #30]	@ movhi
 437:Core/Src/gif.c **** 				if(res)return 1;			 
 2403              		.loc 1 437 5 is_stmt 1 view .LVU773
 437:Core/Src/gif.c **** 				if(res)return 1;			 
 2404              		.loc 1 437 9 is_stmt 0 view .LVU774
 2405 0058 09AB     		add	r3, sp, #36
 2406 005a 0922     		movs	r2, #9
 2407 005c 05F10801 		add	r1, r5, #8
 2408 0060 2046     		mov	r0, r4
 2409              	.LVL196:
 437:Core/Src/gif.c **** 				if(res)return 1;			 
 2410              		.loc 1 437 9 view .LVU775
 2411 0062 FFF7FEFF 		bl	f_read
 2412              	.LVL197:
 438:Core/Src/gif.c **** 				if(gif->gifISD.flag&0x80)//存在局部颜色表
 2413              		.loc 1 438 5 is_stmt 1 view .LVU776
 438:Core/Src/gif.c **** 				if(gif->gifISD.flag&0x80)//存在局部颜色表
 2414              		.loc 1 438 7 is_stmt 0 view .LVU777
 2415 0066 0028     		cmp	r0, #0
 2416 0068 5ED1     		bne	.L138
 439:Core/Src/gif.c **** 				{							  
 2417              		.loc 1 439 5 is_stmt 1 view .LVU778
 439:Core/Src/gif.c **** 				{							  
 2418              		.loc 1 439 8 is_stmt 0 view .LVU779
 2419 006a 95F91030 		ldrsb	r3, [r5, #16]
 439:Core/Src/gif.c **** 				{							  
 2420              		.loc 1 439 7 view .LVU780
 2421 006e 002B     		cmp	r3, #0
 2422 0070 2ADB     		blt	.L143
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccABaL1e.s 			page 55


 2423              	.LVL198:
 2424              	.L131:
 445:Core/Src/gif.c **** 				gif_dispimage(gfile,gif,x0+gif->gifISD.xoff,y0+gif->gifISD.yoff,TransIndex,Disposal);
 2425              		.loc 1 445 5 is_stmt 1 view .LVU781
 445:Core/Src/gif.c **** 				gif_dispimage(gfile,gif,x0+gif->gifISD.xoff,y0+gif->gifISD.yoff,TransIndex,Disposal);
 2426              		.loc 1 445 16 is_stmt 0 view .LVU782
 2427 0072 9DF81730 		ldrb	r3, [sp, #23]	@ zero_extendqisi2
 445:Core/Src/gif.c **** 				gif_dispimage(gfile,gif,x0+gif->gifISD.xoff,y0+gif->gifISD.yoff,TransIndex,Disposal);
 2428              		.loc 1 445 7 view .LVU783
 2429 0076 022B     		cmp	r3, #2
 2430 0078 37D0     		beq	.L144
 2431              	.L132:
 446:Core/Src/gif.c ****  				while(1)
 2432              		.loc 1 446 5 is_stmt 1 view .LVU784
 446:Core/Src/gif.c ****  				while(1)
 2433              		.loc 1 446 43 is_stmt 0 view .LVU785
 2434 007a 2A89     		ldrh	r2, [r5, #8]
 446:Core/Src/gif.c ****  				while(1)
 2435              		.loc 1 446 63 view .LVU786
 2436 007c 6B89     		ldrh	r3, [r5, #10]
 446:Core/Src/gif.c ****  				while(1)
 2437              		.loc 1 446 5 view .LVU787
 2438 007e 3B44     		add	r3, r3, r7
 2439 0080 3244     		add	r2, r2, r6
 2440 0082 9DF81710 		ldrb	r1, [sp, #23]	@ zero_extendqisi2
 2441 0086 0191     		str	r1, [sp, #4]
 2442 0088 0499     		ldr	r1, [sp, #16]
 2443 008a 0091     		str	r1, [sp]
 2444 008c 9BB2     		uxth	r3, r3
 2445 008e 92B2     		uxth	r2, r2
 2446 0090 2946     		mov	r1, r5
 2447 0092 2046     		mov	r0, r4
 2448 0094 FFF7FEFF 		bl	gif_dispimage
 2449              	.LVL199:
 2450              	.L134:
 447:Core/Src/gif.c **** 				{
 2451              		.loc 1 447 6 is_stmt 1 view .LVU788
 449:Core/Src/gif.c **** 					if(temp==0)break;
 2452              		.loc 1 449 6 view .LVU789
 2453 0098 09AB     		add	r3, sp, #36
 2454 009a 0122     		movs	r2, #1
 2455 009c 0DF12301 		add	r1, sp, #35
 2456 00a0 2046     		mov	r0, r4
 2457 00a2 FFF7FEFF 		bl	f_read
 2458              	.LVL200:
 450:Core/Src/gif.c **** 					readed=f_tell(gfile);//还存在块.	
 2459              		.loc 1 450 6 view .LVU790
 450:Core/Src/gif.c **** 					readed=f_tell(gfile);//还存在块.	
 2460              		.loc 1 450 13 is_stmt 0 view .LVU791
 2461 00a6 9DF82330 		ldrb	r3, [sp, #35]	@ zero_extendqisi2
 450:Core/Src/gif.c **** 					readed=f_tell(gfile);//还存在块.	
 2462              		.loc 1 450 8 view .LVU792
 2463 00aa 3BB1     		cbz	r3, .L133
 451:Core/Src/gif.c **** 					if(f_lseek(gfile,readed+temp))break;//继续向后偏移	 
 2464              		.loc 1 451 6 is_stmt 1 view .LVU793
 451:Core/Src/gif.c **** 					if(f_lseek(gfile,readed+temp))break;//继续向后偏移	 
 2465              		.loc 1 451 13 is_stmt 0 view .LVU794
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccABaL1e.s 			page 56


 2466 00ac A168     		ldr	r1, [r4, #8]
 451:Core/Src/gif.c **** 					if(f_lseek(gfile,readed+temp))break;//继续向后偏移	 
 2467              		.loc 1 451 12 view .LVU795
 2468 00ae 0991     		str	r1, [sp, #36]
 452:Core/Src/gif.c **** 			    }
 2469              		.loc 1 452 6 is_stmt 1 view .LVU796
 452:Core/Src/gif.c **** 			    }
 2470              		.loc 1 452 9 is_stmt 0 view .LVU797
 2471 00b0 1944     		add	r1, r1, r3
 2472 00b2 2046     		mov	r0, r4
 2473 00b4 FFF7FEFF 		bl	f_lseek
 2474              	.LVL201:
 452:Core/Src/gif.c **** 			    }
 2475              		.loc 1 452 8 view .LVU798
 2476 00b8 0028     		cmp	r0, #0
 2477 00ba EDD0     		beq	.L134
 2478              	.L133:
 454:Core/Src/gif.c **** 				return 0;
 2479              		.loc 1 454 5 is_stmt 1 view .LVU799
 454:Core/Src/gif.c **** 				return 0;
 2480              		.loc 1 454 12 is_stmt 0 view .LVU800
 2481 00bc 9DF82300 		ldrb	r0, [sp, #35]	@ zero_extendqisi2
 454:Core/Src/gif.c **** 				return 0;
 2482              		.loc 1 454 7 view .LVU801
 2483 00c0 0028     		cmp	r0, #0
 2484 00c2 BBD0     		beq	.L128
 454:Core/Src/gif.c **** 				return 0;
 2485              		.loc 1 454 23 view .LVU802
 2486 00c4 0120     		movs	r0, #1
 2487 00c6 B9E7     		b	.L128
 2488              	.LVL202:
 2489              	.L143:
 441:Core/Src/gif.c **** 					numcolors=2<<(gif->gifISD.flag&0X07);//得到局部颜色表大小
 2490              		.loc 1 441 6 is_stmt 1 view .LVU803
 2491 00c8 2846     		mov	r0, r5
 2492              	.LVL203:
 441:Core/Src/gif.c **** 					numcolors=2<<(gif->gifISD.flag&0X07);//得到局部颜色表大小
 2493              		.loc 1 441 6 is_stmt 0 view .LVU804
 2494 00ca FFF7FEFF 		bl	gif_savegctbl
 2495              	.LVL204:
 442:Core/Src/gif.c **** 					if(gif_readcolortbl(gfile,gif,numcolors))return 1;//读错误	
 2496              		.loc 1 442 6 is_stmt 1 view .LVU805
 442:Core/Src/gif.c **** 					if(gif_readcolortbl(gfile,gif,numcolors))return 1;//读错误	
 2497              		.loc 1 442 31 is_stmt 0 view .LVU806
 2498 00ce 2A7C     		ldrb	r2, [r5, #16]	@ zero_extendqisi2
 442:Core/Src/gif.c **** 					if(gif_readcolortbl(gfile,gif,numcolors))return 1;//读错误	
 2499              		.loc 1 442 36 view .LVU807
 2500 00d0 02F00703 		and	r3, r2, #7
 442:Core/Src/gif.c **** 					if(gif_readcolortbl(gfile,gif,numcolors))return 1;//读错误	
 2501              		.loc 1 442 17 view .LVU808
 2502 00d4 0222     		movs	r2, #2
 2503 00d6 9A40     		lsls	r2, r2, r3
 2504              	.LVL205:
 443:Core/Src/gif.c **** 				}
 2505              		.loc 1 443 6 is_stmt 1 view .LVU809
 443:Core/Src/gif.c **** 				}
 2506              		.loc 1 443 9 is_stmt 0 view .LVU810
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccABaL1e.s 			page 57


 2507 00d8 92B2     		uxth	r2, r2
 443:Core/Src/gif.c **** 				}
 2508              		.loc 1 443 9 view .LVU811
 2509 00da 2946     		mov	r1, r5
 2510 00dc 2046     		mov	r0, r4
 2511 00de FFF7FEFF 		bl	gif_readcolortbl
 2512              	.LVL206:
 443:Core/Src/gif.c **** 				}
 2513              		.loc 1 443 8 view .LVU812
 2514 00e2 0028     		cmp	r0, #0
 2515 00e4 C5D0     		beq	.L131
 443:Core/Src/gif.c **** 				}
 2516              		.loc 1 443 54 view .LVU813
 2517 00e6 0120     		movs	r0, #1
 2518 00e8 A8E7     		b	.L128
 2519              	.L144:
 445:Core/Src/gif.c **** 				gif_dispimage(gfile,gif,x0+gif->gifISD.xoff,y0+gif->gifISD.yoff,TransIndex,Disposal);
 2520              		.loc 1 445 20 is_stmt 1 discriminator 1 view .LVU814
 2521 00ea 07AB     		add	r3, sp, #28
 2522 00ec 93E80300 		ldm	r3, {r0, r1}
 2523 00f0 0090     		str	r0, [sp]
 2524 00f2 ADF80410 		strh	r1, [sp, #4]	@ movhi
 2525 00f6 069B     		ldr	r3, [sp, #24]
 2526 00f8 2A46     		mov	r2, r5
 2527 00fa 3946     		mov	r1, r7
 2528 00fc 3046     		mov	r0, r6
 2529 00fe FFF7FEFF 		bl	gif_clear2bkcolor
 2530              	.LVL207:
 2531 0102 BAE7     		b	.L132
 2532              	.LVL208:
 2533              	.L130:
 460:Core/Src/gif.c **** 				if(res)return 1;
 2534              		.loc 1 460 5 view .LVU815
 460:Core/Src/gif.c **** 				if(res)return 1;
 2535              		.loc 1 460 9 is_stmt 0 view .LVU816
 2536 0104 0DF11703 		add	r3, sp, #23
 2537 0108 04AA     		add	r2, sp, #16
 2538 010a 2946     		mov	r1, r5
 2539 010c 2046     		mov	r0, r4
 2540              	.LVL209:
 460:Core/Src/gif.c **** 				if(res)return 1;
 2541              		.loc 1 460 9 view .LVU817
 2542 010e FFF7FEFF 		bl	gif_readextension
 2543              	.LVL210:
 461:Core/Src/gif.c **** 	 			break;
 2544              		.loc 1 461 5 is_stmt 1 view .LVU818
 461:Core/Src/gif.c **** 	 			break;
 2545              		.loc 1 461 7 is_stmt 0 view .LVU819
 2546 0112 58B9     		cbnz	r0, .L141
 462:Core/Src/gif.c **** 			default:
 2547              		.loc 1 462 6 is_stmt 1 view .LVU820
 466:Core/Src/gif.c **** 	return 0;
 2548              		.loc 1 466 8 view .LVU821
 466:Core/Src/gif.c **** 	return 0;
 2549              		.loc 1 466 19 is_stmt 0 view .LVU822
 2550 0114 9DF80F30 		ldrb	r3, [sp, #15]	@ zero_extendqisi2
 466:Core/Src/gif.c **** 	return 0;
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccABaL1e.s 			page 58


 2551              		.loc 1 466 2 view .LVU823
 2552 0118 3B2B     		cmp	r3, #59
 2553 011a 7FF47AAF 		bne	.L135
 2554 011e 8DE7     		b	.L128
 2555              	.L136:
 428:Core/Src/gif.c **** 		switch(Introducer)
 2556              		.loc 1 428 17 view .LVU824
 2557 0120 0120     		movs	r0, #1
 2558              	.LVL211:
 428:Core/Src/gif.c **** 		switch(Introducer)
 2559              		.loc 1 428 17 view .LVU825
 2560 0122 8BE7     		b	.L128
 2561              	.LVL212:
 2562              	.L137:
 429:Core/Src/gif.c **** 		{		 
 2563              		.loc 1 429 3 view .LVU826
 2564 0124 0220     		movs	r0, #2
 2565              	.LVL213:
 429:Core/Src/gif.c **** 		{		 
 2566              		.loc 1 429 3 view .LVU827
 2567 0126 89E7     		b	.L128
 2568              	.LVL214:
 2569              	.L138:
 438:Core/Src/gif.c **** 				if(gif->gifISD.flag&0x80)//存在局部颜色表
 2570              		.loc 1 438 19 view .LVU828
 2571 0128 0120     		movs	r0, #1
 2572              	.LVL215:
 438:Core/Src/gif.c **** 				if(gif->gifISD.flag&0x80)//存在局部颜色表
 2573              		.loc 1 438 19 view .LVU829
 2574 012a 87E7     		b	.L128
 2575              	.LVL216:
 2576              	.L141:
 461:Core/Src/gif.c **** 	 			break;
 2577              		.loc 1 461 19 view .LVU830
 2578 012c 0120     		movs	r0, #1
 2579              	.LVL217:
 461:Core/Src/gif.c **** 	 			break;
 2580              		.loc 1 461 19 view .LVU831
 2581 012e 85E7     		b	.L128
 2582              		.cfi_endproc
 2583              	.LFE143:
 2585              		.section	.text.gif_quit,"ax",%progbits
 2586              		.align	1
 2587              		.global	gif_quit
 2588              		.syntax unified
 2589              		.thumb
 2590              		.thumb_func
 2591              		.fpu fpv4-sp-d16
 2593              	gif_quit:
 2594              	.LFB144:
 469:Core/Src/gif.c **** 
 470:Core/Src/gif.c **** //退出当前解码.
 471:Core/Src/gif.c **** void gif_quit(void)
 472:Core/Src/gif.c **** {
 2595              		.loc 1 472 1 is_stmt 1 view -0
 2596              		.cfi_startproc
 2597              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccABaL1e.s 			page 59


 2598              		@ frame_needed = 0, uses_anonymous_args = 0
 2599              		@ link register save eliminated.
 473:Core/Src/gif.c **** 	gifdecoding=0;
 2600              		.loc 1 473 2 view .LVU833
 2601              		.loc 1 473 13 is_stmt 0 view .LVU834
 2602 0000 014B     		ldr	r3, .L146
 2603 0002 0022     		movs	r2, #0
 2604 0004 1A70     		strb	r2, [r3]
 474:Core/Src/gif.c **** }
 2605              		.loc 1 474 1 view .LVU835
 2606 0006 7047     		bx	lr
 2607              	.L147:
 2608              		.align	2
 2609              	.L146:
 2610 0008 00000000 		.word	.LANCHOR3
 2611              		.cfi_endproc
 2612              	.LFE144:
 2614              		.section	.text.gif_decode,"ax",%progbits
 2615              		.align	1
 2616              		.global	gif_decode
 2617              		.syntax unified
 2618              		.thumb
 2619              		.thumb_func
 2620              		.fpu fpv4-sp-d16
 2622              	gif_decode:
 2623              	.LVL218:
 2624              	.LFB145:
 475:Core/Src/gif.c **** 
 476:Core/Src/gif.c **** //解码一个gif文件
 477:Core/Src/gif.c **** //本例子不能显示尺寸大与给定尺寸的gif图片!!!
 478:Core/Src/gif.c **** //filename:带路径的gif文件名字
 479:Core/Src/gif.c **** //x,y,width,height:显示坐标及区域大小.
 480:Core/Src/gif.c **** u8 gif_decode(const u8 *filename,u16 x,u16 y,u16 width,u16 height)
 481:Core/Src/gif.c **** {
 2625              		.loc 1 481 1 is_stmt 1 view -0
 2626              		.cfi_startproc
 2627              		@ args = 4, pretend = 0, frame = 0
 2628              		@ frame_needed = 0, uses_anonymous_args = 0
 2629              		.loc 1 481 1 is_stmt 0 view .LVU837
 2630 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2631              	.LCFI36:
 2632              		.cfi_def_cfa_offset 40
 2633              		.cfi_offset 3, -40
 2634              		.cfi_offset 4, -36
 2635              		.cfi_offset 5, -32
 2636              		.cfi_offset 6, -28
 2637              		.cfi_offset 7, -24
 2638              		.cfi_offset 8, -20
 2639              		.cfi_offset 9, -16
 2640              		.cfi_offset 10, -12
 2641              		.cfi_offset 11, -8
 2642              		.cfi_offset 14, -4
 2643 0004 8246     		mov	r10, r0
 2644 0006 0F46     		mov	r7, r1
 2645 0008 9046     		mov	r8, r2
 2646 000a 1E46     		mov	r6, r3
 2647 000c BDF828B0 		ldrh	fp, [sp, #40]
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccABaL1e.s 			page 60


 482:Core/Src/gif.c **** 	u8 res=0;
 2648              		.loc 1 482 2 is_stmt 1 view .LVU838
 2649              	.LVL219:
 483:Core/Src/gif.c **** 	u16 dtime=0;//解码延时
 2650              		.loc 1 483 2 view .LVU839
 484:Core/Src/gif.c **** 	gif89a *mygif89a;
 2651              		.loc 1 484 2 view .LVU840
 485:Core/Src/gif.c **** 	FIL *gfile;
 2652              		.loc 1 485 2 view .LVU841
 486:Core/Src/gif.c **** #if GIF_USE_MALLOC==1 	//定义是否使用malloc,这里我们选择使用malloc
 487:Core/Src/gif.c **** 	gfile=(FIL*)pic_memalloc(sizeof(FIL));
 2653              		.loc 1 487 2 view .LVU842
 2654              		.loc 1 487 14 is_stmt 0 view .LVU843
 2655 0010 4FF40A70 		mov	r0, #552
 2656              	.LVL220:
 2657              		.loc 1 487 14 view .LVU844
 2658 0014 FFF7FEFF 		bl	pic_memalloc
 2659              	.LVL221:
 488:Core/Src/gif.c **** 	if(gfile==NULL)res=PIC_MEM_ERR;//申请内存失败 
 2660              		.loc 1 488 2 is_stmt 1 view .LVU845
 2661              		.loc 1 488 4 is_stmt 0 view .LVU846
 2662 0018 8146     		mov	r9, r0
 2663 001a E0B1     		cbz	r0, .L163
 482:Core/Src/gif.c **** 	u16 dtime=0;//解码延时
 2664              		.loc 1 482 5 view .LVU847
 2665 001c 0025     		movs	r5, #0
 2666              	.L149:
 2667              	.LVL222:
 489:Core/Src/gif.c **** 	mygif89a=(gif89a*)pic_memalloc(sizeof(gif89a));
 2668              		.loc 1 489 2 is_stmt 1 view .LVU848
 2669              		.loc 1 489 20 is_stmt 0 view .LVU849
 2670 001e 40F21C40 		movw	r0, #1052
 2671              	.LVL223:
 2672              		.loc 1 489 20 view .LVU850
 2673 0022 FFF7FEFF 		bl	pic_memalloc
 2674              	.LVL224:
 490:Core/Src/gif.c **** 	if(mygif89a==NULL)res=PIC_MEM_ERR;//申请内存失败    
 2675              		.loc 1 490 2 is_stmt 1 view .LVU851
 2676              		.loc 1 490 4 is_stmt 0 view .LVU852
 2677 0026 0446     		mov	r4, r0
 2678 0028 B8B1     		cbz	r0, .L171
 2679              	.LVL225:
 2680              	.L150:
 491:Core/Src/gif.c **** 	mygif89a->lzw=(LZW_INFO*)pic_memalloc(sizeof(LZW_INFO));
 2681              		.loc 1 491 2 is_stmt 1 view .LVU853
 2682              		.loc 1 491 27 is_stmt 0 view .LVU854
 2683 002a 43F6F440 		movw	r0, #15604
 2684              	.LVL226:
 2685              		.loc 1 491 27 view .LVU855
 2686 002e FFF7FEFF 		bl	pic_memalloc
 2687              	.LVL227:
 2688              		.loc 1 491 15 view .LVU856
 2689 0032 C4F81804 		str	r0, [r4, #1048]
 492:Core/Src/gif.c **** 	if(mygif89a->lzw==NULL)res=PIC_MEM_ERR;//申请内存失败 
 2690              		.loc 1 492 2 is_stmt 1 view .LVU857
 2691              		.loc 1 492 4 is_stmt 0 view .LVU858
 2692 0036 0028     		cmp	r0, #0
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccABaL1e.s 			page 61


 2693 0038 70D0     		beq	.L165
 493:Core/Src/gif.c **** #else
 494:Core/Src/gif.c **** 	gfile=&f_gfile;
 495:Core/Src/gif.c **** 	mygif89a=&tgif89a;
 496:Core/Src/gif.c **** 	mygif89a->lzw=&tlzw;
 497:Core/Src/gif.c **** #endif
 498:Core/Src/gif.c **** 
 499:Core/Src/gif.c **** 	if(res==0)//OK
 2694              		.loc 1 499 2 is_stmt 1 view .LVU859
 2695              		.loc 1 499 4 is_stmt 0 view .LVU860
 2696 003a 85B1     		cbz	r5, .L172
 2697              	.LVL228:
 2698              	.L151:
 500:Core/Src/gif.c **** 	{
 501:Core/Src/gif.c **** 		res=f_open(gfile,(TCHAR *)filename,FA_READ);
 502:Core/Src/gif.c **** 		if(res==0)//打开文件ok
 503:Core/Src/gif.c **** 		{
 504:Core/Src/gif.c **** 			if(gif_check_head(gfile))res=PIC_FORMAT_ERR;
 505:Core/Src/gif.c **** 			if(gif_getinfo(gfile,mygif89a))res=PIC_FORMAT_ERR;
 506:Core/Src/gif.c **** 			if(mygif89a->gifLSD.width>width||mygif89a->gifLSD.height>height)res=PIC_SIZE_ERR;//尺寸太大.
 507:Core/Src/gif.c **** 			else
 508:Core/Src/gif.c **** 			{
 509:Core/Src/gif.c **** 				x=(width-mygif89a->gifLSD.width)/2+x;
 510:Core/Src/gif.c **** 				y=(height-mygif89a->gifLSD.height)/2+y;
 511:Core/Src/gif.c **** 			}
 512:Core/Src/gif.c **** 			gifdecoding=1;
 513:Core/Src/gif.c **** 			while(gifdecoding&&res==0)//解码循环
 514:Core/Src/gif.c **** 			{	 
 515:Core/Src/gif.c **** 				res=gif_drawimage(gfile,mygif89a,x,y);//显示一张图片
 516:Core/Src/gif.c **** 				if(mygif89a->gifISD.flag&0x80)gif_recovergctbl(mygif89a);//恢复全局颜色表
 517:Core/Src/gif.c **** 				if(mygif89a->delay)dtime=mygif89a->delay;
 518:Core/Src/gif.c **** 				else dtime=10;//默认延时
 519:Core/Src/gif.c **** 				while(dtime--&&gifdecoding)delay_ms(10);//延迟
 520:Core/Src/gif.c **** 				if(res==2)
 521:Core/Src/gif.c **** 				{
 522:Core/Src/gif.c **** 					res=0;
 523:Core/Src/gif.c **** 					break;
 524:Core/Src/gif.c **** 				}
 525:Core/Src/gif.c **** 			}
 526:Core/Src/gif.c **** 		}
 527:Core/Src/gif.c **** 		f_close(gfile);
 528:Core/Src/gif.c **** 	}   
 529:Core/Src/gif.c **** #if GIF_USE_MALLOC==1 	//定义是否使用malloc,这里我们选择使用malloc
 530:Core/Src/gif.c **** 	pic_memfree(gfile);
 2699              		.loc 1 530 2 is_stmt 1 view .LVU861
 2700 003c 4846     		mov	r0, r9
 2701 003e FFF7FEFF 		bl	pic_memfree
 2702              	.LVL229:
 531:Core/Src/gif.c **** 	pic_memfree(mygif89a->lzw);
 2703              		.loc 1 531 2 view .LVU862
 2704 0042 D4F81804 		ldr	r0, [r4, #1048]
 2705 0046 FFF7FEFF 		bl	pic_memfree
 2706              	.LVL230:
 532:Core/Src/gif.c **** 	pic_memfree(mygif89a); 
 2707              		.loc 1 532 2 view .LVU863
 2708 004a 2046     		mov	r0, r4
 2709 004c FFF7FEFF 		bl	pic_memfree
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccABaL1e.s 			page 62


 2710              	.LVL231:
 533:Core/Src/gif.c **** #endif 
 534:Core/Src/gif.c **** 	return res;
 2711              		.loc 1 534 2 view .LVU864
 535:Core/Src/gif.c **** }
 2712              		.loc 1 535 1 is_stmt 0 view .LVU865
 2713 0050 2846     		mov	r0, r5
 2714 0052 BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2715              	.LVL232:
 2716              	.L163:
 488:Core/Src/gif.c **** 	mygif89a=(gif89a*)pic_memalloc(sizeof(gif89a));
 2717              		.loc 1 488 20 view .LVU866
 2718 0056 1125     		movs	r5, #17
 2719 0058 E1E7     		b	.L149
 2720              	.LVL233:
 2721              	.L171:
 490:Core/Src/gif.c **** 	mygif89a->lzw=(LZW_INFO*)pic_memalloc(sizeof(LZW_INFO));
 2722              		.loc 1 490 23 view .LVU867
 2723 005a 1125     		movs	r5, #17
 2724              	.LVL234:
 490:Core/Src/gif.c **** 	mygif89a->lzw=(LZW_INFO*)pic_memalloc(sizeof(LZW_INFO));
 2725              		.loc 1 490 23 view .LVU868
 2726 005c E5E7     		b	.L150
 2727              	.LVL235:
 2728              	.L172:
 501:Core/Src/gif.c **** 		if(res==0)//打开文件ok
 2729              		.loc 1 501 3 is_stmt 1 view .LVU869
 501:Core/Src/gif.c **** 		if(res==0)//打开文件ok
 2730              		.loc 1 501 7 is_stmt 0 view .LVU870
 2731 005e 0122     		movs	r2, #1
 2732 0060 5146     		mov	r1, r10
 2733 0062 4846     		mov	r0, r9
 2734 0064 FFF7FEFF 		bl	f_open
 2735              	.LVL236:
 502:Core/Src/gif.c **** 		{
 2736              		.loc 1 502 3 is_stmt 1 view .LVU871
 502:Core/Src/gif.c **** 		{
 2737              		.loc 1 502 5 is_stmt 0 view .LVU872
 2738 0068 0546     		mov	r5, r0
 2739 006a 18B1     		cbz	r0, .L173
 2740              	.LVL237:
 2741              	.L152:
 527:Core/Src/gif.c **** 	}   
 2742              		.loc 1 527 3 is_stmt 1 view .LVU873
 2743 006c 4846     		mov	r0, r9
 2744 006e FFF7FEFF 		bl	f_close
 2745              	.LVL238:
 2746 0072 E3E7     		b	.L151
 2747              	.LVL239:
 2748              	.L173:
 504:Core/Src/gif.c **** 			if(gif_getinfo(gfile,mygif89a))res=PIC_FORMAT_ERR;
 2749              		.loc 1 504 4 view .LVU874
 504:Core/Src/gif.c **** 			if(gif_getinfo(gfile,mygif89a))res=PIC_FORMAT_ERR;
 2750              		.loc 1 504 7 is_stmt 0 view .LVU875
 2751 0074 4846     		mov	r0, r9
 2752              	.LVL240:
 504:Core/Src/gif.c **** 			if(gif_getinfo(gfile,mygif89a))res=PIC_FORMAT_ERR;
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccABaL1e.s 			page 63


 2753              		.loc 1 504 7 view .LVU876
 2754 0076 FFF7FEFF 		bl	gif_check_head
 2755              	.LVL241:
 504:Core/Src/gif.c **** 			if(gif_getinfo(gfile,mygif89a))res=PIC_FORMAT_ERR;
 2756              		.loc 1 504 6 view .LVU877
 2757 007a 00B1     		cbz	r0, .L153
 504:Core/Src/gif.c **** 			if(gif_getinfo(gfile,mygif89a))res=PIC_FORMAT_ERR;
 2758              		.loc 1 504 32 view .LVU878
 2759 007c 2725     		movs	r5, #39
 2760              	.L153:
 2761              	.LVL242:
 505:Core/Src/gif.c **** 			if(mygif89a->gifLSD.width>width||mygif89a->gifLSD.height>height)res=PIC_SIZE_ERR;//尺寸太大.
 2762              		.loc 1 505 4 is_stmt 1 view .LVU879
 505:Core/Src/gif.c **** 			if(mygif89a->gifLSD.width>width||mygif89a->gifLSD.height>height)res=PIC_SIZE_ERR;//尺寸太大.
 2763              		.loc 1 505 7 is_stmt 0 view .LVU880
 2764 007e 2146     		mov	r1, r4
 2765 0080 4846     		mov	r0, r9
 2766 0082 FFF7FEFF 		bl	gif_getinfo
 2767              	.LVL243:
 505:Core/Src/gif.c **** 			if(mygif89a->gifLSD.width>width||mygif89a->gifLSD.height>height)res=PIC_SIZE_ERR;//尺寸太大.
 2768              		.loc 1 505 6 view .LVU881
 2769 0086 00B1     		cbz	r0, .L154
 505:Core/Src/gif.c **** 			if(mygif89a->gifLSD.width>width||mygif89a->gifLSD.height>height)res=PIC_SIZE_ERR;//尺寸太大.
 2770              		.loc 1 505 38 view .LVU882
 2771 0088 2725     		movs	r5, #39
 2772              	.LVL244:
 2773              	.L154:
 506:Core/Src/gif.c **** 			else
 2774              		.loc 1 506 4 is_stmt 1 view .LVU883
 506:Core/Src/gif.c **** 			else
 2775              		.loc 1 506 23 is_stmt 0 view .LVU884
 2776 008a 2388     		ldrh	r3, [r4]
 506:Core/Src/gif.c **** 			else
 2777              		.loc 1 506 6 view .LVU885
 2778 008c B342     		cmp	r3, r6
 2779 008e 13D8     		bhi	.L168
 506:Core/Src/gif.c **** 			else
 2780              		.loc 1 506 53 discriminator 2 view .LVU886
 2781 0090 6288     		ldrh	r2, [r4, #2]
 506:Core/Src/gif.c **** 			else
 2782              		.loc 1 506 35 discriminator 2 view .LVU887
 2783 0092 5A45     		cmp	r2, fp
 2784 0094 15D8     		bhi	.L169
 509:Core/Src/gif.c **** 				y=(height-mygif89a->gifLSD.height)/2+y;
 2785              		.loc 1 509 5 is_stmt 1 view .LVU888
 509:Core/Src/gif.c **** 				y=(height-mygif89a->gifLSD.height)/2+y;
 2786              		.loc 1 509 13 is_stmt 0 view .LVU889
 2787 0096 F61A     		subs	r6, r6, r3
 509:Core/Src/gif.c **** 				y=(height-mygif89a->gifLSD.height)/2+y;
 2788              		.loc 1 509 37 view .LVU890
 2789 0098 06EBD676 		add	r6, r6, r6, lsr #31
 509:Core/Src/gif.c **** 				y=(height-mygif89a->gifLSD.height)/2+y;
 2790              		.loc 1 509 39 view .LVU891
 2791 009c C6F34F03 		ubfx	r3, r6, #1, #16
 509:Core/Src/gif.c **** 				y=(height-mygif89a->gifLSD.height)/2+y;
 2792              		.loc 1 509 6 view .LVU892
 2793 00a0 1F44     		add	r7, r7, r3
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccABaL1e.s 			page 64


 2794 00a2 BFB2     		uxth	r7, r7
 2795              	.LVL245:
 510:Core/Src/gif.c **** 			}
 2796              		.loc 1 510 5 is_stmt 1 view .LVU893
 510:Core/Src/gif.c **** 			}
 2797              		.loc 1 510 14 is_stmt 0 view .LVU894
 2798 00a4 ABEB020B 		sub	fp, fp, r2
 510:Core/Src/gif.c **** 			}
 2799              		.loc 1 510 39 view .LVU895
 2800 00a8 0BEBDB7B 		add	fp, fp, fp, lsr #31
 510:Core/Src/gif.c **** 			}
 2801              		.loc 1 510 41 view .LVU896
 2802 00ac CBF34F03 		ubfx	r3, fp, #1, #16
 510:Core/Src/gif.c **** 			}
 2803              		.loc 1 510 6 view .LVU897
 2804 00b0 9844     		add	r8, r8, r3
 2805 00b2 1FFA88F8 		uxth	r8, r8
 2806              	.LVL246:
 510:Core/Src/gif.c **** 			}
 2807              		.loc 1 510 6 view .LVU898
 2808 00b6 00E0     		b	.L155
 2809              	.LVL247:
 2810              	.L168:
 506:Core/Src/gif.c **** 			else
 2811              		.loc 1 506 71 view .LVU899
 2812 00b8 2825     		movs	r5, #40
 2813              	.LVL248:
 2814              	.L155:
 512:Core/Src/gif.c **** 			while(gifdecoding&&res==0)//解码循环
 2815              		.loc 1 512 4 is_stmt 1 view .LVU900
 512:Core/Src/gif.c **** 			while(gifdecoding&&res==0)//解码循环
 2816              		.loc 1 512 15 is_stmt 0 view .LVU901
 2817 00ba 194B     		ldr	r3, .L175
 2818 00bc 0122     		movs	r2, #1
 2819 00be 1A70     		strb	r2, [r3]
 513:Core/Src/gif.c **** 			{	 
 2820              		.loc 1 513 4 is_stmt 1 view .LVU902
 513:Core/Src/gif.c **** 			{	 
 2821              		.loc 1 513 9 is_stmt 0 view .LVU903
 2822 00c0 15E0     		b	.L156
 2823              	.LVL249:
 2824              	.L169:
 506:Core/Src/gif.c **** 			else
 2825              		.loc 1 506 71 view .LVU904
 2826 00c2 2825     		movs	r5, #40
 2827              	.LVL250:
 506:Core/Src/gif.c **** 			else
 2828              		.loc 1 506 71 view .LVU905
 2829 00c4 F9E7     		b	.L155
 2830              	.LVL251:
 2831              	.L174:
 516:Core/Src/gif.c **** 				if(mygif89a->delay)dtime=mygif89a->delay;
 2832              		.loc 1 516 35 is_stmt 1 discriminator 1 view .LVU906
 2833 00c6 2046     		mov	r0, r4
 2834 00c8 FFF7FEFF 		bl	gif_recovergctbl
 2835              	.LVL252:
 2836 00cc 20E0     		b	.L157
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccABaL1e.s 			page 65


 2837              	.LVL253:
 2838              	.L161:
 519:Core/Src/gif.c **** 				if(res==2)
 2839              		.loc 1 519 32 discriminator 3 view .LVU907
 2840 00ce 0A20     		movs	r0, #10
 2841 00d0 FFF7FEFF 		bl	delay_ms
 2842              	.LVL254:
 519:Core/Src/gif.c **** 				if(res==2)
 2843              		.loc 1 519 16 is_stmt 0 discriminator 3 view .LVU908
 2844 00d4 5346     		mov	r3, r10
 2845              	.LVL255:
 2846              	.L159:
 519:Core/Src/gif.c **** 				if(res==2)
 2847              		.loc 1 519 10 is_stmt 1 discriminator 1 view .LVU909
 519:Core/Src/gif.c **** 				if(res==2)
 2848              		.loc 1 519 16 is_stmt 0 discriminator 1 view .LVU910
 2849 00d6 03F1FF3C 		add	ip, r3, #-1
 2850 00da 1FFA8CFA 		uxth	r10, ip
 2851              	.LVL256:
 519:Core/Src/gif.c **** 				if(res==2)
 2852              		.loc 1 519 10 discriminator 1 view .LVU911
 2853 00de 1BB1     		cbz	r3, .L160
 519:Core/Src/gif.c **** 				if(res==2)
 2854              		.loc 1 519 18 discriminator 2 view .LVU912
 2855 00e0 0F4B     		ldr	r3, .L175
 2856 00e2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2857 00e4 002B     		cmp	r3, #0
 2858 00e6 F2D1     		bne	.L161
 2859              	.L160:
 520:Core/Src/gif.c **** 				{
 2860              		.loc 1 520 5 is_stmt 1 view .LVU913
 520:Core/Src/gif.c **** 				{
 2861              		.loc 1 520 7 is_stmt 0 view .LVU914
 2862 00e8 022E     		cmp	r6, #2
 2863 00ea BFD0     		beq	.L152
 515:Core/Src/gif.c **** 				if(mygif89a->gifISD.flag&0x80)gif_recovergctbl(mygif89a);//恢复全局颜色表
 2864              		.loc 1 515 9 view .LVU915
 2865 00ec 3546     		mov	r5, r6
 2866              	.LVL257:
 2867              	.L156:
 513:Core/Src/gif.c **** 			{	 
 2868              		.loc 1 513 9 is_stmt 1 view .LVU916
 513:Core/Src/gif.c **** 			{	 
 2869              		.loc 1 513 10 is_stmt 0 view .LVU917
 2870 00ee 0C4B     		ldr	r3, .L175
 2871 00f0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 513:Core/Src/gif.c **** 			{	 
 2872              		.loc 1 513 9 view .LVU918
 2873 00f2 002B     		cmp	r3, #0
 2874 00f4 BAD0     		beq	.L152
 513:Core/Src/gif.c **** 			{	 
 2875              		.loc 1 513 21 discriminator 1 view .LVU919
 2876 00f6 002D     		cmp	r5, #0
 2877 00f8 B8D1     		bne	.L152
 515:Core/Src/gif.c **** 				if(mygif89a->gifISD.flag&0x80)gif_recovergctbl(mygif89a);//恢复全局颜色表
 2878              		.loc 1 515 5 is_stmt 1 view .LVU920
 515:Core/Src/gif.c **** 				if(mygif89a->gifISD.flag&0x80)gif_recovergctbl(mygif89a);//恢复全局颜色表
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccABaL1e.s 			page 66


 2879              		.loc 1 515 9 is_stmt 0 view .LVU921
 2880 00fa 4346     		mov	r3, r8
 2881 00fc 3A46     		mov	r2, r7
 2882 00fe 2146     		mov	r1, r4
 2883 0100 4846     		mov	r0, r9
 2884 0102 FFF7FEFF 		bl	gif_drawimage
 2885              	.LVL258:
 2886 0106 0646     		mov	r6, r0
 2887              	.LVL259:
 516:Core/Src/gif.c **** 				if(mygif89a->delay)dtime=mygif89a->delay;
 2888              		.loc 1 516 5 is_stmt 1 view .LVU922
 516:Core/Src/gif.c **** 				if(mygif89a->delay)dtime=mygif89a->delay;
 2889              		.loc 1 516 8 is_stmt 0 view .LVU923
 2890 0108 94F91030 		ldrsb	r3, [r4, #16]
 516:Core/Src/gif.c **** 				if(mygif89a->delay)dtime=mygif89a->delay;
 2891              		.loc 1 516 7 view .LVU924
 2892 010c 002B     		cmp	r3, #0
 2893 010e DADB     		blt	.L174
 2894              	.L157:
 517:Core/Src/gif.c **** 				else dtime=10;//默认延时
 2895              		.loc 1 517 5 is_stmt 1 view .LVU925
 517:Core/Src/gif.c **** 				else dtime=10;//默认延时
 2896              		.loc 1 517 16 is_stmt 0 view .LVU926
 2897 0110 B4F81434 		ldrh	r3, [r4, #1044]
 517:Core/Src/gif.c **** 				else dtime=10;//默认延时
 2898              		.loc 1 517 7 view .LVU927
 2899 0114 002B     		cmp	r3, #0
 2900 0116 DED1     		bne	.L159
 518:Core/Src/gif.c **** 				while(dtime--&&gifdecoding)delay_ms(10);//延迟
 2901              		.loc 1 518 15 view .LVU928
 2902 0118 0A23     		movs	r3, #10
 2903 011a DCE7     		b	.L159
 2904              	.LVL260:
 2905              	.L165:
 492:Core/Src/gif.c **** #else
 2906              		.loc 1 492 28 view .LVU929
 2907 011c 1125     		movs	r5, #17
 2908              	.LVL261:
 492:Core/Src/gif.c **** #else
 2909              		.loc 1 492 28 view .LVU930
 2910 011e 8DE7     		b	.L151
 2911              	.L176:
 2912              		.align	2
 2913              	.L175:
 2914 0120 00000000 		.word	.LANCHOR3
 2915              		.cfi_endproc
 2916              	.LFE145:
 2918              		.global	gifdecoding
 2919              		.global	_aInterlaceYPos
 2920              		.global	_aInterlaceOffset
 2921              		.global	_aMaskTbl
 2922              		.section	.bss.gifdecoding,"aw",%nobits
 2923              		.set	.LANCHOR3,. + 0
 2926              	gifdecoding:
 2927 0000 00       		.space	1
 2928              		.section	.rodata._aInterlaceOffset,"a"
 2929              		.align	2
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccABaL1e.s 			page 67


 2930              		.set	.LANCHOR1,. + 0
 2933              	_aInterlaceOffset:
 2934 0000 08080402 		.ascii	"\010\010\004\002"
 2935              		.section	.rodata._aInterlaceYPos,"a"
 2936              		.align	2
 2937              		.set	.LANCHOR2,. + 0
 2940              	_aInterlaceYPos:
 2941 0000 00040201 		.ascii	"\000\004\002\001"
 2942              		.section	.rodata._aMaskTbl,"a"
 2943              		.align	2
 2944              		.set	.LANCHOR0,. + 0
 2947              	_aMaskTbl:
 2948 0000 0000     		.short	0
 2949 0002 0100     		.short	1
 2950 0004 0300     		.short	3
 2951 0006 0700     		.short	7
 2952 0008 0F00     		.short	15
 2953 000a 1F00     		.short	31
 2954 000c 3F00     		.short	63
 2955 000e 7F00     		.short	127
 2956 0010 FF00     		.short	255
 2957 0012 FF01     		.short	511
 2958 0014 FF03     		.short	1023
 2959 0016 FF07     		.short	2047
 2960 0018 FF0F     		.short	4095
 2961 001a FF1F     		.short	8191
 2962 001c FF3F     		.short	16383
 2963 001e FF7F     		.short	32767
 2964              		.text
 2965              	.Letext0:
 2966              		.file 2 "d:\\install\\gnu arm embedded toolchain\\10 2020-q4-major\\arm-none-eabi\\include\\machin
 2967              		.file 3 "d:\\install\\gnu arm embedded toolchain\\10 2020-q4-major\\arm-none-eabi\\include\\sys\\_
 2968              		.file 4 "Core/Inc/stm32f4xx.h"
 2969              		.file 5 "Core/Inc/integer.h"
 2970              		.file 6 "Core/Inc/ff.h"
 2971              		.file 7 "Core/Inc/gif.h"
 2972              		.file 8 "Core/Inc/piclib.h"
 2973              		.file 9 "Core/Inc/delay.h"
 2974              		.file 10 "Core/Inc/malloc.h"
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccABaL1e.s 			page 68


DEFINED SYMBOLS
                            *ABS*:00000000 gif.c
C:\Users\ADMIN\AppData\Local\Temp\ccABaL1e.s:18     .text.gif_check_head:00000000 $t
C:\Users\ADMIN\AppData\Local\Temp\ccABaL1e.s:26     .text.gif_check_head:00000000 gif_check_head
C:\Users\ADMIN\AppData\Local\Temp\ccABaL1e.s:127    .text.gif_getrgb565:00000000 $t
C:\Users\ADMIN\AppData\Local\Temp\ccABaL1e.s:134    .text.gif_getrgb565:00000000 gif_getrgb565
C:\Users\ADMIN\AppData\Local\Temp\ccABaL1e.s:177    .text.gif_readcolortbl:00000000 $t
C:\Users\ADMIN\AppData\Local\Temp\ccABaL1e.s:184    .text.gif_readcolortbl:00000000 gif_readcolortbl
C:\Users\ADMIN\AppData\Local\Temp\ccABaL1e.s:273    .text.gif_getinfo:00000000 $t
C:\Users\ADMIN\AppData\Local\Temp\ccABaL1e.s:280    .text.gif_getinfo:00000000 gif_getinfo
C:\Users\ADMIN\AppData\Local\Temp\ccABaL1e.s:359    .text.gif_savegctbl:00000000 $t
C:\Users\ADMIN\AppData\Local\Temp\ccABaL1e.s:366    .text.gif_savegctbl:00000000 gif_savegctbl
C:\Users\ADMIN\AppData\Local\Temp\ccABaL1e.s:409    .text.gif_recovergctbl:00000000 $t
C:\Users\ADMIN\AppData\Local\Temp\ccABaL1e.s:416    .text.gif_recovergctbl:00000000 gif_recovergctbl
C:\Users\ADMIN\AppData\Local\Temp\ccABaL1e.s:459    .text.gif_initlzw:00000000 $t
C:\Users\ADMIN\AppData\Local\Temp\ccABaL1e.s:466    .text.gif_initlzw:00000000 gif_initlzw
C:\Users\ADMIN\AppData\Local\Temp\ccABaL1e.s:569    .text.gif_getdatablock:00000000 $t
C:\Users\ADMIN\AppData\Local\Temp\ccABaL1e.s:576    .text.gif_getdatablock:00000000 gif_getdatablock
C:\Users\ADMIN\AppData\Local\Temp\ccABaL1e.s:679    .text.gif_readextension:00000000 $t
C:\Users\ADMIN\AppData\Local\Temp\ccABaL1e.s:686    .text.gif_readextension:00000000 gif_readextension
C:\Users\ADMIN\AppData\Local\Temp\ccABaL1e.s:827    .text.gif_getnextcode:00000000 $t
C:\Users\ADMIN\AppData\Local\Temp\ccABaL1e.s:834    .text.gif_getnextcode:00000000 gif_getnextcode
C:\Users\ADMIN\AppData\Local\Temp\ccABaL1e.s:1096   .text.gif_getnextcode:00000134 $d
C:\Users\ADMIN\AppData\Local\Temp\ccABaL1e.s:1102   .text.gif_getnextbyte:00000000 $t
C:\Users\ADMIN\AppData\Local\Temp\ccABaL1e.s:1109   .text.gif_getnextbyte:00000000 gif_getnextbyte
C:\Users\ADMIN\AppData\Local\Temp\ccABaL1e.s:1489   .text.gif_dispimage:00000000 $t
C:\Users\ADMIN\AppData\Local\Temp\ccABaL1e.s:1496   .text.gif_dispimage:00000000 gif_dispimage
C:\Users\ADMIN\AppData\Local\Temp\ccABaL1e.s:1942   .text.gif_dispimage:000001e4 $d
C:\Users\ADMIN\AppData\Local\Temp\ccABaL1e.s:1949   .text.gif_clear2bkcolor:00000000 $t
C:\Users\ADMIN\AppData\Local\Temp\ccABaL1e.s:1956   .text.gif_clear2bkcolor:00000000 gif_clear2bkcolor
C:\Users\ADMIN\AppData\Local\Temp\ccABaL1e.s:2297   .text.gif_clear2bkcolor:00000184 $d
C:\Users\ADMIN\AppData\Local\Temp\ccABaL1e.s:2302   .text.gif_drawimage:00000000 $t
C:\Users\ADMIN\AppData\Local\Temp\ccABaL1e.s:2309   .text.gif_drawimage:00000000 gif_drawimage
C:\Users\ADMIN\AppData\Local\Temp\ccABaL1e.s:2586   .text.gif_quit:00000000 $t
C:\Users\ADMIN\AppData\Local\Temp\ccABaL1e.s:2593   .text.gif_quit:00000000 gif_quit
C:\Users\ADMIN\AppData\Local\Temp\ccABaL1e.s:2610   .text.gif_quit:00000008 $d
C:\Users\ADMIN\AppData\Local\Temp\ccABaL1e.s:2615   .text.gif_decode:00000000 $t
C:\Users\ADMIN\AppData\Local\Temp\ccABaL1e.s:2622   .text.gif_decode:00000000 gif_decode
C:\Users\ADMIN\AppData\Local\Temp\ccABaL1e.s:2914   .text.gif_decode:00000120 $d
C:\Users\ADMIN\AppData\Local\Temp\ccABaL1e.s:2926   .bss.gifdecoding:00000000 gifdecoding
C:\Users\ADMIN\AppData\Local\Temp\ccABaL1e.s:2940   .rodata._aInterlaceYPos:00000000 _aInterlaceYPos
C:\Users\ADMIN\AppData\Local\Temp\ccABaL1e.s:2933   .rodata._aInterlaceOffset:00000000 _aInterlaceOffset
C:\Users\ADMIN\AppData\Local\Temp\ccABaL1e.s:2947   .rodata._aMaskTbl:00000000 _aMaskTbl
C:\Users\ADMIN\AppData\Local\Temp\ccABaL1e.s:2927   .bss.gifdecoding:00000000 $d
C:\Users\ADMIN\AppData\Local\Temp\ccABaL1e.s:2929   .rodata._aInterlaceOffset:00000000 $d
C:\Users\ADMIN\AppData\Local\Temp\ccABaL1e.s:2936   .rodata._aInterlaceYPos:00000000 $d
C:\Users\ADMIN\AppData\Local\Temp\ccABaL1e.s:2943   .rodata._aMaskTbl:00000000 $d

UNDEFINED SYMBOLS
f_read
mymemset
f_lseek
pic_phy
pic_memalloc
pic_memfree
f_open
f_close
ARM GAS  C:\Users\ADMIN\AppData\Local\Temp\ccABaL1e.s 			page 69


delay_ms
